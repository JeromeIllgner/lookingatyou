{"version":3,"sources":["img/eye.png","AppConstants.ts","utils/objectTracking/calculateFocus.ts","utils/pose/animations.ts","utils/utils.ts","utils/pose/poseDetection.ts","store/selectors/configSelectors.ts","utils/objectSelection/select.ts","store/selectors/videoSelectors.ts","store/selectors/detectionSelectors.ts","store/actions/creators.ts","components/webcamHandler/WebcamHandler.ts","store/actions/video/types.ts","store/actions/video/actions.ts","store/actions/detections/types.ts","store/actions/detections/actions.ts","store/actions/config/types.ts","store/actions/config/actions.ts","components/configMenu/Help.tsx","components/configMenu/DrawPoseUtils.ts","components/configMenu/menuItems/CanvasMenuItem.tsx","components/configMenu/WarningPopupHandler.tsx","components/configMenu/menuItems/CheckBoxMenuItem.tsx","components/configMenu/menuItems/DropDownMenuItem.tsx","components/configMenu/menuItems/NumberMenuItem.tsx","components/configMenu/menuItems/SliderMenuItem.tsx","components/configMenu/AdvancedConfigItems.tsx","components/configMenu/menuItems/ColorPopup.tsx","components/configMenu/menuItems/ColorMenuItem.tsx","components/configMenu/UserConfigItems.tsx","components/configMenu/ConfigMenu.tsx","components/helpPopup/HelpPopup.tsx","store/reducers/configReducer.ts","components/eye/eyeParts/Eyelids.tsx","components/eye/eyeParts/innerParts/Iris.tsx","components/eye/eyeParts/innerParts/Pupil.tsx","components/eye/eyeParts/innerParts/Reflection.tsx","components/eye/eyeParts/innerParts/Shines.tsx","components/eye/eyeParts/Sclera.tsx","components/eye/Eye.tsx","components/eye/utils/EyeShapeUtils.ts","components/eye/Gradients.tsx","components/eye/Shadows.tsx","components/eye/utils/MovementUtils.ts","components/eye/utils/ReflectionUtils.ts","components/eye/utils/VisualUtils.ts","components/eye/EyeController.tsx","components/intelligentMovement/ManualMovementHandler.tsx","components/fadeInText/FadeInConstants.ts","components/fadeInText/FadeInText.tsx","components/intelligentMovement/MovementHandler.tsx","components/noWebcamPopup/NoWebcamPopup.tsx","components/video/Video.tsx","components/video/VideoHandler.tsx","App.tsx","serviceWorker.ts","store/reducers/detectionReducer.ts","store/reducers/videoReducer.ts","store/reducers/rootReducer.ts","store/store.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","EyeSide","Pose","eyelidPosition","OPEN","CLOSED","SQUINT","SHOCKED","pupilSizes","dilated","neutral","constricted","transitionTimes","blink","peek","intervals","debugFeedColors","idleMovementConsts","moveCenterChance","moveSideChance","xDelta","sideBuffer","lightConsts","maxBrightness","dilationMultipler","dilationOffset","blinkConsts","frequency","focusedFrequency","peekFrequency","movementThreshold","debugFeedConsts","canvasScale","lineWidth","minConfidence","pointRadius","colorCheckConsts","yOffset","xOffset","bodyParts","RIGHT_SHOULDER","LEFT_SHOULDER","RIGHT_HIP","fisheyeConsts","intensity","targetingConsts","minInterval","maxInterval","maxNum","eyeCoefficients","sclera","iris","pupil","configMenuConsts","minPoseConfidence","minIrisScale","centerPoint","x","y","animationCooldownTimeout","calculateTargetPos","bbox","_bbox","Object","slicedToArray","calculateNormalisedPos","width","height","position","normalise","val","max","min","arguments","length","undefined","newMax","newMin","wink","openCoefficient","duration","leftWink","_openCoefficient","defineProperty","LEFT","RIGHT","rightWink","_openCoefficient2","dilation","shock","rollEyes","path","i","theta","Math","PI","sin","cos","push","target","dab","animation","random","irisColor","toString","animationMapping","_animationMapping","LEFT_WAVE","RIGHT_WAVE","HANDS_UP","ARMS_OUT","DAB","HANDS_HIPS","keyToPose","t","d","l","r","u","reshapeDetections","detections","map","detection","keypoints","box","getBoundingBox","partIds","leftEye","rightEye","minX","minY","maxX","maxY","info","getImageDataFromVideo","video","document","canvas","createElement","canvasCtx","getContext","drawImage","getImageData","checkAngle","point1","point2","point3","inf","sup","angle","pointA","pointB","pointC","sideC","hypot","sideA","sideB","acos","pow","getAngle","poseMapping","_poseMapping","pose","isValidLeftDab","checkKeypoints","leftWrist","rightWrist","leftShoulder","leftElbow","isValidLeftArmAngle","isValidRightArmAngle","rightShoulder","rightElbow","isArmPointingToTheSky","armPointingUp","checkLeftDab","isValidRightDab","checkRightDab","areValidPoints","areArmsAboveEyes","areArmsPointingUp","isLeftArmOut","isLeftWristShoulderHeight","isWristAtShoulderHeight","isRightArmOut","isRightWristShoulderHeight","wave","_pose","objectSpread","leftHip","rightHip","isValidLeftElbowAngle","isValidLeftShoulderAngle","isValidRightElbowAngle","isValidRightShoulderAngle","isBelow","getPose","selection","poseKeypoints","getPoseKeypoints","keys","find","element","wavingWrist","wavingElbow","stationaryWrist","stationaryElbow","areValidWavingPoints","areValidStationaryPoints","pointingUpAngle","atan2","isValidAngle","isWavingWristAboveElbow","isStationaryWristBelowElbow","wrist","shoulder","elbow","a","b","_len","points","Array","_key","some","point","score","getConfig","state","configStore","getAppConfig","appConfig","getAdvancedConfig","advancedConfig","getFPS","fps","getShowHelp","showHelp","select","compare","filter","reduce","best","current","getAvgColor","xStart","yStart","xEnd","yEnd","imageData","L","data","counter","j","imgR","imgG","imgB","_convert$rgb$lab","convert","rgb","lab","_convert$rgb$lab2","_convert$lab$rgb","_convert$lab$rgb2","g","getXStart","keypoint","part","abs","round","getYStart","closerToPrediction","prediction","avgColor","detection1","detection2","normalisedCoords1","normalisedCoords2","person2DistanceFromPrediction","person1DistanceFromPrediction","keypoints1","keypoints2","x1Start","x2Start","x1End","x2End","y1Start","y2Start","y1End","y2End","box1AvgColor","box2AvgColor","box1GreenDelta","box1BlueDelta","box1RedDelta","closerToColor","getWeightedPrediction","nums","weightedNums","decayTotal","diffNums","decay","getWeightedAverage","reverse","first","getVideo","videoStore","videoElement","getWebcamAvailable","webcamAvailable","image","getDetections","detectionStore","getSelections","createSelector","history","color","previousTargets","previousColours","normalisedXCoords","normalisedYCoords","getPredictedTarget","rHistory","gHistory","bHistory","getPredictedColor","getTargets","selections","videoDimensions","getColor","calculateColorMatch","getAnimations","getAnimationExists","createActionPayload","actionType","payload","type","createAction","configureStream","_x","_configureStream","apply","this","_callee","mediaDevices","stream","streamSettings","regenerator_default","wrap","_context","prev","next","getUserMedia","sent","getVideoTracks","getSettings","abrupt","t0","stop","VideoSetAction","setVideoAction","setVideoStreamAction","toggleWebcamAvailable","setImageDataAction","SET_INTERVAL","loadModel","window","_ref","asyncToGenerator","mark","dispatch","getState","config","model","setModel","load","modelConfig","restartDetection","_x2","handleDetection","clearInterval","detectionInterval","id","setInterval","_ref2","_callee2","detectionConfig","poseAnimation","_context2","estimateMultiplePoses","t1","setDetectionsAndMaybeSwapTarget","animationCoolDown","setAnimation","toggleAnimationCoolDown","setTimeout","_x3","_x4","now","Date","getTime","nextSelectionSwapTime","setDetections","previousTarget","previousColor","previousSelection","selectionTargetPos","closestIndex","closestDistance","Number","MAX_SAFE_INTEGER","forEach","index","targetPos","distance","splice","removeClosestToSelection","selectionIndex","floor","swapSelection","ConfigSetAction","updateConfigAction","partialConfig","setConfigAction","APP","hasOwnProperty","MODEL","outputStride","multiplier","parseModelConfig","parsedConfig","architecture","parseInt","inputResolution","parseFloat","HelpWith","appHelp","FPS","IRIS_COLOR","Y_SENSITIVITY","X_SENSITIVITY","helpSections","react_default","react","VIDEO_STREAM","DEBUG","REFLECTION","REFLECTION_OPACITY","ARCHITECTURE","OUTPUT_STRIDE","RESOLUTION","MULTIPLIER","DETECTIONS","MIN_SCORE","NMS_RADIUS","Help","props","className","problemWith","dist_default","place","effect","section","Component","text","drawPose","getAdjacentKeyPoints","pair1","pair2","scale","ctx","beginPath","moveTo","lineTo","strokeStyle","stroke","drawSegment","drawSkeleton","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","value","_keypoint$position","drawPoint","err","return","drawKeypoints","arc","fillStyle","fill","CanvasMenuItem","_React$Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","canvasRef","HTMLCanvasElement","React","createRef","getStream","bind","assertThisInitialized","inherits","createClass","key","previousProps","nextProps","videoIndex","focusedPose","handleDrawing","data-tip","data-for","helpWith","name","ref","clearRect","drawVideo","drawPoses","every","connect","WarningPopupHandler","memo","_useState","useState","showModal","_useState2","setShowModal","useEffect","Fragment","reactjs_popup_es","open","modal","closeOnDocumentClick","closeOnEscape","warning","Button","variant","onClick","accept","decline","CheckBoxMenuItem","onChange","event","checked","onInputChange","configName","checkBox","FormControl","FormControlLabel","control","Checkbox","label","labelPlacement","configMenu_WarningPopupHandler","previous","DropDownMenuItem","Select","defaultValue","values","MenuItem","NumberMenuItem","isValid","setIsValid","_useState3","_useState4","setValue","_useState5","_useState6","lastValidValue","setLastValidValue","TextField","newValue","newIsValid","noDecimals","isInteger","isNaN","onValidInput","onBlur","error","margin","ValueLabelComponent","children","popperRef","useRef","update","Tooltip","PopperProps","enterTouchDelay","placement","title","SliderMenuItem","Slider","aria-label","ignore","step","AdvancedConfig","menuItems_CheckBoxMenuItem","toggleReflection","updateAdvancedConfig","menuItems_SliderMenuItem","reflectionOpacity","toggleDebug","menuItems_CanvasMenuItem","menuItems_DropDownMenuItem","updateModelConfig","menuItems_NumberMenuItem","maxDetections","updateDetectionConfig","scoreThreshold","nmsRadius","ColorPopup","showPopup","lib","onChangeComplete","hex","disableAlpha","close","ColorMenuItem","style","backgroundColor","_convert$hex$rgb","_convert$hex$rgb2","getTextColor","UserConfig","updateAppConfig","xSensitivity","ySensitivity","menuItems_ColorMenuItem","colorPopupOnClick","toggleAdvanced","ConfigMenu","hideTimeout","leftPosition","isUnderMouse","showColorPopup","onMouseEnter","onMouseLeave","mouseMoveHandler","toggleShowColorPopup","addEventListener","_this2","setState","body","cursor","nextState","isEqual","removeEventListener","_this3","left","assign","resetConfig","includes","configMenu_Help","menuItems_ColorPopup","ownProps","ADVANCED","DETECTION","RESET","setShowHelpToFalse","onClose","href","rel","initialAppConfig","initialConfig","flipHorizontal","configActionMapping","_configActionMapping","action","Eyelids","bezier","scleraRadius","eyeHeight","renderEyelid","isTop","concat","sign","shape","right","cornerShape","rightTop","leftTop","rightBottom","leftBottom","transitionStyle","scaledXcontrolOffset","scaledYcontrolOffset","controlOffset","Iris","groupProps","innerPath","tinycolor","darken","toHexString","Pupil","pupilRadius","useGradient","transform","Reflection","reflection","putImageData","size","Shines","irisRadius","rx","ry","Sclera","Eye","class","eyelidTransitionStyle","transition","innerProps","skewTransform","viewBox","innerParts_Iris","Gradients","darkIrisColor","lightIrisColor","brighten","x1","y1","x2","y2","offset","stopColor","cx","cy","stopOpacity","Shadows","dx","dy","stdDeviation","floodColor","floodOpacity","confineToCircle","radius","hypotenuse","getReflection","ImageData","crop","boxSize","sourceX","sourceY","sourceWidth","sourceHeight","getCrop","diameter","imgData","result","pixels","Uint8ClampedArray","currRow","normalisedY","currColumn","normalisedX","normalisedRadius","radiusScaling","sqrt","xScale","yScale","newX","newY","srcpos","fisheye","set","irisMatrixTransform","xDivR","yDivR","xDivR2","yDivR2","skew","EyeController","environment","updateAnimation","sectors","innerRadius","outerRadius","radianStep","innerOffset","currInnerPath","currRadianStep","generateInnerPath","reflectionRef","animationExists","frame","isSleeping","detectedRef","detected","peekInterval","peekProbability","openLeft","openRight","_openCoefficient3","_openCoefficient4","peekHandler","blinkInterval","blinkFrequency","blinkProbability","blinkHandler","timer","myAnimation","toConsumableArray","shift","clearTimeout","handleKeyUpEventHandler","keyAnimation","handleKeyUp","eye","getBezier","Eye_Eye","Gradients_Gradients","stateProps","dispatchProps","ManualMovementHandler","setTarget","throttledMouseMoveHandler","throttle","ev","clientX","clientY","eye_EyeController","userInteraction","texts","phrase","delay","textDuration","fadeInText","transitionTime","fontSize","defaultTextLength","FadeInText","opacity","show","transitionDelay","transitionTimingFunction","MovementHandler","movementInterval","sleepTimeout","textTimeout","hasMovedLeft","showText","dilationCoefficient","personDetected","animateEye","sleep","checkSelection","calculateBrightness","brightness","colorSum","analyseLight","setNewTarget","startTextTimer","setNoTarget","isLeft","xDistance","naturalMovement","wake","totalFrequency","fadeInText_FadeInText","NoWebcamPopup","getStreamForDevice","setVideo","autoPlay","srcObject","VideoHandler","_props","ondevicechange","video_Video","setStream","App","innerWidth","innerHeight","updateDimensions","setDoShowPopup","_componentDidMount","video_VideoHandler","src","eyeImage","alt","helpPopup_HelpPopup","intelligentMovement_MovementHandler","components_configMenu_ConfigMenu","localStorage","setItem","Boolean","location","hostname","match","initialState","eyesOpenCoefficient","detectionActionMapping","_detectionActionMappi","newHistory","videoActionMapping","_videoActionMapping","IMAGE_DATA","TOGGLE_WEBCAM","VIDEO","combineReducers","states","middleware","thunk","save","getEnvironment","store","savedStateIsValid","savedState","previousConfigState","hasPropertiesOf","source","requiredProps","getOwnPropertyNames","prop","createReduxStore","reducer","applyMiddleware","createStore","ReactDOM","render","es","src_App_0","navigator","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,6ZCA5BC,EAIAC,kKAJAD,sDAIAC,mJAQL,IAMMC,EAAiB,CAC1BC,KAAM,IACNC,OAAQ,EACRC,OAAQ,GACRC,QAAS,KAEAC,EAAa,CACtBC,QAAS,IACTC,QAAS,EACTC,YAAa,IAEJC,EAAkB,CAC3BC,MAAO,IACPC,KAAM,KAEGC,EACF,KAEEC,EACD,QADCA,EAEF,MAMEC,EAAqB,CAC9BC,iBAAkB,GAClBC,eAAgB,GAChBC,OAAQ,GACRC,WAAY,IAEHC,EAAc,CACvBC,cAAe,IACfC,kBAAmB,IACnBC,eAAgB,IAEPC,EAAc,CACvBC,UAAW,IACXC,iBAAkB,MAClBC,cAAe,MACfC,kBAAmB,IAEVC,EAAkB,CAC3BC,YAAa,EACbC,UAAW,EACXC,cAAe,GACfC,YAAa,GAEJC,EAAmB,CAC5BC,QAAS,GACTC,QAAS,IAEAC,EAAY,CACrBC,eAAgB,gBAChBC,cAAe,eACfC,UAAW,YAEFC,EAAgB,CACzBC,UAAW,IAEFC,EAAkB,CAC3BC,YAAa,IACbC,YAAa,IACbC,OAAQ,GAECC,EAAkB,CAC3BC,OAAQ,GACRC,KAAM,GACNC,MAAO,KAEEC,EACK,IADLA,EAEF,SAFEA,EAGA,uBAIAC,EAAoB,GACpBC,EAAe,GAEfC,EAAc,CAAEC,EAAG,EAAGC,EAAG,GAGzBC,EAA2B,oBCpGzB,SAASC,EAAmBC,GAAqB,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAC9BF,EAD8B,GACrDJ,EADqDK,EAAA,GAClDJ,EADkDI,EAAA,GAE5D,MAAO,CAAEL,EAAGA,EAFgDK,EAAA,GAEpC,EAAGJ,EAAGA,EAF8BI,EAAA,GAEjB,GAGxC,SAASG,EACZJ,EACAK,EACAC,GAEA,IAAMC,EAAWR,EAAmBC,GACpC,MAAO,CACHJ,EAAGY,EAAUD,EAASX,EAAGS,GACzBR,EAAGW,EAAUD,EAASV,EAAGS,IAI1B,SAASE,EACZC,EACAC,GAIM,IAHNC,EAGMC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAHQ,EACdG,EAEMH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFW,EACjBI,EACMJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,IADY,EAGlB,OADoBH,EAAME,IAAQD,EAAMC,IACnBI,EAASC,GAAUA,eCJ/BC,EAAO,CAChBC,gBAAiB5E,EAAeC,KAChC4E,SAAU,KAGDC,EAA4B,eAAAC,EAAA,MAAM,CAC3C,CACIH,iBAAeG,EAAA,GAAAnB,OAAAoB,EAAA,EAAApB,CAAAmB,EACVjF,EAAQmF,KAAOjF,EAAeE,QADpB0D,OAAAoB,EAAA,EAAApB,CAAAmB,EAEVjF,EAAQoF,MAAQlF,EAAeC,MAFrB8E,GAIfF,SAAU,KAEdF,IAGSQ,EAA6B,eAAAC,EAAA,MAAM,CAC5C,CACIR,iBAAeQ,EAAA,GAAAxB,OAAAoB,EAAA,EAAApB,CAAAwB,EACVtF,EAAQoF,MAAQlF,EAAeE,QADrB0D,OAAAoB,EAAA,EAAApB,CAAAwB,EAEVtF,EAAQmF,KAAOjF,EAAeC,MAFpBmF,GAIfP,SAAU,KAEdF,IAGEnE,GAAc,CAChB6E,SAAUhF,EAAWG,YACrBoE,gBAAiB5E,EAAeI,QAChCyE,SAAU,KAGRvE,GAAU,CACZ+E,SAAUhF,EAAWC,QACrBsE,gBAAiB5E,EAAeG,OAChC0E,SAAU,KAGDS,GAAyB,iBAAM,CACxC,CACID,SAAUhF,EAAWC,QACrBsE,gBAAiB5E,EAAeG,OAChC0E,SAAU,KAEdrE,GACAF,GACAE,GACAF,KAGG,SAASiF,KAKZ,IAJA,IAAMC,EAAO,GAIJC,EAAI,EAAGA,GADI,GACcA,IAAK,CACnC,IACMC,EADoB,EAAVC,KAAKC,GAFL,GAGOH,EAEjBlC,EANK,GAMQoC,KAAKE,IAAIH,GACtBpC,EAPK,GAOQqC,KAAKG,IAAIJ,GAE5BF,EAAKO,KAAK,CAAEC,OAAQ,CAAE1C,IAAGC,KAAKsB,SAAU,MAG5C,OAAOW,EAGJ,SAASS,KAEZ,IADA,IAAMC,EAAY,GACTT,EAAI,EAAGA,EAAI,GAAIA,IACpBS,EAAUH,KAAK,CACXC,OAAQ,CACJ1C,EAAGY,EAAUyB,KAAKQ,SAAU,GAC5B5C,EAAGW,EAAUyB,KAAKQ,SAAU,IAEhCC,UAAW,MAAS,GAAK,IAAMT,KAAKQ,SAAY,GAAGE,SAAS,IAC5DxB,SAAU,IACVD,gBACI5E,EAAeC,KAAQD,EAAeC,KAAOwF,EAAK,KAG9D,OAAOS,EAqFJ,OAAMI,IAEZC,EAAA,GAAA3C,OAAAoB,EAAA,EAAApB,CAAA2C,EACIxG,EAAKyG,UAAYrB,GADrBvB,OAAAoB,EAAA,EAAApB,CAAA2C,EAEIxG,EAAK0G,WAAa3B,GAFtBlB,OAAAoB,EAAA,EAAApB,CAAA2C,EAGIxG,EAAK2G,SAAWnB,IAHpB3B,OAAAoB,EAAA,EAAApB,CAAA2C,EAIIxG,EAAK4G,SAAWrB,IAJpB1B,OAAAoB,EAAA,EAAApB,CAAA2C,EAKIxG,EAAK6G,IAAMX,IALfrC,OAAAoB,EAAA,EAAApB,CAAA2C,EAMIxG,EAAK8G,WA5BH,WACH,MAAO,CACH,CACIjC,gBAAiB5E,EAAeG,OAChC6F,OAAQ,CAAE1C,EAAG,EAAGC,EAAG,GACnBsB,SAAU,KAEd,CACID,gBAAiB5E,EAAeG,OAChC6F,OAAQ,CAAE1C,EAAG,EAAGC,EAAG,GACnBsB,SAAU,KAEd,CACID,gBAAiB5E,EAAeC,KAChC+F,OAAQ,CAAE1C,EAAG,EAAGC,EAAG,GACnBsB,SAAU,QAOrB0B,GASYO,GAAgD,CACzDC,EAAGzB,GACH0B,EAAGf,GACHgB,EAAGnC,EACHoC,EAAG/B,EACHgC,EAAG5B,aClMA,SAAS6B,GAAkBC,GAC9B,OAAOA,EAAWC,IAAI,SAAAC,GAClB,IAAMC,EAAYD,EAAUC,UACtBC,EAAMC,YAAe,CACvBF,EAAUG,IAAQC,SAClBJ,EAAUG,IAAQE,YAEtB,MAAO,CACHnE,KAAM,CACF+D,EAAIK,KACJL,EAAIM,KACJN,EAAIO,KAAOP,EAAIK,KACfL,EAAIQ,KAAOR,EAAIM,MAEnBG,KAAMX,KAKX,SAASY,GACZC,EACAC,GAEA,GAAID,EAAO,CACP,IAAME,EAASD,EAASE,cAAc,UACtCD,EAAOtE,OAASoE,EAAMpE,OACtBsE,EAAOvE,MAAQqE,EAAMrE,MACrB,IAAMyE,EAAYF,EAAOG,WAAW,MACpC,GAAID,EAEA,OADAA,EAAUE,UAAUN,EAAO,EAAG,EAAGE,EAAOvE,MAAOuE,EAAOtE,QAC/CwE,EAAUG,aAAa,EAAG,EAAGL,EAAOvE,MAAOuE,EAAOtE,QAGjE,OAAO,KAGJ,SAAS4E,GACZC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAS,IAInB,SACIC,EACAC,EACAC,GAEA,IAAMC,EAAQ3D,KAAK4D,MACfJ,EAAOlF,SAASX,EAAI8F,EAAOnF,SAASX,EACpC6F,EAAOlF,SAASV,EAAI6F,EAAOnF,SAASV,GAElCiG,EAAQ7D,KAAK4D,MACfH,EAAOnF,SAASX,EAAI+F,EAAOpF,SAASX,EACpC8F,EAAOnF,SAASV,EAAI8F,EAAOpF,SAASV,GAElCkG,EAAQ9D,KAAK4D,MACfF,EAAOpF,SAASX,EAAI6F,EAAOlF,SAASX,EACpC+F,EAAOpF,SAASV,EAAI4F,EAAOlF,SAASV,GAGxC,OAAOoC,KAAK+D,MACP/D,KAAKgE,IAAIL,EAAO,GAAK3D,KAAKgE,IAAIH,EAAO,GAAK7D,KAAKgE,IAAIF,EAAO,KACtD,EAAIH,EAAQE,IAxBAI,CAASf,EAAQC,EAAQC,GAAWpD,KAAKC,GAC9D,OAAOsD,GAASF,GAAOE,GAASD,ECvCpC,IAAMY,IAAsEC,GAAA,GAAAlG,OAAAoB,EAAA,EAAApB,CAAAkG,GACvE/J,EAAK6G,IAiLV,SAAamD,GACT,IAAMC,EA2CV,SAAsBD,GAClB,IACKE,GACGF,EAAKG,UACLH,EAAKnC,QACLmC,EAAKI,WACLJ,EAAKK,aACLL,EAAKM,WAGT,OAAO,EAGX,IAAMC,EAAsB1B,GACxBmB,EAAKK,aACLL,EAAKM,UACLN,EAAKG,UACL,IACA,KAGEK,EAAuB3B,GACzBmB,EAAKS,cACLT,EAAKU,WACLV,EAAKI,WACL,GACA,IAGEO,EACFX,EAAKG,UAAUjG,SAASX,EAAIyG,EAAKM,UAAUpG,SAASX,GACpDyG,EAAKM,UAAUpG,SAASX,EAAIyG,EAAKK,aAAanG,SAASX,GACvDqH,GAAcZ,EAAKG,UAAWH,EAAKM,UAAWN,EAAKK,cAEvD,OAAOE,GAAuBC,GAAwBG,EA7E/BE,CAAab,GAC9Bc,EAKV,SAAuBd,GACnB,IACKE,GACGF,EAAKG,UACLH,EAAKlC,SACLkC,EAAKI,WACLJ,EAAKU,WACLV,EAAKS,eAGT,OAAO,EAGX,IAAMD,EAAuB3B,GACzBmB,EAAKS,cACLT,EAAKU,WACLV,EAAKI,WACL,IACA,KAGEG,EAAsB1B,GACxBmB,EAAKK,aACLL,EAAKM,UACLN,EAAKG,UACL,GACA,IAGEQ,EACFX,EAAKI,WAAWlG,SAASX,EAAIyG,EAAKU,WAAWxG,SAASX,GACtDyG,EAAKU,WAAWxG,SAASX,EAAIyG,EAAKS,cAAcvG,SAASX,GACzDqH,GAAcZ,EAAKI,WAAYJ,EAAKU,WAAYV,EAAKS,eAEzD,OAAOD,GAAwBD,GAAuBI,EAvC9BI,CAAcf,GAEtC,OAAOC,GAAkBa,IAtL+CjH,OAAAoB,EAAA,EAAApB,CAAAkG,GAEvE/J,EAAK2G,SAwFV,SAAiBqD,GACb,IAAMgB,EAAiBd,GACnBF,EAAKnC,QACLmC,EAAKG,UACLH,EAAKM,UACLN,EAAKK,aACLL,EAAKlC,SACLkC,EAAKI,WACLJ,EAAKU,WACLV,EAAKS,eAGHQ,EACFjB,EAAKI,WAAWlG,SAASV,EAAIwG,EAAKlC,SAAS5D,SAASV,GACpDwG,EAAKG,UAAUjG,SAASV,EAAIwG,EAAKnC,QAAQ3D,SAASV,EAEhD0H,EACFN,GAAcZ,EAAKG,UAAWH,EAAKM,UAAWN,EAAKK,eACnDO,GAAcZ,EAAKI,WAAYJ,EAAKU,WAAYV,EAAKS,eAEzD,OAAOO,GAAkBC,GAAoBC,IA9G2BrH,OAAAoB,EAAA,EAAApB,CAAAkG,GAGvE/J,EAAK4G,SA8GV,SAAuBoD,GACnB,IACKE,GACGF,EAAKM,UACLN,EAAKK,aACLL,EAAKG,UACLH,EAAKI,WACLJ,EAAKU,WACLV,EAAKS,eAGT,OAAO,EAGX,IAAMU,EACFnB,EAAKG,UAAUjG,SAASX,EAAIyG,EAAKM,UAAUpG,SAASX,GACpDyG,EAAKM,UAAUpG,SAASX,EAAIyG,EAAKK,aAAanG,SAASX,EAErD6H,EAA4BC,GAC9BrB,EAAKG,UACLH,EAAKK,cAGHE,EAAsB1B,GACxBmB,EAAKK,aACLL,EAAKM,UACLN,EAAKG,UACL,IACA,KAGEmB,EACFtB,EAAKI,WAAWlG,SAASX,EAAIyG,EAAKU,WAAWxG,SAASX,GACtDyG,EAAKU,WAAWxG,SAASX,EAAIyG,EAAKS,cAAcvG,SAASX,EAEvDgI,EAA6BF,GAC/BrB,EAAKI,WACLJ,EAAKS,eAGHD,EAAuB3B,GACzBmB,EAAKS,cACLT,EAAKU,WACLV,EAAKI,WACL,IACA,KAGJ,OACIe,GACAG,GACAF,GACAG,GACAhB,GACAC,IAvKoE3G,OAAAoB,EAAA,EAAApB,CAAAkG,GAIvE/J,EAAKyG,UAuCV,SAAkBuD,GAId,OAFIA,EAAKM,UAAUpG,SAASX,EAAIyG,EAAKK,aAAanG,SAASX,GAIvDiI,GAAKxB,EAAKG,UAAWH,EAAKM,UAAWN,EAAKI,WAAYJ,EAAKU,cAjDS7G,OAAAoB,EAAA,EAAApB,CAAAkG,GAKvE/J,EAAK0G,WA4BV,SAAmBsD,GAIf,OAFIA,EAAKU,WAAWxG,SAASX,EAAIyG,EAAKS,cAAcvG,SAASX,GAIzDiI,GAAKxB,EAAKI,WAAYJ,EAAKU,WAAYV,EAAKG,UAAWH,EAAKM,aAvCQzG,OAAAoB,EAAA,EAAApB,CAAAkG,GAMvE/J,EAAK8G,WAwQV,SAAmBkD,GAAsB,IAAAyB,EAAA5H,OAAA6H,GAAA,EAAA7H,CAAA,GAU5BmG,GARLG,EAFiCsB,EAEjCtB,UACAG,EAHiCmB,EAGjCnB,UACAD,EAJiCoB,EAIjCpB,aACAsB,EALiCF,EAKjCE,QACAvB,EANiCqB,EAMjCrB,WACAM,EAPiCe,EAOjCf,WACAD,EARiCgB,EAQjChB,cACAmB,EATiCH,EASjCG,SAGEC,EAAwBhD,GAC1BsB,EACAG,EACAD,EACA,GACA,KAGEyB,EAA2BjD,GAC7ByB,EACAD,EACAsB,EACA,GACA,IAGEI,EAAyBlD,GAC3BuB,EACAM,EACAD,EACA,GACA,KAGEuB,EAA4BnD,GAC9B6B,EACAD,EACAmB,EACA,GACA,IAGJ,OACIC,GACAC,GACAC,GACAC,GACAC,GAAQ9B,EAAWG,IACnB2B,GAAQ3B,EAAWD,IACnB4B,GAAQ7B,EAAYM,IACpBuB,GAAQvB,EAAYD,KAlUgDV,IASrE,SAASmC,GAAQC,GACpB,IAAMC,EAMV,SAA0BD,GACtB,IAAM1E,EAAY0E,EAAUhE,KAAKV,UAEjC,MAAO,CACHI,QAASJ,EAAUG,IAAQC,SAC3BC,SAAUL,EAAUG,IAAQE,UAC5BuC,aAAc5C,EAAUG,IAAQyC,cAChCI,cAAehD,EAAUG,IAAQ6C,eACjCH,UAAW7C,EAAUG,IAAQ0C,WAC7BI,WAAYjD,EAAUG,IAAQ8C,YAC9BP,UAAW1C,EAAUG,IAAQuC,WAC7BC,WAAY3C,EAAUG,IAAQwC,YAC9BuB,QAASlE,EAAUG,IAAQ+D,SAC3BC,SAAUnE,EAAUG,IAAQgE,WAnBVS,CAAiBF,GACvC,OAAOtI,OAAOyI,KAAKxC,IAAayC,KAAK,SAAAC,GACjC,OAAO1C,GAAY0C,GAASJ,KAyCpC,SAASZ,GACLiB,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAuB3C,GAAeuC,EAAaC,GAEnDI,EAA2B5C,GAC7ByC,EACAC,GAGEG,EACD,IACGnH,KAAKoH,MACDN,EAAYxI,SAASV,EAAIiJ,EAAYvI,SAASV,EAC9CiJ,EAAYvI,SAASX,EAAImJ,EAAYxI,SAASX,GAEtDqC,KAAKC,GAEHoH,EAAeF,EAAkB,IAAMA,EAAkB,IAEzDG,EACFT,EAAYvI,SAASV,EAAIkJ,EAAYxI,SAASV,EAE5C2J,EACFR,EAAgBzI,SAASV,EAAIoJ,EAAgB1I,SAASV,EAE1D,OACIyJ,GACAJ,GACAK,KACEJ,GAA4BK,GAqFtC,SAAS9B,GAAwB+B,EAAiBC,GAC9C,OACID,EAAMlJ,SAASV,EAAI6J,EAASnJ,SAASV,EAAI,IACzC4J,EAAMlJ,SAASV,EAAI6J,EAASnJ,SAASV,EAAI,GAqFjD,SAASoH,GAAcwC,EAAiBE,EAAiBD,GACrD,OACID,EAAMlJ,SAASV,EAAI8J,EAAMpJ,SAASV,GAClC8J,EAAMpJ,SAASV,EAAI6J,EAASnJ,SAASV,EAI7C,SAASyI,GAAQsB,EAAaC,GAC1B,OAAOD,EAAErJ,SAASV,EAAIgK,EAAEtJ,SAASV,EA2DrC,SAAS0G,KAA+C,QAAAuD,EAAAlJ,UAAAC,OAA7BkJ,EAA6B,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAA7BF,EAA6BE,GAAArJ,UAAAqJ,GACpD,OAAQF,EAAOG,KAAK,SAAAC,GAAK,OAAIA,EAAMC,MAAQ3K,IClVxC,SAAS4K,GAAUC,GACtB,OAAOpK,OAAA6H,GAAA,EAAA7H,CAAA,GAAKoK,EAAMC,aAGf,SAASC,GAAaF,GACzB,OAAOA,EAAMC,YAAYE,UAGtB,SAASC,GAAkBJ,GAC9B,OAAOA,EAAMC,YAAYI,eAGtB,SAASC,GAAON,GACnB,OAAOA,EAAMC,YAAYE,UAAUI,IAGhC,SAASC,GAAYR,GACxB,OAAOA,EAAMC,YAAYE,UAAUM,2CCfxB,SAASC,GACpBrH,EACAsH,EACAC,GAYA,OAViCvH,EAAWuH,OACxC,SAAArH,GAAS,OAAKqH,GAAUA,EAAOrH,KAGIsH,OACnC,SAACC,EAAMC,GAAP,YACavK,IAATsK,GAAsBH,EAAQI,EAASD,GAAQ,EAAIC,EAAUD,QACjEtK,GAsBD,SAASwK,GACZC,EACAC,EACAC,EACAC,EACAC,GAQA,IANA,IAAIC,EAAI,EACJhC,EAAI,EACJC,EAAI,EAEFgC,EAAOF,EAAUE,KACnBC,EAAU,EAEN/J,EAAa,EAATyJ,EAAaG,EAAUtL,MAC/B0B,EAAW,EAAP2J,EAAWC,EAAUtL,MACzB0B,GAAuB,EAAlB4J,EAAUtL,MAEf,IAAK,IAAI0L,EAAa,EAATR,EAAYQ,EAAW,EAAPN,EAAUM,GAAK,EAAG,CAC3C,IAAMC,EAAOH,EAAKE,EAAIhK,GAChBkK,EAAOJ,EAAKE,EAAIhK,EAAI,GACpBmK,EAAOL,EAAKE,EAAIhK,EAAI,GAHiBoK,EAIVC,KAAQC,IAAIC,IAAI,CAC7CN,EACAC,EACAC,IAPuCK,EAAArM,OAAAC,EAAA,EAAAD,CAAAiM,EAAA,GAS3CP,GAT2CW,EAAA,GAU3C3C,GAV2C2C,EAAA,GAW3C1C,GAX2C0C,EAAA,GAY3CT,IAIRF,GAAQE,EACRlC,GAAQkC,EACRjC,GAAQiC,EA9BF,IAAAU,EAgCqBJ,KAAQE,IAAID,IAAI,CAACT,EAAGhC,EAAGC,IAhC5C4C,EAAAvM,OAAAC,EAAA,EAAAD,CAAAsM,EAAA,GAkCN,MAAO,CAAEhJ,EAlCHiJ,EAAA,GAkCYC,EAlCZD,EAAA,GAkCqB5C,EAlCrB4C,EAAA,IAgHH,SAASE,GAAU7I,GACtB,IAAMgD,EAAgBhD,EAAU8E,KAC5B,SAAAgE,GAAQ,OAAIA,EAASC,OAASnO,EAAUC,iBAEtC+H,EAAe5C,EAAU8E,KAC3B,SAAAgE,GAAQ,OAAIA,EAASC,OAASnO,EAAUE,gBAE5C,OAAO8H,GAAgBI,EACjB7E,KAAK6K,IACD7K,KAAK8K,OACArG,EAAanG,SAASX,EAAIkH,EAAcvG,SAASX,GAAK,GACvD,GAER,EAGH,SAASoN,GAAUlJ,GACtB,IAAMgD,EAAgBhD,EAAU8E,KAC5B,SAAAgE,GAAQ,OAAIA,EAASC,OAASnO,EAAUC,iBAE5C,OAAOmI,EACD7E,KAAK8K,MAAMjG,EAAcvG,SAASV,GAAKtB,EAAiBC,QACxD,EAGH,SAASyO,GACZC,EACAvB,EACAwB,GAEA,OAAO,SACHC,EACAC,GAEA,IAAMC,EAAoBlN,EACtBgN,EAAWpN,KACX2L,EAAUtL,MACVsL,EAAUrL,QAERiN,EAAoBnN,EACtBiN,EAAWrN,KACX2L,EAAUtL,MACVsL,EAAUrL,QAGRkN,EAAgCvL,KAAK4D,MACvC0H,EAAkB3N,EAAIsN,EAAWtN,EACjC2N,EAAkB1N,EAAIqN,EAAWrN,GAE/B4N,EAAgCxL,KAAK4D,MACvCyH,EAAkB1N,EAAIsN,EAAWtN,EACjC0N,EAAkBzN,EAAIqN,EAAWrN,GAMrC,OAAO4N,EAAgC,IACnCD,EAAgC,GAHhCA,EAAgCC,EAtFrC,SACH9B,EACAwB,EACAO,EACAC,GAEA,IAAMC,EAAUjB,GAAUe,GACpBG,EAAUlB,GAAUgB,GACpBG,EAAQF,EAAUrP,EAAiBE,QACnCsP,EAAQF,EAAUtP,EAAiBE,QACnCuP,EAAUhB,GAAUU,GACpBO,EAAUjB,GAAUW,GACpBO,EAAQF,EAAUzP,EAAiBC,QACnC2P,EAAQF,EAAU1P,EAAiBC,QAEnC4P,EAAe9C,GAAYsC,EAASI,EAASF,EAAOI,EAAOvC,GAC3D0C,EAAe/C,GAAYuC,EAASI,EAASF,EAAOI,EAAOxC,GAE3D2C,EAAiBrM,KAAKgE,IAAImI,EAAa1B,EAAIS,EAAST,EAAG,GACvD6B,EAAgBtM,KAAKgE,IAAImI,EAAavE,EAAIsD,EAAStD,EAAG,GACtD2E,EAAevM,KAAKgE,IAAImI,EAAa5K,EAAI2J,EAAS3J,EAAG,GAQ3D,OAPqBvB,KAAKgE,IAAIoI,EAAa7K,EAAI2J,EAAS3J,EAAG,GACpCvB,KAAKgE,IAAIoI,EAAa3B,EAAIS,EAAST,EAAG,GACvCzK,KAAKgE,IAAIoI,EAAaxE,EAAIsD,EAAStD,EAAG,IAEvC2E,EAAeF,EAAiBC,GAkE3CE,CACI9C,EACAwB,EACAC,EAAW5I,KAAKV,UAChBuJ,EAAW7I,KAAKV,YAKlC,SAAS4K,GAAsBC,GAC3B,GAAoB,IAAhBA,EAAK9N,OACL,OAAO8N,EAAK,GAMhB,IAJA,IAAMC,EAAe,GACjBC,EAAa,EACXC,EAAW,GAER/M,EAAI,EAAGA,EAAI4M,EAAK9N,OAAS,EAAGkB,IACjC+M,EAASzM,KAAKsM,EAAK5M,EAAI,GAAK4M,EAAK5M,IAGrC,IAAK,IAAIA,EAAI+M,EAASjO,OAAS,EAAGkB,GAAK,EAAGA,IAAK,CAC3C,IAAMgN,EAAQ9M,KAAKgE,IAAI,GAAK6I,EAASjO,OAASkB,GAC9C6M,EAAavM,KAAKyM,EAAS/M,GAAKgN,GAChCF,GAAcE,EAIlB,OADsBH,EAAazD,OAAO,SAACvB,EAAGC,GAAJ,OAAUD,EAAIC,GAAG,GAAKgF,EACzCF,EAAKA,EAAK9N,OAAS,GAG9C,SAASmO,GAAmBL,GACxBA,EAAOA,EAAKM,UAIZ,IAHA,IAAML,EAAe,GACjBC,EAAa,EAER9M,EAAI,EAAGA,EAAI4M,EAAK9N,OAAQkB,IAAK,CAClC,IAAMgN,EAAQ9M,KAAKgE,IAAI,GAAKlE,GAC5B6M,EAAavM,KAAKsM,EAAK5M,GAAKgN,GAC5BF,GAAcE,EAGlB,OAAOH,EAAazD,OAAO,SAACvB,EAAGC,GAAJ,OAAUD,EAAIC,GAAG,GAAKgF,EAiB9C,SAASK,GAAM9B,EAAwBC,GAC1C,OAAO,EC3QJ,SAAS8B,GAAS7E,GACrB,GAAIA,EAAM8E,WAAW1K,MACjB,OAAO4F,EAAM8E,WAAW1K,MAAM2K,aAI/B,SAASC,GAAmBhF,GAC/B,OAAOA,EAAM8E,WAAWG,gBAGrB,SAAStK,GAAaqF,GACzB,OAAOA,EAAM8E,WAAWI,MCTrB,SAASC,GAAcnF,GAC1B,OAAOA,EAAMoF,eAAe/L,WAGzB,IAiBMgM,GAAgBC,aACzB,CAACH,GAqCE,SAA4BnF,GAC/B,OAAOA,EAAMoF,eAAeG,QAAQjM,IAAI,SAAAiM,GAAO,OAAIA,EAAQvN,UAQxD,SAA2BgI,GAC9B,OAAOA,EAAMoF,eAAeG,QAAQjM,IAAI,SAAAiM,GAAO,OAAIA,EAAQC,SA/CJ7K,IAlBtB,SACjCtB,EACAoM,EACAC,EACArE,GAJiC,OAMjCoE,EAAgBlP,OAAS,EACnBmK,GACIrH,EACAsJ,GFyDP,SAA4B4C,GAC/B,IAAMI,EAAoBJ,EAAQjM,IAAI,SAAAtB,GAAM,OAAIA,EAAO1C,IACjDsQ,EAAoBL,EAAQjM,IAAI,SAAAtB,GAAM,OAAIA,EAAOzC,IAKvD,MAAO,CAAED,EAHW8O,GAAsBuB,GAGjBpQ,EAFL6O,GAAsBwB,IE7D5BC,CAAmBJ,GACnBpE,EFiEX,SAA2BkE,GAC9B,IAAMO,EAAWP,EAAQjM,IAAI,SAAAkM,GAAK,OAAIA,EAAMtM,IACtC6M,EAAWR,EAAQjM,IAAI,SAAAkM,GAAK,OAAIA,EAAMpD,IACtC4D,EAAWT,EAAQjM,IAAI,SAAAkM,GAAK,OAAIA,EAAMjG,IAM5C,MAAO,CAAErG,EAJCwL,GAAmBoB,GAIjB1D,EAHFsC,GAAmBqB,GAGdxG,EAFLmF,GAAmBsB,IEvEfC,CAAkBP,KAG1BhF,GAAOrH,EAAYuL,MAkBhBsB,GAAaZ,aACtB,CAACD,GD/CE,SAA4BrF,GAC/B,IAAM5F,EAAQyK,GAAS7E,GACvB,GAAI5F,EACA,MAAO,CAAErE,MAAOqE,EAAMrE,MAAOC,OAAQoE,EAAMpE,UCgCjB,SAC9BmQ,EACAC,GAF8B,OAI7BD,GAAeC,EAEVtQ,EACIqQ,EAAYzQ,KACZ0Q,EAAiBrQ,MACjBqQ,EAAiBpQ,QAJrBX,IAkBGgR,GAAWf,aACpB,CAACD,GAAe1K,IARY,SAC5BuD,EACAmD,GAF4B,OAI5BnD,EFnCG,SACH1E,EACA6H,GAEA,IAAKA,EACD,MAAO,CAAEnI,EAAG,EAAGkJ,EAAG,EAAG7C,EAAG,GAG5B,IAAM0B,EAASoB,GAAU7I,GACnB0H,EAASwB,GAAUlJ,GAIzB,OAAOwH,GAAYC,EAAQC,EAHdD,EAAS,GACTC,EAAS,GAEyBG,GEuBzCiF,CAAoBpI,EAAUhE,KAAKV,UAAW6H,GAC9C,CAAEnI,EAAG,EAAGkJ,EAAG,EAAG7C,EAAG,KA4BpB,SAASgH,GAAcvG,GAC1B,OAAOA,EAAMoF,eAAelN,UAGzB,SAASsO,GAAmBxG,GAC/B,OAAOA,EAAMoF,eAAelN,UAAU3B,OAAS,ECjG5C,SAASkQ,GACZC,GAEA,OAAO,SAAC7U,GACJ,MAAO,CACH8U,QAAS9U,EACT+U,KAAMF,IAIX,SAASG,GACZH,GAEA,OAAO,WACH,MAAO,CACHE,KAAMF,ICfX,SAAeI,GAAtBC,GAAA,OAAAC,GAAAC,MAAAC,KAAA5Q,wDAAO,SAAA6Q,EAA+BC,GAA/B,IAAAC,EAAAC,EAAA,OAAAC,EAAAjI,EAAAkI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEsBP,EAAaQ,aAAa,CAC3CxN,MAAO,CAAErE,MAAO,IAAKC,OAAQ,OAHlC,UAEOqR,EAFPI,EAAAI,OAKOP,EAAiBD,EAAOS,iBAAiB,GAAGC,eAC/BhS,QAASuR,EAAetR,OAN5C,CAAAyR,EAAAE,KAAA,eAAAF,EAAAO,OAAA,SAOY,CACHjS,MAAOuR,EAAevR,MACtBC,OAAQsR,EAAetR,OACvBqR,WAVT,OAAAI,EAAAE,KAAA,uBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAAAA,EAAAO,OAAA,cAcQxR,GAdR,yBAAAiR,EAAAS,SAAAf,EAAA,wCCAA,IAKKgB,4JC4BL,IAAMC,GAAiB3B,GDjCL,aCsCZ4B,GAAuB5B,GDrCJ,oBC0CnB6B,GAAwBzB,GDzCE,2BC6C1B0B,GAAqB9B,GD5CJ,kBEQjB+B,GAAe,eCwBrB,SAASC,GAAUC,GACtB,sBAAAC,EAAA/S,OAAAgT,EAAA,EAAAhT,CAAA2R,EAAAjI,EAAAuJ,KAAO,SAAA1B,EACH2B,EACAC,GAFG,IAAAC,EAAAC,EAAA,OAAA1B,EAAAjI,EAAAkI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAIHmB,EAASI,GAAS,OACZF,EAASjJ,GAAUgJ,KALtBtB,EAAAE,KAAA,EAMiBwB,YAAKH,EAAO3I,eAAe+I,aAN5C,OAMGH,EANHxB,EAAAI,KAOHiB,EAASI,GAASD,IAClBH,EAASO,GAAiBX,IARvB,wBAAAjB,EAAAS,SAAAf,MAAP,gBAAAJ,EAAAuC,GAAA,OAAAX,EAAA1B,MAAAC,KAAA5Q,YAAA,GAYG,SAAS+S,GAAiBX,GAC7B,OAAO,SACHI,EACAC,GAEA,IAAM/I,EAAQ+I,IACdD,EAASS,GAAgBlP,WACzBqO,EAAOc,cAAcxJ,EAAMoF,eAAeqE,mBAC1C,IAAMC,EAAKhB,EAAOiB,YACd,kBAAMb,EAASS,GAAgBb,EAAOrO,YACtC,IAAOiG,GAAON,IAElB8I,EAAS,CAAElC,KAAM4B,GAAc7B,QAAS+C,KAIzC,SAASH,GAAgBlP,GAC5B,sBAAAuP,EAAAhU,OAAAgT,EAAA,EAAAhT,CAAA2R,EAAAjI,EAAAuJ,KAAO,SAAAgB,EACHf,EACAC,GAFG,IAAA/I,EAAA5F,EAAA6O,EAAAa,EAAA5E,EAAA7L,EAAA6E,EAAAnC,EAAAgO,EAAA,OAAAxC,EAAAjI,EAAAkI,KAAA,SAAAwC,GAAA,cAAAA,EAAAtC,KAAAsC,EAAArC,MAAA,UAIG3H,EAAQ+I,IACR3O,EAAQyK,GAAS7E,GACjBiJ,EAAQjJ,EAAMoF,eAAe6D,MAC7Ba,EAAkB/J,GAAUC,GAAOK,eAAeyJ,gBAEnD1P,GAAU6O,EATZ,CAAAe,EAAArC,KAAA,eAAAqC,EAAAhC,OAAA,oBAaG9C,EAAQ/K,GAAsBC,EAAOC,GAbxC,CAAA2P,EAAArC,KAAA,eAAAqC,EAAAhC,OAAA,wBAmBHc,EAASP,GAAmBrD,IAnBzB8E,EAAA/B,GAoBgB7O,GApBhB4Q,EAAArC,KAAA,GAqBOsB,EAAMgB,sBAAsB/E,EAAO4E,GArB1C,QAAAE,EAAAE,GAAAF,EAAAnC,KAoBGxO,GApBH,EAAA2Q,EAAA/B,IAAA+B,EAAAE,IAwBHpB,EAASqB,GAAgC9Q,MAEnC6E,EAAYmH,GAAc0D,OAG3BvC,GAAmBuC,MACnBA,IAAW3D,eAAegF,oBAErBrO,EAAOkC,GAAQC,MAEX6L,EAAgBzR,GAAiByD,GACvC+M,EAASuB,GAAaN,MACtBjB,EAASwB,MACT5B,OAAO6B,WAAW,WACdzB,EAASwB,OACV9U,IAvCR,yBAAAwU,EAAA9B,SAAA2B,MAAP,gBAAAW,EAAAC,GAAA,OAAAb,EAAA3C,MAAAC,KAAA5Q,YAAA,GA6CG,SAAS6T,GAAgC9Q,GAC5C,OAAO,SACHyP,EACAC,GAEA,IAAM/I,EAAQ+I,IACR2B,GAAM,IAAIC,MAAOC,UACvB,GAAIF,EAAM1K,EAAMoF,eAAeyF,sBAC3B/B,EACIgC,GAAc,CACVzR,aACA0R,eAAgB7E,GAAWlG,GAC3BgL,cAAe3E,GAASrG,UAG7B,CACH,IAAMiL,EAAoB5F,GAAcrF,GACpCiL,GAAqB5R,EAAW9C,OAAS,GAmBzD,SACI8C,EACA6E,GAEA,IAAMgN,EAAqBzV,EAAmByI,EAAUxI,MACpDyV,EAAe,EACfC,EAAkBC,OAAOC,iBAC7BjS,EAAWkS,QAAQ,SAAChS,EAAWiS,GAC3B,IAAMC,EAAYhW,EAAmB8D,EAAU7D,MACzCgW,EAAW/T,KAAK4D,MAClBkQ,EAAUnW,EAAI4V,EAAmB5V,EACjCmW,EAAUlW,EAAI2V,EAAmB3V,GAEjCmW,EAAWN,IACXD,EAAeK,EACfJ,EAAkBM,KAG1BrS,EAAWsS,OAAOR,EAAc,GApCpBS,CAAyBvS,EAAY4R,GAGzC,IAAMY,EAAiBlU,KAAKmU,MACxBnU,KAAKQ,UAAYkB,EAAW9C,OAAS,IAEnCsU,EACFH,EACAhW,EAAgBC,aACfD,EAAgBE,YAAcF,EAAgBC,aAC3CgD,KAAKQ,SACP+F,EACF7E,EAAW9C,OAAS,EAAI8C,EAAWwS,QAAkBrV,EACzDsS,EAASiD,GAAc,CAAE7N,YAAW2M,6BA0BzC,IChKKmB,GDgKClB,GAAgBrE,GDhKC,kBCyKjBsF,GAAgBtF,GDtKC,kBC2KjByC,GAAWzC,GDhLC,aCsLZ4D,IAFU5D,GDjLC,YCmLIA,GDlLC,kBCuLhB6D,GAA0BzD,GDpLE,6BGIlC,SAASoF,GACZrF,EACAsF,EACAxD,GAEA,OAAO,SAACI,GAEJ,OADAA,EAASqD,GAAgBvF,EAAMsF,IACvBtF,GACJ,KAAKoF,GAAgBI,IACbF,EAAcG,eAAe,QAC7BvD,EAASO,GAAiBX,IAE9B,MACJ,KAAKsD,GAAgBM,MACbJ,EAAcG,eAAe,iBAC7BvD,EACIqD,GAAgBH,GAAgBM,MAAO,CACnCC,aAAc,KACdC,WAAY,OAIxB1D,EAASL,GAAUC,MAY5B,SAASyD,GACZvF,EACAD,GAEA,OAAIC,IAASoF,GAAgBM,MAClB,CAAE1F,OAAMD,WAGZ,CACHC,OACAD,QAAS8F,GAAiB9F,IAIlC,SAAS8F,GACLrD,GAEA,IAAMsD,EAAsC,GAqB5C,OApBItD,EAAYuD,eACZD,EAAaC,aAAevD,EAAYuD,cAExCvD,EAAYmD,eACZG,EAAaH,aAAeK,SACxBxD,EAAYmD,aACZ,KAGJnD,EAAYyD,kBACZH,EAAaG,gBAAkBD,SAC3BxD,EAAYyD,gBACZ,KAGJzD,EAAYoD,aACZE,EAAaF,WAAaM,WACtB1D,EAAYoD,aAGbE,YDjFCV,2JEJAe,ycAkBL,IAAMC,GAAU,CACnBD,GAASE,IACTF,GAASG,WACTH,GAASI,cACTJ,GAASK,eAiIPC,GAAgC,CAClCJ,IA/HQ,WACR,OACIK,EAAAhO,EAAA/E,cAACgT,EAAA,SAAD,8DA8HJH,cAxHW,WACX,OAAOE,EAAAhO,EAAA/E,cAACgT,EAAA,SAAD,qDAwHPJ,cArHW,WACX,OAAOG,EAAAhO,EAAA/E,cAACgT,EAAA,SAAD,mDAqHPC,aAlHU,WACV,OACIF,EAAAhO,EAAA/E,cAACgT,EAAA,SAAD,4FAiHJL,WA1GS,WACT,OAAOI,EAAAhO,EAAA/E,cAACgT,EAAA,SAAD,+BA0GPE,MAvGU,WACV,OACIH,EAAAhO,EAAA/E,cAACgT,EAAA,SAAD,sEAEID,EAAAhO,EAAA/E,cAAA,WAFJ,wDAsGJmT,WArFe,WACf,OACIJ,EAAAhO,EAAA/E,cAACgT,EAAA,SAAD,0GAoFJI,mBA/FsB,WACtB,OACIL,EAAAhO,EAAA/E,cAACgT,EAAA,SAAD,oFA8FJK,aA9EiB,WACjB,OACIN,EAAAhO,EAAA/E,cAACgT,EAAA,SAAD,qEAEID,EAAAhO,EAAA/E,cAAA,WAFJ,4DA6EJsT,cArEiB,WACjB,OACIP,EAAAhO,EAAA/E,cAACgT,EAAA,SAAD,8EAGID,EAAAhO,EAAA/E,cAAA,WAHJ,wDAoEJuT,WA5De,WACf,OACIR,EAAAhO,EAAA/E,cAACgT,EAAA,SAAD,8EAGID,EAAAhO,EAAA/E,cAAA,WAHJ,kCA2DJwT,WAlDe,WACf,OACIT,EAAAhO,EAAA/E,cAACgT,EAAA,SAAD,uDAEID,EAAAhO,EAAA/E,cAAA,WAFJ,gDAiDJyT,WA1Ce,WACf,OACIV,EAAAhO,EAAA/E,cAACgT,EAAA,SAAD,0DAyCJU,UArCa,WACb,OACIX,EAAAhO,EAAA/E,cAACgT,EAAA,SAAD,+DAoCJW,WA9Bc,WACd,OACIZ,EAAAhO,EAAA/E,cAACgT,EAAA,SAAD,8FAGID,EAAAhO,EAAA/E,cAAA,WAHJ,qEAuDO4T,OAff,SAAcC,GACV,OACId,EAAAhO,EAAA/E,cAAA,OAAK8T,UAAWtB,GAASqB,EAAME,cAC3BhB,EAAAhO,EAAA/E,cAACgU,GAAAjP,EAAD,CACIoK,GAAIqD,GAASqB,EAAME,aACnBE,MAAM,QACN5H,KAAK,OACL6H,OAAO,SAEPnB,EAAAhO,EAAA/E,cAAA,YAlBhB,SAAcmU,GACV,IAAMC,EAAYtB,GAAaN,GAAS2B,IACxC,OAAOpB,EAAAhO,EAAA/E,cAACoU,EAAD,MAgBYC,CAAKR,EAAME,iBC1L3B,SAASO,GACZrV,EACAgB,EACAgL,IAqBJ,SACIhM,EACAgB,EACAgL,GAE0BsJ,YACtBtV,EACA5F,EAAgBG,eAGFwX,QAAQ,SAAAjJ,IAzB9B,SACIyM,EACAC,EACAxJ,EACAyJ,EACAC,GAEAA,EAAIC,YACJD,EAAIE,OAAOL,EAAMzZ,EAAI2Z,EAAOF,EAAMxZ,EAAI0Z,GACtCC,EAAIG,OAAOL,EAAM1Z,EAAI2Z,EAAOD,EAAMzZ,EAAI0Z,GACtCC,EAAIpb,UAAYF,EAAgBE,UAChCob,EAAII,YAAc9J,EAClB0J,EAAIK,SAcAC,CACIlN,EAAS,GAAGrM,SACZqM,EAAS,GAAGrM,SACZuP,EACA5R,EAAgBC,YAChB2G,KAnCRiV,CAAajW,EAAWgB,EAAWgL,GAwCvC,SACIhM,EACA0V,EACA1J,GACF,IAAAkK,GAAA,EAAAC,GAAA,EAAAC,OAAApZ,EAAA,IACE,QAAAqZ,EAAAC,EAAuBtW,EAAvBuW,OAAAC,cAAAN,GAAAG,EAAAC,EAAAnI,QAAAsI,MAAAP,GAAA,EAAkC,KAAvBpN,EAAuBuN,EAAAK,MAC9B,GAAI5N,EAASxC,OAASlM,EAAgBG,cAAe,KAAAoc,EAChC7N,EAASrM,SAAlBV,EADyC4a,EACzC5a,EAAGD,EADsC6a,EACtC7a,EACX8a,GACIlB,EACA3Z,EAAI3B,EAAgBC,YACpByB,EAAI1B,EAAgBC,YACpBD,EAAgBI,YAChBwR,KATd,MAAA6K,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAI,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAX,EAAA,MAAAC,IA3CEW,CAAc/W,EAAWgB,EAAWgL,GA0DxC,SAAS4K,GACLlB,EACA3Z,EACAD,EACA4D,EACAsM,GAEA0J,EAAIC,YACJD,EAAIsB,IAAIlb,EAAGC,EAAG2D,EAAG,EAAG,EAAIvB,KAAKC,IAC7BsX,EAAIuB,UAAYjL,EAChB0J,EAAIwB,OClDD,IAAMC,GAAb,SAAAC,GAGI,SAAAD,EAAYvC,GAA4B,IAAAyC,EAAA,OAAAjb,OAAAkb,EAAA,EAAAlb,CAAAsR,KAAAyJ,IACpCE,EAAAjb,OAAAmb,EAAA,EAAAnb,CAAAsR,KAAAtR,OAAAob,EAAA,EAAApb,CAAA+a,GAAAM,KAAA/J,KAAMkH,KAHV8C,eAEwC,EAAAL,EADhCrX,UAAwB,GAI5BqX,EAAK7Q,MAAQ,CACT1F,OAAQ6W,mBAGZN,EAAKK,UAAYE,IAAMC,YAEvBR,EAAKS,UAAYT,EAAKS,UAAUC,KAAf3b,OAAA4b,EAAA,EAAA5b,CAAAib,IATmBA,EAH5C,OAAAjb,OAAA6b,EAAA,EAAA7b,CAAA+a,EAAAC,GAAAhb,OAAA8b,EAAA,EAAA9b,CAAA+a,EAAA,EAAAgB,IAAA,qBAAAzB,MAAA,WAgBYhJ,KAAKkH,MAAMlQ,YACXgJ,KAAK1N,UAAY0N,KAAKkH,MAAMlQ,UAAUhE,KAAKV,WAE/C0N,KAAKoK,cAnBb,CAAAK,IAAA,wBAAAzB,MAAA,SAuBQ0B,EACAC,GAEA,OACID,EAAc1T,YAAc2T,EAAU3T,WACtC0T,EAAcE,aAAeD,EAAUC,aA5BnD,CAAAH,IAAA,YAAAzB,MAAA,WAiCQ,IAAM9V,EAAQ8M,KAAKkH,MAAMhU,MAEnB2X,EAAc7K,KAAK1N,UACnBH,EAAa6N,KAAKkH,MAAM/U,WAE1Be,GACA8M,KAAK8K,cAAc5X,EAAOf,EAAY0Y,KAvClD,CAAAJ,IAAA,SAAAzB,MAAA,WA4CQ,OACI5C,EAAAhO,EAAA/E,cAAA,OAAK0X,YAAU,EAAMC,WAAUnF,GAAS7F,KAAKkH,MAAM+D,WAC/C7E,EAAAhO,EAAA/E,cAAA,aAAQ2M,KAAKkH,MAAMgE,MACnB9E,EAAAhO,EAAA/E,cAAA,WACA+S,EAAAhO,EAAA/E,cAAA,UAAQmP,GAAG,SAAS2I,IAAKnL,KAAKgK,eAhD9C,CAAAS,IAAA,gBAAAzB,MAAA,SAsDQ9V,EACAf,EACA0Y,GAEA,GAAI7K,KAAKgK,UAAUnQ,QAAS,CACxB,IAAMzG,EAAS4M,KAAKgK,UAAUnQ,QAC9BzG,EAAOtE,OAASoE,EAAMpE,OACtBsE,EAAOvE,MAAQqE,EAAMrE,MACrB,IAAMyE,EAAYF,EAAOG,WAAW,MAEhCD,GACAA,EAAU8X,UAAU,EAAG,EAAGhY,EAAOvE,MAAOuE,EAAOtE,QAGnDkR,KAAKqL,UAAU/X,EAAWJ,EAAOE,GAEjC4M,KAAKsL,UAAUnZ,EAAYmB,EAAWuX,MAtElD,CAAAJ,IAAA,YAAAzB,MAAA,SA2EQ7W,EACAmB,EACAuX,GAEI7K,KAAKkH,MAAMlQ,WAAa7E,GAAcmB,IACtCnB,EACKC,IAAI,SAAAC,GAAS,OAAIA,EAAUW,KAAKV,YAChCoH,OACG,SAAA0B,GAAQ,OACJA,IAAayP,IAqBY1O,EApBC0O,EAAVzP,EAqBlBmQ,MACd,SAACnQ,EAAU7K,GAAX,OACI6K,EAASrM,SAASX,IAAM+N,EAAW5L,GAAGxB,SAASX,GAC/CgN,EAASrM,SAASV,IAAM8N,EAAW5L,GAAGxB,SAASV,KAJ3D,IAAiD8N,IAlBhCkI,QAAQ,SAAAjJ,GACLuM,GAASvM,EAAU9H,EAAW3H,KAEtCgc,GAASkD,EAAavX,EAAW3H,MA1F7C,CAAA8e,IAAA,YAAAzB,MAAA,SA+FQ1V,EACAJ,EACAE,GAEIE,GACAA,EAAUE,UAAUN,EAAO,EAAG,EAAGE,EAAOvE,MAAOuE,EAAOtE,YApGlE2a,EAAA,CAAoCS,IAAMzC,WAiH1C,IAMe+D,eANS,SAAC1S,GAAD,MAAwB,CAC5C5F,MAAOyK,GAAS7E,GAChB9B,UAAWmH,GAAcrF,GACzB3G,WAAY8L,GAAcnF,KAGf0S,CAAyB/B,2CC3FzBgC,WA1CavB,IAAMwB,KAAK,SAACxE,GAAkC,IAAAyE,EACpCC,mBAAS1E,EAAM2E,WADqBC,EAAApd,OAAAC,EAAA,EAAAD,CAAAid,EAAA,GAC/DE,EAD+DC,EAAA,GACpDC,EADoDD,EAAA,GAOtE,OAJAE,oBAAU,WACND,EAAa7E,EAAM2E,YACpB,CAACE,EAAc7E,EAAM2E,YAGpBzF,EAAAhO,EAAA/E,cAAA+S,EAAAhO,EAAA6T,SAAA,KACKJ,GACGzF,EAAAhO,EAAA/E,cAAC6Y,GAAA,EAAD,CACIC,MAAM,EACNC,OAAO,EACPC,sBAAsB,EACtBC,eAAe,GAEflG,EAAAhO,EAAA/E,cAAA+S,EAAAhO,EAAA6T,SAAA,KACI7F,EAAAhO,EAAA/E,cAAA,sBACC6T,EAAMqF,QACPnG,EAAAhO,EAAA/E,cAAA,WACA+S,EAAAhO,EAAA/E,cAACmZ,EAAA,EAAD,CACIC,QAAQ,YACRtF,UAAU,SACV7I,MAAM,UACNoO,QAASxF,EAAMyF,QAJnB,WAQAvG,EAAAhO,EAAA/E,cAACmZ,EAAA,EAAD,CACIC,QAAQ,YACRtF,UAAU,UACVuF,QAASxF,EAAM0F,SAHnB,gBCkDTC,GA7EU3C,IAAMwB,KAC3B,SAACxE,GAAkC,IAAAyE,EACGC,oBAAS,GADZE,EAAApd,OAAAC,EAAA,EAAAD,CAAAid,EAAA,GACxBE,EADwBC,EAAA,GACbC,EADaD,EAAA,GAG/B,SAASgB,EAASC,EAAeC,GACzB9F,EAAMqF,UAAYrF,EAAM8F,QACxBjB,GAAa,IAEbA,GAAa,GACb7E,EAAM+F,cAANve,OAAAoB,EAAA,EAAApB,CAAA,GACKwY,EAAMgG,WAAaF,KAKhC,SAASL,IACLZ,GAAa,GACb7E,EAAM+F,cAANve,OAAAoB,EAAA,EAAApB,CAAA,GACKwY,EAAMgG,YAAa,IAI5B,SAASN,IACLb,GAAa,GAGjB,SAASoB,IACL,OACI/G,EAAAhO,EAAA/E,cAAA+S,EAAAhO,EAAA6T,SAAA,KACI7F,EAAAhO,EAAA/E,cAAC+Z,GAAA,EAAD,KACIhH,EAAAhO,EAAA/E,cAACga,GAAA,EAAD,CACIrE,MAAM,QACN8D,SAAUA,EACVQ,QACIlH,EAAAhO,EAAA/E,cAACka,GAAA,EAAD,CACIP,QAAS9F,EAAM8F,QACf1O,MAAM,YAGdkP,MAAOtG,EAAMgE,KACbuC,eAAe,WAItBvG,EAAMqF,SACHnG,EAAAhO,EAAA/E,cAACqa,GAAD,CACIR,WAAYhG,EAAMgG,WAClBD,cAAe/F,EAAM+F,cACrBpB,UAAWA,EACXU,QAASrF,EAAMqF,QACfI,OAAQA,EACRC,QAASA,KAO7B,OACIxG,EAAAhO,EAAA/E,cAAA+S,EAAAhO,EAAA6T,SAAA,KACK/E,EAAM+D,SACH7E,EAAAhO,EAAA/E,cAAA,OACI8T,UAAU,WACV4D,YAAU,EACVC,WAAUnF,GAASqB,EAAM+D,WAExBkC,KAGL/G,EAAAhO,EAAA/E,cAAA,OAAK8T,UAAU,YAAf,IAA4BgG,IAA5B,OAKhB,SAACQ,EAAUlN,GAAX,OAAoBkN,EAASX,UAAYvM,EAAKuM,8BCnCnCY,GAxCU1D,IAAMwB,KAC3B,SAACxE,GAgBG,OACId,EAAAhO,EAAA/E,cAAA,OAAK0X,YAAU,EAAMC,WAAUnF,GAASqB,EAAM+D,WAC1C7E,EAAAhO,EAAA/E,cAAA,aAAQ6T,EAAMgE,MACd9E,EAAAhO,EAAA/E,cAAC+Z,GAAA,EAAD,CAAajG,UAAU,cACnBf,EAAAhO,EAAA/E,cAACwa,GAAA,EAAD,CACI7E,MAAO9B,EAAM4G,aACbhB,SAZhB,SAAsBC,GAClB7F,EAAM+F,cAANve,OAAAoB,EAAA,EAAApB,CAAA,GACKwY,EAAMgG,WAAaH,EAAMjc,OAAOkY,SAWzBkC,KAAMhE,EAAMgE,MArBPhE,EAAM6G,OAAO3b,IAAI,SAACiF,EAASiN,GAAV,OAC9B8B,EAAAhO,EAAA/E,cAAC2a,GAAA,EAAD,CAAUvD,IAAKnG,EAAO0E,MAAO3R,GACxBA,SA2BjB,SAACsW,EAAUlN,GAAX,OACIkN,EAASG,eAAiBrN,EAAKqN,cAC/BH,EAASI,OAAO1e,SAAWoR,EAAKsN,OAAO1e,QACvCse,EAASI,OAAOxC,MACZ,SAAClU,EAASiN,GAAV,OAAoBjN,IAAYoJ,EAAKsN,OAAOzJ,iBCwBzC2J,GA1DQ/D,IAAMwB,KACzB,SAACxE,GAAgC,IAAAyE,EACCC,oBAAS,GADVE,EAAApd,OAAAC,EAAA,EAAAD,CAAAid,EAAA,GACtBuC,EADsBpC,EAAA,GACbqC,EADarC,EAAA,GAAAsC,EAEHxC,mBAAS1E,EAAM4G,cAFZO,EAAA3f,OAAAC,EAAA,EAAAD,CAAA0f,EAAA,GAEtBpF,EAFsBqF,EAAA,GAEfC,EAFeD,EAAA,GAAAE,EAGe3C,mBACxC1E,EAAM4G,cAJmBU,EAAA9f,OAAAC,EAAA,EAAAD,CAAA6f,EAAA,GAGtBE,EAHsBD,EAAA,GAGNE,EAHMF,EAAA,GAqC7B,OA/BAxC,oBAAU,WACNsC,EAASpH,EAAM4G,eAChB,CAAC5G,EAAM4G,aAAcQ,IA8BpBlI,EAAAhO,EAAA/E,cAAA,OAAK0X,YAAU,EAAMC,WAAUnF,GAASqB,EAAM+D,WAC1C7E,EAAAhO,EAAA/E,cAAA,aAAQ6T,EAAMgE,MACd9E,EAAAhO,EAAA/E,cAACsb,GAAA,EAAD,CACIxH,UAAU,iBACV3E,GAAG,kBACHwG,MAAOA,GAAS,EAChB8D,SA7BZ,SAAkBC,GACd,IAAM6B,EAAWzK,OAAO4I,EAAMjc,OAAOkY,OACrCsF,EAASM,GAET,IAGMC,IAFD3H,EAAM4H,YAAc3K,OAAO4K,UAAUH,MAIrCI,MAAMJ,MACL1H,EAAM/X,KAAOyf,GAAY1H,EAAM/X,QAC/B+X,EAAMhY,KAAO0f,GAAY1H,EAAMhY,KAErCif,EAAWU,GACPA,IACAH,EAAkBE,GAClB1H,EAAM+H,aAANvgB,OAAAoB,EAAA,EAAApB,CAAA,GACKwY,EAAMgG,WAAa0B,MAapBM,OAnCZ,WACIZ,EAASG,GACTN,GAAW,IAkCHzO,KAAK,SACLyP,OAAQjB,EACRkB,OAAO,aAKvB,SAACzB,EAAUlN,GAAX,OACIkN,EAASzC,OAASzK,EAAKyK,MACvByC,EAASG,eAAiBrN,EAAKqN,mCCnEvC,SAASuB,GAAoBnI,GAAY,IAC7BoI,EAA0BpI,EAA1BoI,SAAUnD,EAAgBjF,EAAhBiF,KAAMnD,EAAU9B,EAAV8B,MAClBuG,EAAiBrF,IAAMsF,OAAO,MAQpC,OANAtF,IAAM8B,UAAU,WACRuD,EAAU1V,SACV0V,EAAU1V,QAAS4V,WAKvBrJ,EAAAhO,EAAA/E,cAACqc,GAAA,EAAD,CACIC,YAAa,CACTJ,aAEJpD,KAAMA,EACNyD,gBAAiB,EACjBC,UAAU,MACVC,MAAO9G,GAENsG,GAgBb,IAgCeS,GAhCQ7F,IAAMwB,KACzB,SAACxE,GAOG,OACId,EAAAhO,EAAA/E,cAAA,OAAK0X,YAAU,EAAMC,WAAUnF,GAASqB,EAAM+D,WAC1C7E,EAAAhO,EAAA/E,cAAA,aAAQ6T,EAAMgE,MACd9E,EAAAhO,EAAA/E,cAAC2c,GAAA,EAAD,CACIX,oBAAqBA,GACrBY,aAAW,qBACXnC,aAAc5G,EAAM4G,aACpB9E,MAAO9B,EAAM4G,aACbhB,SAdZ,SAAkBoD,EAAgBlH,GAC9B9B,EAAM+H,aAANvgB,OAAAoB,EAAA,EAAApB,CAAA,GACKwY,EAAMgG,WAAalE,KAahB7Z,IAAK+X,EAAM/X,IACXD,IAAKgY,EAAMhY,IACXihB,KAAMjJ,EAAMiJ,KACZhJ,UAAU,aAK1B,SAACwG,EAAUlN,GACP,OACIkN,EAASzC,OAASzK,EAAKyK,MACvByC,EAASG,eAAiBrN,EAAKqN,eChD5B,SAASsC,GAAelJ,GACnC,OACId,EAAAhO,EAAA/E,cAAA+S,EAAAhO,EAAA6T,SAAA,KACI7F,EAAAhO,EAAA/E,cAACgd,GAAD,CACInF,KAAM,kBACNgC,WAAY,mBACZjC,SAAUpF,GAASW,WACnBwG,QAAS9F,EAAM/N,eAAemX,iBAC9BrD,cAAe/F,EAAMqJ,uBAGxBrJ,EAAM/N,eAAemX,kBAClBlK,EAAAhO,EAAA/E,cAACmd,GAAD,CACItF,KAAM,qBACNgC,WAAY,oBACZiD,KAAM,IACNrC,aAAc5G,EAAM/N,eAAesX,kBACnCxB,aAAc/H,EAAMqJ,qBACpBtF,SAAUpF,GAASY,mBACnBtX,IAAK,EACLD,IAAK,IAGbkX,EAAAhO,EAAA/E,cAACgd,GAAD,CACInF,KAAM,qBACNgC,WAAY,cACZjC,SAAUpF,GAASU,MACnByG,QAAS9F,EAAM/N,eAAeuX,YAC9BzD,cAAe/F,EAAMqJ,uBAExBrJ,EAAM/N,eAAeuX,aAClBtK,EAAAhO,EAAA/E,cAACsd,GAAD,CACIzF,KAAM,SACND,SAAUpF,GAASS,aACnBsE,WAAY,IAIpBxE,EAAAhO,EAAA/E,cAAA,WAEA+S,EAAAhO,EAAA/E,cAAA,4BACA+S,EAAAhO,EAAA/E,cAACud,GAAD,CACI1F,KAAM,aACNgC,WAAY,eACZD,cAAe/F,EAAM2J,kBACrB9C,OAAQ,CAAC,cAAe,YACxBD,aAAc5G,EAAM/N,eAAe+I,YAAYuD,aAC/CwF,SAAUpF,GAASa,eAEvBN,EAAAhO,EAAA/E,cAACud,GAAD,CACI1F,KAAM,gBACNgC,WAAY,eACZD,cAAe/F,EAAM2J,kBACrB9C,OAEI,gBADA7G,EAAM/N,eAAe+I,YAAYuD,aAE3B,CAAC,IAAK,MACN,CAAC,KAAM,MAEjBqI,aAAc5G,EAAM/N,eAAe+I,YAAYmD,aAAalU,WAC5D8Z,SAAUpF,GAASc,gBAEvBP,EAAAhO,EAAA/E,cAACud,GAAD,CACI1F,KAAM,aACNgC,WAAY,kBACZD,cAAe/F,EAAM2J,kBACrB9C,OAAQ,CACJ,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJD,aAAc5G,EAAM/N,eAAe+I,YAAYyD,gBAAgBxU,WAC/D8Z,SAAUpF,GAASe,aAGnB,gBADHM,EAAM/N,eAAe+I,YAAYuD,cAE9BW,EAAAhO,EAAA/E,cAACud,GAAD,CACI1F,KAAM,aACNgC,WAAY,aACZD,cAAe/F,EAAM2J,kBACrB9C,OAAQ,CAAC,MAAO,OAAQ,KACxBD,aAAc5G,EAAM/N,eAAe+I,YAAYoD,WAAWnU,WAC1D8Z,SAAUpF,GAASgB,aAI3BT,EAAAhO,EAAA/E,cAAA,WAEA+S,EAAAhO,EAAA/E,cAAA,gCACA+S,EAAAhO,EAAA/E,cAACyd,GAAD,CACI5F,KAAM,aACNgC,WAAY,gBACZ4B,YAAY,EACZqB,KAAM,EACNrC,aACI5G,EAAM/N,eAAeyJ,gBAAgBmO,cAEzC9B,aAAc/H,EAAM8J,sBACpB/F,SAAUpF,GAASiB,WACnB3X,IAAK,IAGTiX,EAAAhO,EAAA/E,cAACmd,GAAD,CACItF,KAAM,qBACNgC,WAAY,iBACZjC,SAAUpF,GAASkB,UACnBoJ,KAAM,IACNrC,aACI5G,EAAM/N,eAAeyJ,gBAAgBqO,eAEzChC,aAAc/H,EAAM8J,sBACpB7hB,IAAK,EACLD,IAAK,IAETkX,EAAAhO,EAAA/E,cAACyd,GAAD,CACI5F,KAAM,aACNgC,WAAY,YACZjC,SAAUpF,GAASmB,WACnBmJ,KAAM,EACNrC,aAAc5G,EAAM/N,eAAeyJ,gBAAgBsO,UACnDjC,aAAc/H,EAAM8J,sBACpB7hB,IAAK,0BCtGNgiB,GAnCI,SAACjK,GAOhB,OACId,EAAAhO,EAAA/E,cAAC6Y,GAAA,EAAD,CACI/E,UAAU,cACVgF,KAAMjF,EAAMkK,UACZhF,OAAO,EACPC,sBAAsB,GAEtBjG,EAAAhO,EAAA/E,cAAA+S,EAAAhO,EAAA6T,SAAA,KACI7F,EAAAhO,EAAA/E,cAACge,GAAA,aAAD,CACI/S,MAAO4I,EAAM5I,MACbgT,iBAhBhB,SAA8BhT,GAC1B4I,EAAM+F,cAANve,OAAAoB,EAAA,EAAApB,CAAA,GACKwY,EAAMgG,WAAa5O,EAAMiT,OAelBC,cAAc,IAGlBpL,EAAAhO,EAAA/E,cAAA,WAEA+S,EAAAhO,EAAA/E,cAACmZ,EAAA,EAAD,CACIrF,UAAU,mBACVsF,QAAQ,YACRC,QAASxF,EAAMuK,OAHnB,YCIDC,WA3BOxH,IAAMwB,KACxB,SAACxE,GAMG,OACId,EAAAhO,EAAA/E,cAAA,OAAK0X,YAAU,EAAMC,WAAUnF,GAASqB,EAAM+D,WAC1C7E,EAAAhO,EAAA/E,cAACmZ,EAAA,EAAD,CACImF,MAAO,CACHC,gBAAiB1K,EAAM5I,MACvBA,MAAO4I,EAAM5I,MAV7B,WAAgC,IAAAuT,EACVjX,KAAQ2W,IAAI1W,IAAIqM,EAAM5I,OADZwT,EAAApjB,OAAAC,EAAA,EAAAD,CAAAmjB,EAAA,GAE5B,OAF4BC,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEP,EAAI,IAAM,QAAU,QAQRC,GAAiB,SAE1C/I,MAAO9B,EAAM5I,MACbmO,QAAQ,YACRC,QAASxF,EAAMwF,QACfvF,UAAU,qBARd,QAUUD,EAAMgE,QAK5B,SAACyC,EAAUlN,GAAX,OAAoBkN,EAASrP,QAAUmC,EAAKnC,SCpBjC,SAAS0T,GAAW9K,GAC/B,OACId,EAAAhO,EAAA/E,cAAA+S,EAAAhO,EAAA6T,SAAA,KACI7F,EAAAhO,EAAA/E,cAACyd,GAAD,CACI5F,KAAM,8BACNgC,WAAY,MACZiD,KAAM,EACNrC,aAAc5G,EAAMjO,UAAUI,IAC9B4V,aAAc/H,EAAM+K,gBACpBhH,SAAUpF,GAASE,IACnB5W,IAAK,IAGTiX,EAAAhO,EAAA/E,cAACmd,GAAD,CACItF,KAAM,gBACNgC,WAAY,eACZiD,KAAM,IACNrC,aAAc5G,EAAMjO,UAAUiZ,aAC9BjD,aAAc/H,EAAM+K,gBACpBhH,SAAUpF,GAASK,cACnB/W,IAAK,EACLD,IAAK,IAETkX,EAAAhO,EAAA/E,cAACmd,GAAD,CACItF,KAAM,gBACNgC,WAAY,eACZiD,KAAM,IACNrC,aAAc5G,EAAMjO,UAAUkZ,aAC9BlD,aAAc/H,EAAM+K,gBACpBhH,SAAUpF,GAASI,cACnB9W,IAAK,EACLD,IAAK,IAGTkX,EAAAhO,EAAA/E,cAAA,WAEA+S,EAAAhO,EAAA/E,cAAC+e,GAAD,CACIlH,KAAM,cACNgC,WAAY,YACZR,QAASxF,EAAMmL,kBACf/T,MAAO4I,EAAMjO,UAAU/H,UACvB+Z,SAAUpF,GAASG,aAGvBI,EAAAhO,EAAA/E,cAAA,WAEA+S,EAAAhO,EAAA/E,cAACgd,GAAD,CACInF,KAAM,yBACNgC,WAAY,iBACZF,QAAS9F,EAAMjO,UAAUqZ,eACzBrF,cAAe/F,EAAM+K,gBACrB1F,QACInG,EAAAhO,EAAA/E,cAAA+S,EAAAhO,EAAA6T,SAAA,+KCdb,IAAMsG,GAAb,SAAA7I,GAMI,SAAA6I,EAAYrL,GAAwB,IAAAyC,EAAA,OAAAjb,OAAAkb,EAAA,EAAAlb,CAAAsR,KAAAuS,IAChC5I,EAAAjb,OAAAmb,EAAA,EAAAnb,CAAAsR,KAAAtR,OAAAob,EAAA,EAAApb,CAAA6jB,GAAAxI,KAAA/J,KAAMkH,KAHFsL,YAAsB,EAI1B7I,EAAK7Q,MAAQ,CACT2Z,aAAc,MACdC,cAAc,EACdC,gBAAgB,GAEpBhJ,EAAKiJ,aAAejJ,EAAKiJ,aAAavI,KAAlB3b,OAAA4b,EAAA,EAAA5b,CAAAib,IACpBA,EAAKkJ,aAAelJ,EAAKkJ,aAAaxI,KAAlB3b,OAAA4b,EAAA,EAAA5b,CAAAib,IACpBA,EAAKmJ,iBAAmBnJ,EAAKmJ,iBAAiBzI,KAAtB3b,OAAA4b,EAAA,EAAA5b,CAAAib,IACxBA,EAAKoJ,qBAAuBpJ,EAAKoJ,qBAAqB1I,KAA1B3b,OAAA4b,EAAA,EAAA5b,CAAAib,IAC5BA,EAAKzC,MAAM1F,OAAOwR,iBAAiB,YAAarJ,EAAKmJ,kBAXrBnJ,EANxC,OAAAjb,OAAA6b,EAAA,EAAA7b,CAAA6jB,EAAA7I,GAAAhb,OAAA8b,EAAA,EAAA9b,CAAA6jB,EAAA,EAAA9H,IAAA,mBAAAzB,MAAA,WAoBuB,IAAAiK,EAAAjT,KACfA,KAAKkT,SAAS,CAAET,aAAc,QAC9BzS,KAAKkH,MAAM1F,OAAOrO,SAASggB,KAAKxB,MAAMyB,OAAS,UAC/CpT,KAAKkH,MAAM1F,OAAOc,cAActC,KAAKwS,aAGhCxS,KAAKlH,MAAM4Z,cACV1S,KAAKkH,MAAM/N,eAAeuX,aACvB1Q,KAAKkH,MAAMjO,UAAUqZ,iBAE1BtS,KAAKwS,YAAcxS,KAAKkH,MAAM1F,OAAO6B,WAAW,WAC5C4P,EAAKC,SAAS,CACVT,aAAczkB,IAElBilB,EAAK/L,MAAM1F,OAAOrO,SAASggB,KAAKxB,MAAMyB,OAAS,QAChDplB,MAnCf,CAAAyc,IAAA,eAAAzB,MAAA,WAwCQhJ,KAAKkH,MAAM1F,OAAOc,cAActC,KAAKwS,aACrCxS,KAAKkT,SAAS,CAAER,cAAc,MAzCtC,CAAAjI,IAAA,eAAAzB,MAAA,WA6CQhJ,KAAKkT,SAAS,CAAER,cAAc,MA7CtC,CAAAjI,IAAA,wBAAAzB,MAAA,SAiDQ2B,EACA0I,GAEA,OACIrT,KAAKlH,MAAM6Z,iBAAmBU,EAAUV,gBACxCU,EAAUZ,eAAiBzS,KAAKlH,MAAM2Z,eACrCa,IAAQ3I,EAAW3K,KAAKkH,SAvDrC,CAAAuD,IAAA,uBAAAzB,MAAA,WA4DQhJ,KAAKkH,MAAM1F,OAAOc,cAActC,KAAKwS,aACrCxS,KAAKkH,MAAM1F,OAAO+R,oBACd,YACAvT,KAAK8S,oBA/DjB,CAAArI,IAAA,uBAAAzB,MAAA,WAoEQhJ,KAAKkT,SAAS,CACVP,gBAAiB3S,KAAKlH,MAAM6Z,mBArExC,CAAAlI,IAAA,SAAAzB,MAAA,WAyEa,IAAAwK,EAAAxT,KAIL,OACIoG,EAAAhO,EAAA/E,cAAA+S,EAAAhO,EAAA6T,SAAA,KACI7F,EAAAhO,EAAA/E,cAAA,OACIse,MAAO,CACH8B,KAAMzT,KAAKlH,MAAM2Z,aACjB5jB,MAAOb,GAEXmZ,UAAW,aACXyL,aAAc5S,KAAK4S,aACnBC,aAAc7S,KAAK6S,cAEnBzM,EAAAhO,EAAA/E,cAAA,sBACA+S,EAAAhO,EAAA/E,cAACmZ,EAAA,EAAD,CACIC,QAAQ,YACRtF,UAAU,OACVuF,QAlBI,WAChB8G,EAAKtM,MAAM+K,gBAAgB,CAAE1Y,UAAU,MAc/B,QAQA6M,EAAAhO,EAAA/E,cAAC2e,GAADtjB,OAAAglB,OAAA,GACQ1T,KAAKkH,MADb,CAEImL,kBAAmBrS,KAAK+S,wBAG3B/S,KAAKkH,MAAMjO,UAAUqZ,gBAClBlM,EAAAhO,EAAA/E,cAAC+c,GAAwBpQ,KAAKkH,OAGlCd,EAAAhO,EAAA/E,cAAA,WAEA+S,EAAAhO,EAAA/E,cAACmZ,EAAA,EAAD,CACIC,QAAQ,YACRtF,UAAU,QACVuF,QAAS1M,KAAKkH,MAAMyM,aAHxB,qBAQAvN,EAAAhO,EAAA/E,cAAA,WACA+S,EAAAhO,EAAA/E,cAAA,YAGH3E,OAAOqf,OAAOlI,IAAUzT,IAAI,SAACsN,EAAM+K,GAIhC,OAFI+I,EAAKtM,MAAMjO,UAAUqZ,gBACrBxM,GAAQ8N,SAASlU,KAGb0G,EAAAhO,EAAA/E,cAACwgB,GAAD,CACIpJ,IAAKA,EACLrD,YAAavB,GAASnG,OAMrCM,KAAKlH,MAAM6Z,gBACRvM,EAAAhO,EAAA/E,cAACygB,GAAD,CACI1C,UAAWpR,KAAKlH,MAAM6Z,eACtBrU,MAAO0B,KAAKkH,MAAMjO,UAAU/H,UAC5Bgc,WAAY,YACZuE,MAAOzR,KAAK+S,qBACZ9F,cAAejN,KAAKkH,MAAM+K,uBA5IlDM,EAAA,CAAgCrI,IAAMzC,WAuLvB+D,eApCS,SAAC1S,GAAD,MAAoD,CACxEG,UAAWD,GAAaF,GACxBK,eAAgBD,GAAkBJ,KAGX,SACvB8I,EACAmS,GAFuB,MAGrB,CACF9B,gBAAiB,SAACxS,GAAD,OACbmC,EACImD,GAAmBD,GAAgBI,IAAKzF,EAASsU,EAASvS,UAElE+O,qBAAsB,SAAC9Q,GAAD,OAClBmC,EACImD,GACID,GAAgBkP,SAChBvU,EACAsU,EAASvS,UAGrBqP,kBAAmB,SAACpR,GAAD,OACfmC,EACImD,GAAmBD,GAAgBM,MAAO3F,EAASsU,EAASvS,UAEpEwP,sBAAuB,SAACvR,GAAD,OACnBmC,EACImD,GACID,GAAgBmP,UAChBxU,EACAsU,EAASvS,UAGrBmS,YAAa,kBAAM/R,Eb7LZ,CAAElC,Ka6LqCoF,GAAgBoP,WAGnD1I,CAGb+G,WC7KF,OAkBe/G,eAlBS,SAAC1S,GAAD,MAAmD,CACvES,SAAUD,GAAYR,KAGC,SACvB8I,EACAmS,GAFuB,MAGrB,CACFI,mBAAoB,kBAChBvS,EACImD,GACID,GAAgBI,IAChB,CAAE3L,UAAU,GACZwa,EAASvS,YAKVgK,CA1Df,SAAmBtE,GACf,OACId,EAAAhO,EAAA/E,cAAC6Y,GAAA,EAAD,CACIC,KAAMjF,EAAM3N,SACZ6S,OAAO,EACPgI,QAASlN,EAAMiN,mBACf9H,sBAAsB,EACtBC,eAAe,GAEd,SAAAmF,GAAK,OACFrL,EAAAhO,EAAA/E,cAAA+S,EAAAhO,EAAA6T,SAAA,KACI7F,EAAAhO,EAAA/E,cAAA,4BADJ,mPAOI+S,EAAAhO,EAAA/E,cAAA,WACA+S,EAAAhO,EAAA/E,cAAA,WACA+S,EAAAhO,EAAA/E,cAAA,KACIghB,KAAK,2DACLvjB,OAAO,SACPwjB,IAAI,uBAHR,uCAOAlO,EAAAhO,EAAA/E,cAAA,WACA+S,EAAAhO,EAAA/E,cAACmZ,EAAA,EAAD,CACIC,QAAQ,YACRtF,UAAU,SACVuF,QAAS+E,GAHb,wBC5BP8C,GAA+B,CACxCrC,aAAc,GACdC,aAAc,GACd9Y,IAAK,EACLnI,UAAW,UACXohB,gBAAgB,EAChB/Y,UAAU,GAWDib,GAA8B,CACvCrb,eATkD,CAClDuX,aAAa,EACbxO,YAzB2C,CAC3CuD,aAAc,cACdJ,aAAc,GACdM,gBAAiB,IACjBL,WAAY,KAsBZ1C,gBAnBoD,CACpD6R,gBAAgB,EAChB1D,cAAe,EACfE,eAAgB,GAChBC,UAAW,IAgBXZ,kBAAkB,EAClBG,kBAAmB,IAKnBxX,UAAWsb,IAGTG,IAAmBC,GAAA,GAAAjmB,OAAAoB,EAAA,EAAApB,CAAAimB,GACpB7P,GAAgBI,IAgBrB,SAAsBpM,EAAqB8b,GACvC,OAAOlmB,OAAA6H,GAAA,EAAA7H,CAAA,GACAoK,EADP,CAEIG,UAAUvK,OAAA6H,GAAA,EAAA7H,CAAA,GACHoK,EAAMG,UACL2b,EAA+BnV,aAtBtB/Q,OAAAoB,EAAA,EAAApB,CAAAimB,GAEpB7P,GAAgBkP,SAyBrB,SACIlb,EACA8b,GAEA,OAAOlmB,OAAA6H,GAAA,EAAA7H,CAAA,GACAoK,EADP,CAEIK,eAAezK,OAAA6H,GAAA,EAAA7H,CAAA,GACRoK,EAAMK,eACLyb,EAAoCnV,aAnC3B/Q,OAAAoB,EAAA,EAAApB,CAAAimB,GAGpB7P,GAAgBM,MAqCrB,SACItM,EACA8b,GAEA,OAAOlmB,OAAA6H,GAAA,EAAA7H,CAAA,GACAoK,EADP,CAEIK,eAAezK,OAAA6H,GAAA,EAAA7H,CAAA,GACRoK,EAAMK,eADC,CAEV+I,YAAYxT,OAAA6H,GAAA,EAAA7H,CAAA,GACLoK,EAAMK,eAAe+I,YACpB0S,EAAiCnV,eAlD5B/Q,OAAAoB,EAAA,EAAApB,CAAAimB,GAIpB7P,GAAgBmP,UAoDrB,SACInb,EACA8b,GAEA,OAAOlmB,OAAA6H,GAAA,EAAA7H,CAAA,GACAoK,EADP,CAEIK,eAAezK,OAAA6H,GAAA,EAAA7H,CAAA,GACRoK,EAAMK,eADC,CAEVyJ,gBAAgBlU,OAAA6H,GAAA,EAAA7H,CAAA,GACToK,EAAMK,eAAeyJ,gBACpBgS,EAAqCnV,eAlEhC/Q,OAAAoB,EAAA,EAAApB,CAAAimB,GAKpB7P,GAAgBoP,MAmErB,WACI,OAAOxlB,OAAA6H,GAAA,EAAA7H,CAAA,GACA8lB,GADP,CAEIvb,UAAUvK,OAAA6H,GAAA,EAAA7H,CAAA,GAAM8lB,GAAcvb,UAArB,CAAgCM,UAAU,QA3ElCob,IA+EV5b,OAvEK,WAGD,IAFfD,EAEe1J,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFOolB,GACtBI,EACexlB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACf,OAAOolB,GAAoBvP,eAAeyP,EAAOlV,MAC3CgV,GAAoBE,EAAOlV,MAAM5G,EAAO8b,GACxC9b,YC5CG+b,WAAU3K,IAAMwB,KAAK,SAACxE,GAC/B,IAAM4N,EAAS5N,EAAM4N,OACfC,EAAennB,EAAgBC,OAC/BmnB,EAAYD,EAAe7N,EAAMxX,gBAEvC,SAASulB,EAAaC,GAClB,IAAMxb,EAAM,cAAAyb,OAAiBD,EAAQ,MAAQ,SAAjC,KACNE,EAAOF,GAAS,EAAI,EACpBG,EAAQH,EACR,CACII,MAAOpO,EAAMqO,YAAYC,SACzB/B,KAAMvM,EAAMqO,YAAYE,SAE5B,CACIH,MAAOpO,EAAMqO,YAAYG,YACzBjC,KAAMvM,EAAMqO,YAAYI,YAGlC,OACIvP,EAAAhO,EAAA/E,cAAA,QACIse,MAAOzK,EAAM0O,gBACblc,OAAQA,EACR5H,EAAC,kCAAAqjB,OACOC,EADP,8EAAAD,OAIOJ,EAJP,4BAAAI,OAKOJ,EACAD,EAAOe,qBAAuBR,EAAMC,MAN3C,8BAAAH,OAOSC,EAAON,EAAOgB,qBAPvB,8BAAAX,OAQSL,EAAOiB,cARhB,8BAAAZ,OASSC,EAAOJ,EAThB,yDAAAG,OAWSC,EAAOJ,EAXhB,4BAAAG,QAYQJ,EACDD,EAAOe,qBAAuBR,EAAM5B,KAb3C,8BAAA0B,OAcSC,EAAON,EAAOgB,qBAdvB,8BAAAX,QAeUJ,EAfV,wDAsBb,OACI3O,EAAAhO,EAAA/E,cAAA+S,EAAAhO,EAAA6T,SAAA,KACKgJ,GAAa,GACbA,GAAa,2BCtCXe,GAlBF9L,IAAMwB,KAAK,SAACxE,GACrB,OACId,EAAAhO,EAAA/E,cAAA,IAAO6T,EAAM+O,WACT7P,EAAAhO,EAAA/E,cAAA,UACI8T,UAAW,OACXnV,EAAGpE,EAAgBE,KACnB0b,KAAM,uBAEVpD,EAAAhO,EAAA/E,cAAA,QACI8T,UAAU,cACVrV,EAAGoV,EAAMgP,UACT1M,KAAM2M,KAAUjP,EAAMlW,UAAUE,WAC3BklB,OAAO,IACPC,mBCdd,SAASC,GAAMpP,GAClB,IAAMqP,EAAc3oB,EAAgBG,MACpC,OACIqY,EAAAhO,EAAA/E,cAAA,UACI8T,UAAW,QACXnV,EAAGukB,EACH/M,KAAMtC,EAAMsP,YAAc,sBAAwB,QAClD7E,MAAOzK,EAAM0O,gBACba,UAAS,SAAAtB,OAAWjO,EAAMlW,UAAUb,SAA3B,OCVd,SAASumB,GAAWxP,GACvB,IAAM8C,EAAgDwF,iBAAO,MAE7DxD,oBAAU,WACN,GAAIhC,GAAa9C,EAAMyP,WAAY,CAC/B,IAAMvjB,EAAS4W,EAAUnQ,QACzB,GAAIzG,EAAQ,CACR,IAAM4U,EAAM5U,EAAOG,WAAW,MAC1ByU,GACAA,EAAI4O,aAAa1P,EAAMyP,WAAY,EAAG,MAInD,CAACzP,EAAMyP,aAEV,IAAIE,EAAO,IACP3P,EAAMyP,aACNE,EAAO3P,EAAMyP,WAAW9nB,OAE5B,IAAIkZ,EAAyC,EAAxBna,EAAgBG,MAAxB,IAAsC8oB,EAKnD,OAJI3P,EAAMlW,UAAUb,WAChB4X,GAASb,EAAMlW,UAAUb,UAIzBiW,EAAAhO,EAAA/E,cAAA,IAAO6T,EAAM+O,WACT7P,EAAAhO,EAAA/E,cAAA,iBACIxE,MAAOgoB,EACP/nB,OAAQ+nB,EACRzoB,GAAIyoB,EAAO,EACXxoB,GAAIwoB,EAAO,EACXlF,MAAOzK,EAAM0O,gBACba,UAAS,SAAAtB,OAAWpN,EAAX,MAERb,EAAMyP,YACHvQ,EAAAhO,EAAA/E,cAAA,UAAQ8X,IAAKnB,EAAWnb,MAAOgoB,EAAM/nB,OAAQ+nB,MCxC1D,SAASC,KACZ,IAAMP,EAAc3oB,EAAgBG,MAC9BgpB,EAAanpB,EAAgBE,KAEnC,OACIsY,EAAAhO,EAAA/E,cAAA,SACI+S,EAAAhO,EAAA/E,cAAA,WACI8T,UAAW,aACX6P,GAAkB,KAAdT,EACJU,GAAkB,IAAdV,EACJ/M,KAAM,sBACNiN,UAAS,uBAAAtB,OAAyBoB,EAAzB,KAAApB,OACL,IAD8CoB,EAAzC,OAGbnQ,EAAAhO,EAAA/E,cAAA,WACI8T,UAAW,aACX6P,GAAkB,GAAdT,EACJU,GAAIV,EACJ/M,KAAM,sBACNiN,UAAS,uBAAAtB,OAAyB4B,EAAzB,KAAA5B,OACL,KAD6C4B,EAAxC,QCnBlB,IAAMG,GAAShN,IAAMwB,KAAK,WAC7B,OACItF,EAAAhO,EAAA/E,cAAA,UACI8T,UAAW,SACXnV,EAAGpE,EAAgBC,OACnB2b,KAAM,2BCmBH,SAAS2N,GAAIjQ,GACxB,IAAMqO,EAA6BrO,EAAMkQ,QCrBzBxsB,EAAQoF,MAClB,CACIylB,QANkB,KAOlBD,SALkB,GAMlBG,WAPqB,IAQrBD,YANqB,IAQzB,CACID,QAVkB,GAWlBD,SAbkB,KAclBG,WAXqB,GAYrBD,YAdqB,KDyBzB2B,EAAwB,CAC1BC,WAAU,KAAAnC,OAAOjO,EAAMlW,UAAUrB,SAAvB,OAERimB,EAAkB,CACpB0B,WAAU,aAAAnC,OAAejO,EAAMlW,UAAUrB,SAA/B,OAGR4nB,EAAa,CACfpQ,UAAW,QACXwK,MAAOiE,EACPa,UAAS,GAAAtB,OAAKjO,EAAMsQ,cAAX,eAAArC,OACLjO,EAAMlW,UAAUF,OAAQ1C,EADnB,KAAA+mB,OAELjO,EAAMlW,UAAUF,OAAQzC,EAFnB,MAKb,OACI+X,EAAAhO,EAAA/E,cAAA,OAAK8T,UAAWD,EAAMkQ,OAClBhR,EAAAhO,EAAA/E,cAAA,OAAK8T,UAAU,QAAQsQ,QAAS,gBAC5BrR,EAAAhO,EAAA/E,cAAC6jB,GAAD,MACA9Q,EAAAhO,EAAA/E,cAACqkB,GAAD,CACI9B,gBAAiBA,EACjB5kB,UAAWkW,EAAMlW,UACjBklB,UAAWhP,EAAMgP,UACjBD,WAAYsB,KAIpBnR,EAAAhO,EAAA/E,cAAA,OAAK8T,UAAU,QAAQsQ,QAAQ,gBAC3BrR,EAAAhO,EAAA/E,cAACqjB,GAAD,CACId,gBAAiBA,EACjBK,WAAYsB,EACZvmB,UAAWkW,EAAMlW,UACjB2lB,WAAYzP,EAAMyP,cAI1BvQ,EAAAhO,EAAA/E,cAAA,OAAK8T,UAAU,QAAQsQ,QAAS,gBAC5BrR,EAAAhO,EAAA/E,cAAA,IAAOkkB,EACHnR,EAAAhO,EAAA/E,cAACijB,GAAD,CACItlB,UAAWkW,EAAMlW,UACjB4kB,gBAAiBA,EACjBY,iBAAkClnB,IAArB4X,EAAMyP,aAEvBvQ,EAAAhO,EAAA/E,cAACyjB,GAAD,OAEJ1Q,EAAAhO,EAAA/E,cAACwhB,GAADnmB,OAAAglB,OAAA,GACQxM,EADR,CAEI0O,gBAAiByB,EACjB9B,YAAaA,kBEjEpBoC,GAAYzN,IAAMwB,KAC3B,SAACxE,GACG,IAAM0Q,EAAgBzB,KAAUjP,EAAMhW,WACjCklB,OALQ,IAMRC,cACCwB,EAAiB1B,KAAUjP,EAAMhW,WAClC4mB,SATS,IAUTzB,cAEL,OACIjQ,EAAAhO,EAAA/E,cAAA,OAAK8T,UAAU,YACXf,EAAAhO,EAAA/E,cAAA,YACI+S,EAAAhO,EAAA/E,cAAA,kBACImP,GAAG,QACHuV,GAAG,KACHC,GAAG,MACHC,GAAG,OACHC,GAAG,OAEH9R,EAAAhO,EAAA/E,cAAA,QAAM8kB,OAAO,MAAMC,UAAWlR,EAAMhW,YACpCkV,EAAAhO,EAAA/E,cAAA,QAAM8kB,OAAO,MAAMC,UAAWP,IAC9BzR,EAAAhO,EAAA/E,cAAA,QAAM8kB,OAAO,OAAOC,UAAWR,KAGnCxR,EAAAhO,EAAA/E,cAAA,kBAAgBmP,GAAG,iBAAiB6V,GAAG,MAAMC,GAAG,OAC5ClS,EAAAhO,EAAA/E,cAAA,QAAM8kB,OAAO,KAAKC,UAAU,UAC5BhS,EAAAhO,EAAA/E,cAAA,QAAM8kB,OAAO,MAAMC,UAAU,YAC7BhS,EAAAhO,EAAA/E,cAAA,QAAM8kB,OAAO,MAAMC,UAAU,YAC7BhS,EAAAhO,EAAA/E,cAAA,QAAM8kB,OAAO,MAAMC,UAAU,YAC7BhS,EAAAhO,EAAA/E,cAAA,QAAM8kB,OAAO,MAAMC,UAAU,YAC7BhS,EAAAhO,EAAA/E,cAAA,QAAM8kB,OAAO,OAAOC,UAAU,aAGlChS,EAAAhO,EAAA/E,cAAA,kBACImP,GAAG,eACH6V,GAAG,MACHC,GAAG,MACHjE,KAAK,WAGTjO,EAAAhO,EAAA/E,cAAA,kBAAgBmP,GAAG,iBACf4D,EAAAhO,EAAA/E,cAAA,QAAM8kB,OAAO,KAAKC,UAAU,QAAQG,YAAa,IACjDnS,EAAAhO,EAAA/E,cAAA,QACI8kB,OAAO,MACPC,UAAU,QACVG,YAAa,KAEjBnS,EAAAhO,EAAA/E,cAAA,QACI8kB,OAAO,MACPC,UAAU,QACVG,YAAa,OAIrBnS,EAAAhO,EAAA/E,cAAA,kBAAgBmP,GAAG,iBACf4D,EAAAhO,EAAA/E,cAAA,QACI8kB,OAAO,KACPC,UAAU,QACVG,YAAa,EAAIrR,EAAMuJ,oBAE3BrK,EAAAhO,EAAA/E,cAAA,QACI8kB,OAAO,MACPC,UAAU,QACVG,YAAa,EAAI,IAAOrR,EAAMuJ,oBAElCrK,EAAAhO,EAAA/E,cAAA,QAAM8kB,OAAO,OAAOC,UAAU,QAAQG,YAAa,QAMvE,SAAC5K,EAAUlN,GAAX,OACIkN,EAASzc,YAAcuP,EAAKvP,WAC5Byc,EAAS8C,oBAAsBhQ,EAAKgQ,oBC9E/B+H,GAAUtO,IAAMwB,KACzB,SAACxE,GACG,OACId,EAAAhO,EAAA/E,cAAA,OAAK8T,UAAU,YACXf,EAAAhO,EAAA/E,cAAA,YACI+S,EAAAhO,EAAA/E,cAAA,UAAQmP,GAAG,aACP4D,EAAAhO,EAAA/E,cAAA,gBACIolB,GAAG,IACHC,GACK,IAAOxR,EAAMxX,gBACd5E,EAAeC,KAEnB4tB,aACK,IAAOzR,EAAMxX,gBACd5E,EAAeC,KAEnB6tB,WAAW,UACXC,aAAc,MAGtBzS,EAAAhO,EAAA/E,cAAA,UAAQmP,GAAG,gBACP4D,EAAAhO,EAAA/E,cAAA,gBACIolB,GAAG,IACHC,IACM,MAASxR,EAAMxX,gBACjB5E,EAAeC,KAEnB4tB,aACK,MAASzR,EAAMxX,gBAChB5E,EAAeC,KAEnB6tB,WAAW,UACXC,aAAc,SAOtC,SAAClL,EAAUlN,GAAX,OAAoBkN,EAASje,kBAAoB+Q,EAAK/Q,kBC3BnD,SAASopB,GAAgBhoB,GAAqC,IAApBioB,EAAoB3pB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAH,EACxD4pB,EAAavoB,KAAK4D,MAAMvD,EAAO1C,EAAG0C,EAAOzC,GACzC0Z,EAAQiR,EAAaD,EAASA,EAASC,EAAa,EAE1D,MAAO,CAAE5qB,EAAG2Z,EAAQjX,EAAO1C,EAAGC,EAAG0Z,EAAQjX,EAAOzC,GCnB7C,SAAS4qB,GAAcnoB,EAAiBkN,GAC3C,IACMgK,EADS7U,SAASE,cAAc,UACnBE,WAAW,MAC9B,IAAKyU,EACD,OAAO,IAAIkR,UAAUlb,EAAMnP,MAAOmP,EAAMlP,QAE5C,IAAMqqB,EAmEV,SAAiBroB,EAAiBkN,GAC9B,IAAMob,EAAwB,GAAdpb,EAAMnP,MAElBwqB,EAAUrqB,EAAU8B,EAAO1C,EAAG,GAAI,EAAG4P,EAAMnP,MAAO,GAAKuqB,EAAU,EACrEC,EAAU5oB,KAAKtB,IAAIkqB,EAASrb,EAAMnP,MAAQuqB,GAC1CC,EAAU5oB,KAAKvB,IAAImqB,EAAS,GAE5B,IAAIC,EAAUtqB,EAAU8B,EAAOzC,EAAG,GAAI,EAAG2P,EAAMlP,OAAQ,GAAKsqB,EAAU,EAItE,OAHAE,EAAU7oB,KAAKtB,IAAImqB,EAAStb,EAAMlP,OAASsqB,GAC3CE,EAAU7oB,KAAKvB,IAAIoqB,EAAS,GAErB,CACHD,UACAC,UACAC,YAAaH,EACbI,aAAcJ,GAlFLK,CAAQ3oB,EAAQkN,GAC7BgK,EAAID,OAAO,EAAG,GACd,IAAM2R,EAAyB,GAAd1b,EAAMnP,MACvBmZ,EAAIxU,UACAwK,EACAmb,EAAKE,QACLF,EAAKG,QACLH,EAAKI,YACLJ,EAAKK,aACL,EACA,GACCE,EACDA,GAEJ,IAAMC,EAAU3R,EAAIvU,aAAa,EAAG,EAAGimB,EAAUA,GAC3CE,EAKV,SACIC,EACAhrB,EACAC,GAIA,IAFA,IAAM8qB,EAAS,IAAIE,kBAAkBD,EAAOxqB,QAEnC0qB,EAAU,EAAGA,EAAUjrB,EAAQirB,IAGpC,IAFA,IAAMC,EAAchrB,EAAU+qB,EAASjrB,GAE9BmrB,EAAa,EAAGA,EAAaprB,EAAOorB,IAAc,CACvD,IAAMC,EAAclrB,EAAUirB,EAAYprB,GACpCsrB,EAAmB1pB,KAAK4D,MAAM6lB,EAAaF,GAGjD,GAAI,GAAKG,GAAoBA,GAAoB,EAAG,CAEhD,IAAIC,EAAgB3pB,KAAK4pB,KACrB,EAAI5pB,KAAKgE,IAAI0lB,EAAkB,IAMnCC,GAHAA,GAAiBD,GAAoB,EAAIC,IAAkB,GAIvC9sB,EAAcC,UAC9B4sB,GAAoB,EAAI7sB,EAAcC,WAE1C,IAAMiD,EAAQC,KAAKoH,MAAMmiB,EAAaE,GAChCI,EAASF,EAAgB3pB,KAAKG,IAAIJ,GAClC+pB,EAASH,EAAgB3pB,KAAKE,IAAIH,GAClCgqB,EAAO/pB,KAAKmU,MAAM5V,EAAUsrB,EAAQ,GAAI,EAAGzrB,EAAO,IAClD4rB,EAAOhqB,KAAKmU,MAAM5V,EAAUurB,EAAQ,GAAI,EAAGzrB,EAAQ,IACnD4rB,EAASD,EAAO5rB,EAAQ2rB,EAC9B,GAAIE,GAAU,GAAKA,EAAS7rB,EAAQC,EAChC,IAAK,IAAIyB,EAAI,EAAGA,EAAI,EAAGA,IACnBqpB,EACI,EAAInpB,KAAKmU,MAAMmV,EAAUlrB,EAAQorB,GAAc1pB,GAC/CspB,EAAgB,EAATa,EAAanqB,IAM5C,OAAOqpB,EAjD2Be,CAAQhB,EAAQtf,KAAMqf,EAAUA,GAElE,OADAC,EAAQtf,KAAKugB,IAAIhB,GACVD,ECvBJ,SAASkB,GAAoB9rB,GAChC,IAAMgqB,EAAStoB,KAAK4D,MAAMtF,EAASX,EAAGW,EAASV,GAC/C,GAAe,IAAX0qB,EACA,MAAO,GAGX,IAAMhR,EACF7Z,EAAec,EAAU,EAAI+pB,EAAQ,EAAG,EAAG,EAAI7qB,EAAc,GAE3D4sB,EAAQ/rB,EAASX,EAAI2qB,EACrBgC,EAAQhsB,EAASV,EAAI0qB,EACrBiC,EAASvqB,KAAKgE,IAAIqmB,EAAO,GACzBG,EAASxqB,KAAKgE,IAAIsmB,EAAO,GAGzBR,EAASU,EAASlT,EAAQiT,EAC1BE,GAAQ,EAAInT,GAAS+S,EAAQC,EACnC,gBAAA5F,OAHepN,EAAQiT,EAASC,EAGhC,KAAA9F,OAA2B+F,EAA3B,KAAA/F,OAAmC+F,EAAnC,KAAA/F,OAA2CoF,EAA3C,SCiDG,IAAMY,GAAgBjR,IAAMwB,KAC/B,SAACxE,GAA8B,IACnBkU,EAA4ClU,EAA5CkU,YAAaC,EAA+BnU,EAA/BmU,gBAAiBrqB,EAAckW,EAAdlW,UAChCklB,EAAY1G,iBAAO,IAEzBxD,oBAAU,WACNkK,EAAUrc,QDpDf,SAA2Bkf,EAAgBuC,GAS9C,IARA,IAAMC,EAAuB,GAATxC,EACdyC,EAAuB,GAATzC,EACd0C,EAAc,EAAIhrB,KAAKC,GAAM4qB,EAC7BI,GAAeD,EAAa,EAE9BE,EAAa,KAAAxG,OAAQoG,EACrB9qB,KAAKG,IAAI6qB,GAAcH,EAAU,IADpB,KAAAnG,OAC2BoG,EACxC9qB,KAAKE,IAAI8qB,GAAcH,EAAU,IAFpB,KAGR/qB,EAAI,EAAGA,EAAI+qB,EAAS/qB,IAAK,CAC9B,IAAMqrB,EAAiBH,EAAalrB,EASpCorB,GARa,KAAAxG,OAAQqG,EACjB/qB,KAAKG,IAAIgrB,EAAiBF,GADjB,KAAAvG,OACiCqG,EAC1C/qB,KAAKE,IAAIirB,EAAiBF,GAFjB,KASbC,GALY,KAAAxG,OAAQoG,EAChB9qB,KAAKG,IAAIgrB,GADD,KAAAzG,OACoBoG,EAC5B9qB,KAAKE,IAAIirB,GAFD,KAOhB,OAAOD,EC8BqBE,CAChBjuB,EAAgBE,K7CkBE,M6CfvB,IAEH,IAAMguB,EAAgBtM,sBAA8BlgB,GAE9CP,EACFmY,EAAM6U,iBAAmB/qB,EAAU,GAAGF,OAChCgoB,GAAgB9nB,EAAU,GAAGF,QAC7BgoB,GAAgB,CACZ1qB,EAAG8Y,EAAMpW,OAAO1C,EAAI8Y,EAAMjO,UAAUiZ,aACpC7jB,EACI6Y,EAAMpW,OAAOzC,EACb6Y,EAAMjO,UAAUkZ,a7CSP,K6CLrBpK,GACDna,EAAgBC,OAASD,EAAgBE,KAAOI,GACjDA,EACE4C,EAAS,CACX1C,GAAIW,EAASX,EAAI2Z,EACjB1Z,EAAGU,EAASV,EAAI0Z,GAGdiU,EAAKttB,OAAA6H,GAAA,EAAA7H,CAAA,CACPgB,gBAAiBwX,EAAM+U,WACjBnxB,EAAeE,OACfkc,EAAMxX,gBACZS,SAAU+W,EAAM/W,SAChBe,UAAWgW,EAAMjO,UAAU/H,UAC3BvB,SAAU,IAAOuX,EAAMjO,UAAUI,KAC9BrI,EAAU,GAPN,CAQPF,WAGEorB,EAAc1M,iBAAOtI,EAAMiV,UAwDjC,OAtDAnQ,oBAAU,WACNkQ,EAAYriB,QAAUqN,EAAMiV,UAC7B,CAACjV,EAAMiV,WAEVnQ,oBAAU,WACN,OAAO9E,EAAM+U,WAqHzB,SACIb,EACAC,GAEA,IAAIe,EAAehB,EAAY3Y,YAAY,WACvC,IAAM4Z,EACFhwB,EAAYG,eAAiB,IAAOjB,EAAgBE,MAExD,GAAIgF,KAAKQ,SAAWorB,EAAiB,CACjC,IAAMprB,EAASR,KAAKQ,SACpBoqB,E3CrGL,SAAciB,EAAmBC,GAA+B,IAAAC,EAAAC,EACnE,MAAO,CACH,CACI/sB,iBAAe8sB,EAAA,GAAA9tB,OAAAoB,EAAA,EAAApB,CAAA8tB,EACV5xB,EAAQoF,MAAQusB,EACXzxB,EAAeC,KACfD,EAAeE,QAHV0D,OAAAoB,EAAA,EAAApB,CAAA8tB,EAIV5xB,EAAQmF,KAAOusB,EACVxxB,EAAeC,KACfD,EAAeE,QANVwxB,GAQf7sB,SAAUpE,EAAgBE,MAE9B,CAAEkE,SAAUpE,EAAgBE,MAC5B,CACIiE,iBAAe+sB,EAAA,GAAA/tB,OAAAoB,EAAA,EAAApB,CAAA+tB,EACV7xB,EAAQoF,MAAQlF,EAAeE,QADrB0D,OAAAoB,EAAA,EAAApB,CAAA+tB,EAEV7xB,EAAQmF,KAAOjF,EAAeE,QAFpByxB,GAIf9sB,SAAUpE,EAAgBE,O2CkFVA,CAAKwF,EAAS,GAAKA,EAAS,OAEjD1F,EAAgBE,MAEnB,OAAO,WACH2vB,EAAY9Y,cAAc8Z,GAC1BA,EAAe,GApILM,CAAYtB,EAAaC,GA4F3C,SACID,EACAc,EACAb,GAEA,IAAIsB,EAAgBvB,EAAY3Y,YAAY,WACxC,IAAMma,EAAiBV,EAAYriB,QAC7BxN,EAAYE,iBACZF,EAAYC,UAEZuwB,EACFD,GAAkB,IAAOrxB,EAAgBC,OAEzCiF,KAAKQ,SAAW4rB,GAChBxB,E3C7FD,CACH,CACI3rB,gBAAiB5E,EAAeE,OAChC2E,SAAUpE,EAAgBC,OAE9B,CACIkE,gBAAiB5E,EAAeC,KAChC4E,SAAUpE,EAAgBC,U2CwF/BD,EAAgBC,OAEnB,OAAO,WACH4vB,EAAY9Y,cAAcqa,GAC1BA,EAAgB,GA/GNG,CAAa1B,EAAac,EAAab,IAC9C,CAACnU,EAAM+U,WAAYb,EAAaC,EAAiBa,IAEpDlQ,oBAAU,WACN,GAAI9E,EAAM6U,gBAAiB,CACvB,IAAMgB,EAAQ3B,EAAY/X,WAAW,WACjC,IAAM2Z,EAAWtuB,OAAAuuB,GAAA,EAAAvuB,CAAOsC,GACxBgsB,EAAaE,QACb7B,EAAgB2B,IACjBhsB,EAAU,GAAGrB,UAChB,OAAO,kBAAMyrB,EAAY+B,aAAaJ,MAE3C,CAAC/rB,EAAWqqB,EAAiBD,EAAalU,EAAM6U,kBAEnD/P,oBAAU,WAEF9E,EAAM/N,eAAemX,kBACrBpJ,EAAMlJ,OACNkJ,EAAM/M,UAEN2hB,EAAcjiB,QAAUof,GACpB/R,EAAMpW,OACNoW,EAAMlJ,OAGV8d,EAAcjiB,aAAUvK,GAE7B,CACC4X,EAAMpW,OACNoW,EAAMlJ,MACNkJ,EAAM/N,eAAemX,iBACrBpJ,EAAM/M,YAGV6R,oBAAU,WACN,IAAMoR,EAA0B,SAACrQ,GAC7B,OAmGhB,SACIA,EACAsO,GAEA,IAAMgC,EAAezrB,GAAUmb,EAAMtC,KACjC4S,GACAhC,EAAgBgC,KAzGDC,CAAYvQ,EAAOsO,IAI9B,OADAD,EAAYpI,iBAAiB,QAASoK,GAC/B,kBACHhC,EAAY7H,oBACR,QACA6J,KAET,CAAChC,EAAaC,IAGbjV,EAAAhO,EAAA/E,cAAA,OAAK8T,UAAU,aACV,CAACvc,EAAQoF,MAAOpF,EAAQmF,MAAMqC,IAAI,SAACmrB,EAAKjZ,GACrC,IAAM5U,EAC+B,kBAA1BssB,EAAMtsB,gBACPssB,EAAMtsB,gBACNssB,EAAMtsB,gBAAgB6tB,GAE1BzI,EN5JnB,SAAmBplB,GACtB,IACMqmB,EADgB,aACAnoB,EAAgBC,OAChCioB,EAAuBC,EAAgBrmB,EAE7C,MAAO,CAAEqmB,gBAAeF,qBADKE,EAAgBD,EACCA,wBMuJf0H,CAAU9tB,GAEzB,OACI0W,EAAAhO,EAAA/E,cAACoqB,GAAD/uB,OAAAglB,OAAA,GACQxM,EADR,CAEIkQ,MAAOmG,EACP9S,IAAKnG,EACLtT,UAAWgrB,EACXlH,OAAQA,EACR6B,WAAYmF,EAAcjiB,QAC1Bqc,UAAWA,EAAUrc,QACrB2d,cAAeqD,GAAoB9rB,GACnC0hB,kBACIvJ,EAAM/N,eAAesX,kBAEzB/gB,gBAAiBA,OAI7B0W,EAAAhO,EAAA/E,cAACqqB,GAAD,CACIxsB,UAAW8qB,EAAM9qB,UACjBuf,kBAAmBvJ,EAAM/N,eAAesX,oBAE5CrK,EAAAhO,EAAA/E,cAACmlB,GAAD,CAAS9oB,gBAAiBwX,EAAMxX,oBAI5C,SAACie,EAAUlN,GAAX,OACI6S,IAAQ3F,EAAS3c,UAAWyP,EAAKzP,YACjC2c,EAASxd,WAAasQ,EAAKtQ,UAC3Bwd,EAASje,kBAAoB+Q,EAAK/Q,iBAClCie,EAAS7c,OAAO1C,IAAMqS,EAAK3P,OAAO1C,GAClCuf,EAAS7c,OAAOzC,IAAMoS,EAAK3P,OAAOzC,GAClCsf,EAASsO,aAAexb,EAAKwb,aAyDrC,IAiCezQ,eAjCS,SAAC1S,GAAD,MAAuD,CAC3EG,UAAWD,GAAaF,GACxBK,eAAgBD,GAAkBJ,GAClChI,OAAQkO,GAAWlG,GACnBkF,MAAOL,GAAS7E,GAChB9B,UAAWmH,GAAcrF,GACzB9H,UAAWqO,GAAcvG,GACzBijB,gBAAiBzc,GAAmBxG,GACpCqB,UAAW1G,GAAaqF,KAGD,SACvB8I,GADuB,MAEa,CACpCyZ,gBAAiB,SAACrqB,GAAD,OACb4Q,EAASuB,GAAanS,OAGX,SACf2sB,EACAC,EACA7J,GAEA,IAAM7M,EAAyBxY,OAAA6H,GAAA,EAAA7H,CAAA,GACxBqlB,EACA4J,EACAC,GAIP,OAFA1W,EAAMjO,UAAY8a,EAAS9a,WAAa0kB,EAAW1kB,UACnDiO,EAAMpW,OAASijB,EAASjjB,QAAU6sB,EAAW7sB,OACtCoW,GAGIsE,CAIb2P,ICpSK,SAAS0C,GAAsB3W,GAAoC,IAAAyE,EAC1CC,mBAAS,CAAExd,EAAG,EAAGC,EAAG,IADsByd,EAAApd,OAAAC,EAAA,EAAAD,CAAAid,EAAA,GAC/D7a,EAD+Dgb,EAAA,GACvDgS,EADuDhS,EAAA,GAiCtE,OA/BAE,oBAAU,WACN,IAUM+R,EAA4BC,oBAVT,SAACC,GACtB,IAAM7vB,GACDY,EAAUivB,EAAGC,QAAShX,EAAMrY,OAC7B0lB,GAAiBrC,aACf7jB,EACFW,EAAUivB,EAAGE,QAASjX,EAAMpY,QAC5BylB,GAAiBpC,aACrB2L,EAAU,CAAE1vB,IAAGC,OAKfkmB,GAAiBlb,KAUrB,OAPA6N,EAAMkU,YAAYpI,iBACd,YACA+K,GAGJ7W,EAAMkU,YAAYjoB,SAASggB,KAAKxB,MAAMyB,OAAS,UAExC,WACHlM,EAAMkU,YAAY7H,oBACd,YACAwK,KAGT,CAAC7W,EAAMkU,YAAalU,EAAMrY,MAAOqY,EAAMpY,SAGtCsX,EAAAhO,EAAA/E,cAAC+qB,GAAD1vB,OAAAglB,OAAA,GACQxM,EADR,CAEI/W,SAAUhF,EAAWE,QACrBqE,gBAAiB5E,EAAeC,KAChCoxB,UAAU,EACVF,YAAY,EACZnrB,OAAQA,EACRmI,UAAWsb,MCtDhB,IAAM8J,GAAkB,CAC3BC,MAAO,CACH,CAAEC,OAAQ,QAASjyB,UAAW,GAC9B,CAAEiyB,OAAQ,aAAcjyB,UAAW,GACnC,CAAEiyB,OAAQ,qBAAsBjyB,UAAW,IAC3C,CAAEiyB,OAAQ,eAAgBjyB,UAAW,IACrC,CAAEiyB,OAAQ,iBAAkBjyB,UAAW,IACvC,CAAEiyB,OAAQ,sBAAuBjyB,UAAW,IAC5C,CAAEiyB,OAAQ,oCAAqCjyB,UAAW,KAC1D,CAAEiyB,OAAQ,+BAAgCjyB,UAAW,IACrD,CAAEiyB,OAAQ,aAAcjyB,UAAW,IACnC,CAAEiyB,OAAQ,4BAA6BjyB,UAAW,KAClD,CACIiyB,OAAQ,+CACRjyB,UAAW,KAEf,CAAEiyB,OAAQ,6BAA8BjyB,UAAW,KACnD,CAAEiyB,OAAQ,cAAejyB,UAAW,KACpC,CAAEiyB,OAAQ,qBAAsBjyB,UAAW,IAC3C,CAAEiyB,OAAQ,YAAajyB,UAAW,IAClC,CAAEiyB,OAAQ,eAAgBjyB,UAAW,IACrC,CAAEiyB,OAAQ,UAAWjyB,UAAW,IAChC,CAAEiyB,OAAQ,QAASjyB,UAAW,IAC9B,CAAEiyB,OAAQ,sBAAuBjyB,UAAW,IAC5C,CAAEiyB,OAAQ,kCAAmCjyB,UAAW,KACxD,CAAEiyB,OAAQ,kBAAmBjyB,UAAW,KACxC,CAAEiyB,OAAQ,cAAejyB,UAAW,IACpC,CACIiyB,OAAQ,8CACRjyB,UAAW,IAEf,CAAEiyB,OAAQ,uBAAwBjyB,UAAW,IAC7C,CACIiyB,OAAQ,+CACRjyB,UAAW,IAEf,CAAEiyB,OAAQ,4BAA6BjyB,UAAW,KAClD,CACIiyB,OAAQ,gDACRjyB,UAAW,KAEf,CAAEiyB,OAAQ,4BAA6BjyB,UAAW,KAClD,CACIiyB,OAAQ,8CACRjyB,UAAW,IAEf,CAAEiyB,OAAQ,uBAAwBjyB,UAAW,KAC7C,CAAEiyB,OAAQ,cAAejyB,UAAW,IACpC,CAAEiyB,OAAQ,sCAAuCjyB,UAAW,IAC5D,CAAEiyB,OAAQ,cAAejyB,UAAW,KACpC,CACIiyB,OACI,+FACJjyB,UAAW,IAEf,CACIiyB,OACI,8DACJjyB,UAAW,IAEf,CAAEiyB,OAAQ,wBAAyBjyB,UAAW,KAC9C,CACIiyB,OACI,oFACJjyB,UAAW,KAGnBkyB,MAAO,KACPC,aAAc,KAGLC,GAAa,CACtBF,MAAO,IACPG,eAAgB,KAChBC,SAAU,MACVC,kBAAmB,ICxCRC,WA1BI5U,IAAMwB,KAAK,SAACxE,GAC3B,IAOqBQ,EAPfiK,EAAQ,CACVoN,QAAS7X,EAAM8X,KAAO,EAAI,EAC1B1H,WAAU,WAAAnC,OAAauJ,GAAWC,eAAxB,MACVM,gBAAe,GAAA9J,OAAKuJ,GAAWF,MAAhB,MACfU,yBAA0B,QAc9B,OACI9Y,EAAAhO,EAAA/E,cAAA,OAAK8T,UAAU,aAAawK,OAZXjK,EAY8BR,EAAMQ,KAXjDA,EAAKrY,OAASqvB,GAAWG,kBAKlB,CAAED,SAHJlZ,SAASgZ,GAAWE,SAAU,IAC3BF,GAAWG,kBACfnX,EAAKrY,OAC2B,MAEjC,CAAEuvB,SAAUF,GAAWE,YAK1BxY,EAAAhO,EAAA/E,cAAA,QAAMse,MAAOA,GAAQzK,EAAMQ,UCgC1ByX,GAAb,SAAAzV,GASI,SAAAyV,EAAYjY,GAA6B,IAAAyC,EAAA,OAAAjb,OAAAkb,EAAA,EAAAlb,CAAAsR,KAAAmf,IACrCxV,EAAAjb,OAAAmb,EAAA,EAAAnb,CAAAsR,KAAAtR,OAAAob,EAAA,EAAApb,CAAAywB,GAAApV,KAAA/J,KAAMkH,KANFkY,sBAKiC,EAAAzV,EAJjC0V,kBAIiC,EAAA1V,EAHjC2V,iBAGiC,EAAA3V,EAFjC4V,kBAEiC,EAGrC5V,EAAK7Q,MAAQ,CACT0mB,UAAU,EACV9X,KAAM,GACNuU,YAAY,EACZwD,oBAAqBt0B,EAAWE,QAChCqE,gBAAiB5E,EAAeC,KAChC20B,gBAAgB,GAGpB/V,EAAKyV,iBAAmB,EACxBzV,EAAK0V,aAAe,EACpB1V,EAAK2V,YAAc,EACnB3V,EAAK4V,cAAe,EAEpB5V,EAAKgW,WAAahW,EAAKgW,WAAWtV,KAAhB3b,OAAA4b,EAAA,EAAA5b,CAAAib,IAClBA,EAAKiW,MAAQjW,EAAKiW,MAAMvV,KAAX3b,OAAA4b,EAAA,EAAA5b,CAAAib,IAlBwBA,EAT7C,OAAAjb,OAAA6b,EAAA,EAAA7b,CAAAywB,EAAAzV,GAAAhb,OAAA8b,EAAA,EAAA9b,CAAAywB,EAAA,EAAA1U,IAAA,oBAAAzB,MAAA,WA+BQhJ,KAAKof,iBAAmBpf,KAAKkH,MAAMkU,YAAY3Y,YAC3CzC,KAAK2f,WACL,IAAO3f,KAAKkH,MAAM7N,OAjC9B,CAAAoR,IAAA,wBAAAzB,MAAA,SAsCQ2B,EACA0I,GAEA,OACIrT,KAAKkH,MAAMpY,SAAW6b,EAAU7b,QAChCkR,KAAKkH,MAAMrY,QAAU8b,EAAU9b,OAC/BmR,KAAKlH,MAAMmjB,aAAe5I,EAAU4I,aAClCjc,KAAKkH,MAAM6U,kBACR/b,KAAKkH,MAAMpW,SAAW6Z,EAAU7Z,QAC7BkP,KAAKkH,MAAMlQ,YAAc2T,EAAU3T,aA/CvD,CAAAyT,IAAA,4BAAAzB,MAAA,SAmD8B2B,GAClBA,EAAUoR,iBAAmB/b,KAAKsf,cAClCtf,KAAKkH,MAAMkU,YAAY+B,aAAand,KAAKsf,aACzCtf,KAAKsf,YAAc,KAtD/B,CAAA7U,IAAA,aAAAzB,MAAA,WA2DQhJ,KAAK6f,iBACL7f,KAAK8f,wBA5Db,CAAArV,IAAA,uBAAAzB,MAAA,WAgEQhJ,KAAKkH,MAAMkU,YAAY9Y,cAActC,KAAKof,oBAhElD,CAAA3U,IAAA,sBAAAzB,MAAA,WAoEQ,GAAIhJ,KAAKkH,MAAMlJ,MAAO,CAClB,IAAM+hB,EPhIX,SAAsB/hB,GACzB,IAAKA,EACD,OAAO,EAMX,IAHA,IAAM3D,EAAO2D,EAAM3D,KAEf2lB,EAAW,EACNzvB,EAAI,EAAGA,EAAI8J,EAAKhL,OAAQkB,GAAK,EAClCyvB,GAAY3lB,EAAK9J,GAAK8J,EAAK9J,EAAI,GAAK8J,EAAK9J,EAAI,GAGjD,IAAMwvB,EAAatvB,KAAKmU,MAAMob,GAAYhiB,EAAMnP,MAAQmP,EAAMlP,OAAS,IACvE,OAAO2B,KAAKtB,IAAI4wB,EAAY9zB,EAAYC,eOmHb+zB,CAAajgB,KAAKkH,MAAMlJ,OAErCyhB,EAAsBzwB,EACxB/C,EAAYC,cAAgB6zB,EAC5B9zB,EAAYC,cACZ,EACAD,EAAYE,kBAAoBF,EAAYG,eAC5CH,EAAYG,gBAEVsD,EACFqwB,GAAc9zB,EAAYC,cACpBpB,EAAeE,OACfF,EAAeC,KACzBiV,KAAKkT,SAAS,CAAEuM,sBAAqB/vB,uBAlFjD,CAAA+a,IAAA,iBAAAzB,MAAA,WAuFyBhJ,KAAKlH,MAAMpJ,kBAAoB5E,EAAeG,QAC/CwF,KAAKQ,SAAW,IAC5B+O,KAAKkT,SAAS,CAAExjB,gBAAiB5E,EAAeC,OAGhDiV,KAAKkH,MAAMlQ,WACXgJ,KAAKkgB,eACLlgB,KAAKmgB,mBAELngB,KAAKogB,cAEApgB,KAAKkH,MAAM6U,iBAAoB/b,KAAKlH,MAAMmjB,YACvCxrB,KAAKQ,SjD5De,KiD6DpB+O,KAAKuf,cAAgBvf,KAAKuf,aAC1Bvf,KAAKkH,MAAMmU,gB/CtDxB,SAAyBgF,GAC5B,IAAMC,EAAYtxB,EACdyB,KAAKQ,SACL,EACA,EACA,EAAIrF,EAAmBI,WACvB,GAEEoC,EAAIiyB,GAAUC,EAAYA,EAChC,MAAO,CACH,CACIxvB,OAAQ,CAAE1C,IAAGC,EAAG,GAChBsB,SAAU,KAEd,CACImB,OAAQ,CAAE1C,IAAGC,EAAG,GAChBsB,SAAUX,EAAUyB,KAAKQ,SAAU,EAAG,EAAG,IAAM,IAEnD,CACIH,OAAQ,CAAE1C,EAAG,EAAGC,EAAG,GACnBsB,SAAU,M+CmCE4wB,CAAgBvgB,KAAKuf,mBAtG7C,CAAA9U,IAAA,eAAAzB,MAAA,WA8GQhJ,KAAKwgB,OACLxgB,KAAKkH,MAAMkU,YAAY+B,aAAand,KAAKqf,cACpCrf,KAAKlH,MAAM4mB,gBACZ1f,KAAKkT,SAAS,CACVwM,gBAAgB,EAChBD,oBAAqBt0B,EAAWC,YAnHhD,CAAAqf,IAAA,cAAAzB,MAAA,WAyHYhJ,KAAKlH,MAAM4mB,iBACX1f,KAAKkT,SAAS,CACVwM,gBAAgB,EAChBhwB,gBAAiB5E,EAAeG,SAEpC+U,KAAKqf,aAAerf,KAAKkH,MAAMkU,YAAY/X,WACvCrD,KAAK4f,MACLl0B,IAGRsU,KAAKkH,MAAMkU,YAAY+B,aAAand,KAAKsf,aACzCtf,KAAKsf,YAAc,IApI3B,CAAA7U,IAAA,QAAAzB,MAAA,WAwIQhJ,KAAKkT,SAAS,CAAE+I,YAAY,MAxIpC,CAAAxR,IAAA,OAAAzB,MAAA,WA4IQhJ,KAAKkT,SAAS,CAAE+I,YAAY,MA5IpC,CAAAxR,IAAA,iBAAAzB,MAAA,WA+IqB,IAAAiK,EAAAjT,KACTA,KAAKsf,YAAc,IAIvBtf,KAAKsf,YAActf,KAAKkH,MAAMkU,YAAY/X,WAAW,WAQjD,IAPA,IAAMod,EAAiBpC,GAAgBC,MAClClsB,IAAI,SAAAsV,GAAI,OAAIA,EAAKpb,YACjBqN,OAAO,SAACvL,EAAGC,GAAJ,OAAUD,EAAIC,IAEtB4C,EAASR,KAAKQ,SAAWwvB,EACzBlwB,EAAI,EAEDU,GAAU,GAAKV,EAAI8tB,GAAgBC,MAAMjvB,OAAS,GACrD4B,GAAUotB,GAAgBC,MAAM/tB,GAAGjE,UACnCiE,IAGJ,IAAMguB,EAASF,GAAgBC,MAAM/tB,EAAI,GAAGguB,OAE5CtL,EAAKC,SAAS,CACVsM,UAAU,EACV9X,KAAM6W,IAGVtL,EAAK/L,MAAMkU,YAAY/X,WAAW,WAC9B4P,EAAKC,SAAS,CAAEsM,UAAU,IAC1BvM,EAAKqM,YAAc,GACpBjB,GAAgBI,eACpBJ,GAAgBG,UA5K3B,CAAA/T,IAAA,SAAAzB,MAAA,WAgLQ,OACI5C,EAAAhO,EAAA/E,cAAA,OAAK8T,UAAU,mBACXf,EAAAhO,EAAA/E,cAAC+qB,GAAD1vB,OAAAglB,OAAA,CACIvjB,SAAU6P,KAAKlH,MAAM2mB,oBACrBtD,SAAUnc,KAAKlH,MAAM4mB,eACrBhwB,gBAAiBsQ,KAAKlH,MAAMpJ,gBAC5BusB,WAAYjc,KAAKlH,MAAMmjB,YACnBjc,KAAKkH,QAEbd,EAAAhO,EAAA/E,cAACqtB,GAAD,CAAYhZ,KAAM1H,KAAKlH,MAAM4O,KAAMsX,KAAMhf,KAAKlH,MAAM0mB,gBAzLpEL,EAAA,CAAqCjV,IAAMzC,WA6M5B+D,eAdS,SAAC1S,GAAD,MAAwB,CAC5CO,IAAKD,GAAON,GACZ9B,UAAWmH,GAAcrF,GACzBhI,OAAQkO,GAAWlG,GACnBkF,MAAOvK,GAAaqF,GACpB9H,UAAWqO,GAAcvG,GACzBijB,gBAAiBzc,GAAmBxG,KAGb,SAAC8I,GAAD,MAAyC,CAChEyZ,gBAAiB,SAACrqB,GAAD,OACb4Q,EAASuB,GAAanS,OAGfwa,CAGb2T,IC1Qa,SAASwB,KACpB,OACIva,EAAAhO,EAAA/E,cAAC6Y,GAAA,EAAD,CACIC,MAAM,EACNC,OAAO,EACPC,sBAAsB,EACtBC,eAAe,GAEd,SAAAmF,GAAK,OACFrL,EAAAhO,EAAA/E,cAACgT,EAAA,SAAD,KACID,EAAAhO,EAAA/E,cAAA,4BADJ,kSAQI+S,EAAAhO,EAAA/E,cAAA,WACA+S,EAAAhO,EAAA/E,cAACmZ,EAAA,EAAD,CACIC,QAAQ,YACRtF,UAAU,SACV7I,MAAM,UACNoO,QAAS+E,GAJb,YCWpB,IAMejG,eANS,SAAC1S,GAAD,O5C9BjB,SAA4BA,GAC/B,OAAOA,EAAM8E,WAAW1K,M4C6BmB0tB,CAAmB9nB,IAEvC,SAAC8I,GAAD,MAAyB,CAChDif,SAAU,SAACphB,GAAD,OAA+BmC,EAASV,GAAezB,OAGtD+L,CAzBR,SAAetE,GAQlB,OACId,EAAAhO,EAAA/E,cAAA,SACI8T,UAAW,SACX2Z,UAAU,EACVhyB,OAAQoY,EAAMpY,OACdD,MAAOqY,EAAMrY,MACbsc,IAAK,SAAA9T,GAAO,OAbpB,SAAkBA,GACVA,GAAW6P,EAAM/G,SACjB9I,EAAQ0pB,UAAY7Z,EAAM/G,OAC1B+G,EAAM2Z,SAASxpB,IAUCsG,CAAStG,QCHxB2pB,GAAe9W,IAAMwB,KAAK,SAACxE,GAA6B,IAAA+Z,EAAAvyB,OAAA6H,GAAA,EAAA7H,CAAA,GAClBwY,GAAvChH,EADyD+gB,EACzD/gB,aAAcN,EAD2CqhB,EAC3CrhB,gBAatB,OAXAoM,oBAAU,WACF9L,IACAN,EAAgBM,GAChBA,EAAaghB,eAAiB,WACtBhhB,GACAN,EAAgBM,MAI7B,CAACA,EAAcN,IAGdwG,EAAAhO,EAAA/E,cAAA,OAAK8T,UAAU,eAAeD,EAAMnJ,iBAAmBqI,EAAAhO,EAAA/E,cAAC8tB,GAAD,SAiBhD3V,eAbS,SAAC1S,GACrB,MAAO,CACHiF,gBAAiBD,GAAmBhF,KAIjB,SACvB8I,GADuB,MAEO,CAC9BhC,gBAAiB,SAACM,GAAD,OACb0B,ExCzCD,SAAmB1B,GACtB,sBAAAuB,EAAA/S,OAAAgT,EAAA,EAAAhT,CAAA2R,EAAAjI,EAAAuJ,KAAO,SAAA1B,EACH2B,EACAC,GAFG,IAAA1B,EAAApC,EAAA,OAAAsC,EAAAjI,EAAAkI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAIkBb,GAAgBM,GAJlC,OAIGC,EAJHI,EAAAI,KAKG5C,EAAkB8D,IAAWjE,WAAWG,gBAC1CoC,GACAyB,EAAST,GAAqBhB,IACzBpC,GACD6D,EAASR,OAGTrD,GACA6D,EAASR,MAbd,wBAAAb,EAAAS,SAAAf,MAAP,gBAAAJ,EAAAuC,GAAA,OAAAX,EAAA1B,MAAAC,KAAA5Q,YAAA,GwCwCagyB,CAAUlhB,OAGZsL,CAGbwV,yBCtBWK,GAAb,SAAA3X,GACI,SAAA2X,EAAYna,GAAiB,IAAAyC,EAAA,OAAAjb,OAAAkb,EAAA,EAAAlb,CAAAsR,KAAAqhB,IACzB1X,EAAAjb,OAAAmb,EAAA,EAAAnb,CAAAsR,KAAAtR,OAAAob,EAAA,EAAApb,CAAA2yB,GAAAtX,KAAA/J,KAAMkH,KAEDpO,MAAQ,CACTjK,MAAO8a,EAAKzC,MAAMkU,YAAYkG,WAC9BxyB,OAAQ6a,EAAKzC,MAAMkU,YAAYmG,aAGnC5X,EAAK6X,iBAAmB7X,EAAK6X,iBAAiBnX,KAAtB3b,OAAA4b,EAAA,EAAA5b,CAAAib,IACxBA,EAAK8X,eAAiB9X,EAAK8X,eAAepX,KAApB3b,OAAA4b,EAAA,EAAA5b,CAAAib,IATGA,EADjC,OAAAjb,OAAA6b,EAAA,EAAA7b,CAAA2yB,EAAA3X,GAAAhb,OAAA8b,EAAA,EAAA9b,CAAA2yB,EAAA,EAAA5W,IAAA,oBAAAzB,MAAA,eAAA0Y,EAAAhzB,OAAAgT,EAAA,EAAAhT,CAAA2R,EAAAjI,EAAAuJ,KAAA,SAAA1B,IAAA,OAAAI,EAAAjI,EAAAkI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAcQT,KAAKkH,MAAMkU,YAAYpI,iBACnB,SACAhT,KAAKwhB,kBAhBjB,wBAAAjhB,EAAAS,SAAAf,EAAAD,SAAA,yBAAA0hB,EAAA3hB,MAAAC,KAAA5Q,YAAA,KAAAqb,IAAA,qBAAAzB,MAAA,WAqBYhJ,KAAKkH,MAAMnJ,kBAAoBiC,KAAKkH,MAAMnF,OAC1C/B,KAAKkH,MAAM3F,cAtBvB,CAAAkJ,IAAA,uBAAAzB,MAAA,WA2BQhJ,KAAKkH,MAAMkU,YAAY7H,oBACnB,SACAvT,KAAKwhB,oBA7BjB,CAAA/W,IAAA,wBAAAzB,MAAA,SAiC0B2B,EAAqB0I,GACvC,OACIrT,KAAKkH,MAAMnJ,kBAAoB4M,EAAU5M,iBACzCiC,KAAKkH,MAAMnF,QAAU4I,EAAU5I,OAC/B/B,KAAKlH,MAAMhK,SAAWukB,EAAUvkB,QAChCkR,KAAKlH,MAAMjK,QAAUwkB,EAAUxkB,QAtC3C,CAAA4b,IAAA,mBAAAzB,MAAA,WA2CQhJ,KAAKkT,SAAS,CACVpkB,OAAQkR,KAAKkH,MAAMkU,YAAYmG,YAC/B1yB,MAAOmR,KAAKkH,MAAMkU,YAAYkG,eA7C1C,CAAA7W,IAAA,SAAAzB,MAAA,WAkDQ,OACI5C,EAAAhO,EAAA/E,cAAA,OAAK8T,UAAU,OACXf,EAAAhO,EAAA/E,cAACsuB,GAAiB3hB,KAAKkH,QAErBlH,KAAKkH,MAAMnJ,iBACTqI,EAAAhO,EAAA/E,cAAA+S,EAAAhO,EAAA6T,SAAA,KACI7F,EAAAhO,EAAA/E,cAACstB,GAAD,MACAva,EAAAhO,EAAA/E,cAACwqB,GAADnvB,OAAAglB,OAAA,GACQ1T,KAAKlH,MACLkH,KAAKkH,SAKpBlH,KAAKkH,MAAMnJ,kBAAoBiC,KAAKkH,MAAMnF,OACvCqE,EAAAhO,EAAA/E,cAAA,OAAK8T,UAAU,WACXf,EAAAhO,EAAA/E,cAAA,OAAK8T,UAAU,WACXf,EAAAhO,EAAA/E,cAAA,OAAKuuB,IAAKC,KAAUC,IAAI,SAE5B1b,EAAAhO,EAAA/E,cAAA,OAAK8T,UAAU,WACXf,EAAAhO,EAAA/E,cAAA,OAAKuuB,IAAKC,KAAUC,IAAI,SAE5B1b,EAAAhO,EAAA/E,cAAA,OAAK8T,UAAU,WACXf,EAAAhO,EAAA/E,cAAA,OAAKuuB,IAAKC,KAAUC,IAAI,UAKnC9hB,KAAKkH,MAAMnJ,iBAAmBiC,KAAKkH,MAAMnF,OACtCqE,EAAAhO,EAAA/E,cAAA+S,EAAAhO,EAAA6T,SAAA,KACI7F,EAAAhO,EAAA/E,cAAC0uB,GAAD,CAAWvgB,OAAQxB,KAAKkH,MAAMkU,cAC9BhV,EAAAhO,EAAA/E,cAAC2uB,GAADtzB,OAAAglB,OAAA,GAAqB1T,KAAKlH,MAAWkH,KAAKkH,QAC1Cd,EAAAhO,EAAA/E,cAAC4uB,GAAD,CAAYzgB,OAAQxB,KAAKkH,MAAMkU,YAAY5Z,aAlFnE,CAAAiJ,IAAA,iBAAAzB,MAAA,WAyFQhJ,KAAKkH,MAAMkU,YAAY8G,aAAaC,QAAQ,gBAAiB,YAzFrEd,EAAA,CAAyBnX,IAAMzC,WAyGhB+D,eAZS,SAAC1S,GAAD,MAA6C,CACjEiJ,MAAOjJ,EAAMoF,eAAe6D,MAC5BhE,gBAAiBD,GAAmBhF,KAGb,SACvB8I,EACAmS,GAFuB,MAGrB,CACFxS,UAAW,kBAAMK,EAASL,GAAUwS,EAASqH,iBAGlC5P,CAGb6V,WCtIkBe,QACa,cAA7B5gB,OAAO6gB,SAASC,UAEiB,UAA7B9gB,OAAO6gB,SAASC,UAEhB9gB,OAAO6gB,SAASC,SAASC,MACrB,+FCCCC,GAAgC,CACzCzgB,MAAO,KACP5P,WAAY,GACZswB,oBAAqB33B,EAAeC,KACpCwX,kBAAmB,EACnBvR,UAAW,GACXkS,mBAAmB,EACnBS,uBAAwB,EACxBtF,QAAS,IAGPqkB,IAAsBC,GAAA,GAAAj0B,OAAAoB,EAAA,EAAApB,CAAAi0B,G1CzBH,Y0C4CzB,SACI7pB,EACA8b,GAEA,OAAOlmB,OAAA6H,GAAA,EAAA7H,CAAA,GAAKoK,EAAZ,CAAmBiJ,MAAQ6S,EAA2BnV,YAvB9B/Q,OAAAoB,EAAA,EAAApB,CAAAi0B,GAEvBrhB,GAwBL,SACIxI,EACA8b,GAEA,OAAOlmB,OAAA6H,GAAA,EAAA7H,CAAA,GACAoK,EADP,CAEIyJ,kBAAoBqS,EAA8BnV,YAhC9B/Q,OAAAoB,EAAA,EAAApB,CAAAi0B,G1CvBE,iB0C2D9B,SACI7pB,EACA8b,GAEA,IAAMnV,EAAWmV,EAAgCnV,QAC3CmjB,EAAUl0B,OAAAuuB,GAAA,EAAAvuB,CAAOoK,EAAMuF,SACzBvF,EAAMuF,QAAQhP,QAAU7B,EAAgBG,QACxCi1B,EAAW1F,QAOf,OALA0F,EAAW/xB,KAAK,CACZC,OAAQ2O,EAAQoE,eAChBvF,MAAOmB,EAAQqE,gBAGZpV,OAAA6H,GAAA,EAAA7H,CAAA,GACAoK,EADP,CAEI3G,WAAYsN,EAAQtN,WACpBkM,QAASukB,MArDWl0B,OAAAoB,EAAA,EAAApB,CAAAi0B,G1CtBJ,W0C4FxB,SACI7pB,EACA8b,GAEA,OAAOlmB,OAAA6H,GAAA,EAAA7H,CAAA,GACAoK,EADP,CAEI2pB,oBAAsB7N,EAA0BnV,YA5E5B/Q,OAAAoB,EAAA,EAAApB,CAAAi0B,G1CrBC,gB0CqG7B,SACI7pB,EACA8b,GAEA,OAAOlmB,OAAA6H,GAAA,EAAA7H,CAAA,GAAKoK,EAAZ,CAAmB9H,UAAY4jB,EAA+BnV,YApFtC/Q,OAAAoB,EAAA,EAAApB,CAAAi0B,G1CpBE,iB0C6E9B,SACI7pB,EACA8b,GAEA,IAAMnV,EAAWmV,EAAgCnV,QACjD,OAAO/Q,OAAA6H,GAAA,EAAA7H,CAAA,GACAoK,EADP,CAEIuF,QAASmkB,GAAankB,QACtBlM,WAAYsN,EAAQzI,UAAY,CAACyI,EAAQzI,WAAa,GACtD2M,sBAAuBlE,EAAQkE,0BAlEXjV,OAAAoB,EAAA,EAAApB,CAAAi0B,G1ClBa,4B0CyGzC,SACI7pB,EACAoX,GAEA,OAAOxhB,OAAA6H,GAAA,EAAA7H,CAAA,GAAKoK,EAAZ,CAAmBoK,mBAAoBpK,EAAMoK,sBA3FrByf,IA8FbzkB,UApFQ,WAGD,IAFlBpF,EAEkB1J,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFOozB,GACzB5N,EACkBxlB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClB,OAAOozB,GAAuBvd,eAAeyP,EAAOlV,MAC9CgjB,GAAuB9N,EAAOlV,MAAM5G,EAAO8b,GAC3C9b,GCnCG0pB,GAA4B,CACrCzkB,iBAAiB,EACjB7K,MAAO,CAAErE,MAAO,EAAGC,OAAQ,EAAGqR,YAAQ7Q,GACtC0O,MAAO,CAAE3D,KALQ,IAAIyf,kBAAkB,GAKVjrB,MAAO,EAAGC,OAAQ,IAG7C+zB,IAAkBC,GAAA,GAAAp0B,OAAAoB,EAAA,EAAApB,CAAAo0B,GACnB7hB,GAAe8hB,WAepB,SAAsBjqB,EAAoB8b,GACtC,OAAOlmB,OAAA6H,GAAA,EAAA7H,CAAA,GAAKoK,EAAZ,CAAmBkF,MAAQ4W,EAA+BnV,YAjBtC/Q,OAAAoB,EAAA,EAAApB,CAAAo0B,GAEnB7hB,GAAe+hB,cAyBpB,SAAsBlqB,EAAoBoX,GACtC,OAAOxhB,OAAA6H,GAAA,EAAA7H,CAAA,GAAKoK,EAAZ,CAAmBiF,iBAAkBjF,EAAMiF,oBA5BvBrP,OAAAoB,EAAA,EAAApB,CAAAo0B,GAGnB7hB,GAAegiB,MA4BpB,SAAkBnqB,EAAoB8b,GAClC,OAAOlmB,OAAA6H,GAAA,EAAA7H,CAAA,GACAoK,EADP,CAEI5F,MAAMxE,OAAA6H,GAAA,EAAA7H,CAAA,GACCoK,EAAM5F,MADR,CAED2K,aAAe+W,EAA2BnV,cApC9B/Q,OAAAoB,EAAA,EAAApB,CAAAo0B,GAInB7hB,GAAeqF,aAgBpB,SAAwBxN,EAAoB8b,GACxC,OAAOlmB,OAAA6H,GAAA,EAAA7H,CAAA,GACAoK,EADP,CAEI5F,MAAMxE,OAAA6H,GAAA,EAAA7H,CAAA,GAAOkmB,EAAiCnV,aAvB9BqjB,IAyCTllB,OAlCI,WAGD,IAFd9E,EAEc1J,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFOozB,GACrB5N,EACcxlB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACd,OAAOuzB,GAAmB1d,eAAeyP,EAAOlV,MAC1CmjB,GAAmBjO,EAAOlV,MAAM5G,EAAO8b,GACvC9b,GCtBKoqB,gBAAgB,CAC3BtlB,cACA7E,eACAmF,oBCCEilB,GAAS,CAAC,eACVC,GAA2B,CAACC,KAAOC,gBAAK,CAAEH,aCLhD,IAAMI,GAAiB,WACnB,OAAO/hB,QAGLgiB,GDGC,WACH,IACIC,EADEC,EAAiCzhB,gBAAK,CAAEkhB,YAE9C,GAAIO,EAAWve,eAAe,eAAgB,CAC1C,IAAMwe,EAAqCD,EAExC3qB,YACH0qB,EAkBD,SAASG,EAAgBC,EAAiB/yB,GAC7C,GAAsB,kBAAXA,EACP,OAAO,EAEP,IAAMgzB,EAAgBp1B,OAAOq1B,oBAAoBjzB,GACjD,MAAsB,kBAAX+yB,EACAC,EAAcz0B,OAAS,EAEvBy0B,EAAcvY,MACjB,SAAAyY,GAAI,OACCH,EAAkB1e,eAAe6e,IAClCJ,EACKC,EAAuCG,GACvClzB,EAAuCkzB,MAhBrDJ,CAdCD,EAc2BnP,SAX/BiP,GAAoB,EAGxB,OAAOQ,aACHC,GACAT,EAAoBC,OAAap0B,EACjC60B,KAAepkB,WAAf,EAAmBqjB,KCpBbgB,GAEdC,IAASC,OACLle,EAAAhO,EAAA/E,cAACkxB,EAAA,EAAD,CAAUf,MAAOA,IACbpd,EAAAhO,EAAA/E,cAACmxB,GAAD,CACIpJ,YAAamI,KACbrjB,aAAcqjB,KAAiBkB,UAAUvkB,gBAGjD/M,SAASuxB,eAAe,SLqHpB,kBAAmBD,WACnBA,UAAUE,cAAcC,MAAMC,KAAK,SAAAC,GAC/BA,EAAaC","file":"static/js/main.91a1e55d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/eye.66158892.png\";","export enum EyeSide {\r\n    RIGHT = 'RIGHT',\r\n    LEFT = 'LEFT',\r\n}\r\nexport enum Pose {\r\n    LEFT_WAVE = 'LEFT_WAVE',\r\n    RIGHT_WAVE = 'RIGHT_WAVE',\r\n    HANDS_UP = 'HANDS_UP',\r\n    ARMS_OUT = 'ARMS_OUT',\r\n    DAB = 'DAB',\r\n    HANDS_HIPS = 'HANDS_HIPS',\r\n}\r\nexport const eyeRatio = {\r\n    sclera: 4.5,\r\n    iris: 10,\r\n    pupil: 24,\r\n};\r\n\r\nexport const eyelidPosition = {\r\n    OPEN: 0.45,\r\n    CLOSED: 0,\r\n    SQUINT: 0.2,\r\n    SHOCKED: 0.75,\r\n};\r\nexport const pupilSizes = {\r\n    dilated: 1.3,\r\n    neutral: 1.0, // base dilation\r\n    constricted: 0.8,\r\n};\r\nexport const transitionTimes = {\r\n    blink: 100,\r\n    peek: 1000,\r\n};\r\nexport const intervals = {\r\n    sleep: 18000, // eyes go to sleep after this much time without targets\r\n};\r\nexport const debugFeedColors = {\r\n    chosen: 'green', // chosen target drawn to debug feed in this colour\r\n    other: 'red', // other targets drawn in this colour\r\n};\r\nexport const eyeCoords = {\r\n    middleX: 0, // middle of unit coordinate grid used for eye position\r\n    middleY: 0,\r\n};\r\nexport const idleMovementConsts = {\r\n    moveCenterChance: 0.1,\r\n    moveSideChance: 0.5,\r\n    xDelta: 0.4, // move this distance between frames when scanning the room\r\n    sideBuffer: 0.2, // do not move the iris closer than this distance to the edge of the sclera\r\n};\r\nexport const lightConsts = {\r\n    maxBrightness: 220, // brightness dilation multiplier at max when average brightness reaches this value\r\n    dilationMultipler: 1.2, // max brightness dilation multiplier = offset + multiplier\r\n    dilationOffset: 0.7, // min brightness dilation multiplier\r\n};\r\nexport const blinkConsts = {\r\n    frequency: 0.25,\r\n    focusedFrequency: 0.0625,\r\n    peekFrequency: 0.0475, // frequency with which the eye peeks when eyes are closed\r\n    movementThreshold: 0.8, // eye blinks when, between frames, it mvoes this distance\r\n};\r\nexport const debugFeedConsts = {\r\n    canvasScale: 1,\r\n    lineWidth: 4,\r\n    minConfidence: 0.1,\r\n    pointRadius: 3,\r\n};\r\nexport const colorCheckConsts = {\r\n    yOffset: 10,\r\n    xOffset: 10,\r\n};\r\nexport const bodyParts = {\r\n    RIGHT_SHOULDER: 'rightShoulder',\r\n    LEFT_SHOULDER: 'leftShoulder',\r\n    RIGHT_HIP: 'rightHip',\r\n};\r\nexport const fisheyeConsts = {\r\n    intensity: 0.6,\r\n};\r\nexport const targetingConsts = {\r\n    minInterval: 4000,\r\n    maxInterval: 7000,\r\n    maxNum: 8,\r\n};\r\nexport const eyeCoefficients = {\r\n    sclera: 0.9,\r\n    iris: 0.4,\r\n    pupil: 0.16,\r\n};\r\nexport const configMenuConsts = {\r\n    visibleTimer: 1000,\r\n    width: '17.5em',\r\n    leftPos: 'calc(-17.5em - 10px)',\r\n};\r\n\r\nexport const numInnerEyeSectors = 100;\r\nexport const minPoseConfidence = 0.2;\r\nexport const minIrisScale = 0.8; // factor by which to squish iris when iris is all the way to edge of sclera\r\nexport const CIELabOffset = 128;\r\nexport const centerPoint = { x: 0, y: 0 };\r\nexport const eyeSensitivityScale = 0.7;\r\nexport const chanceOfIdleEyesMovement = 0.2;\r\nexport const animationCooldownTimeout = 5000;\r\n","import { Bbox, ICoords } from '../types';\r\n\r\nexport default function calculateTargetPos(bbox: Bbox): ICoords {\r\n    const [x, y, width, height] = bbox;\r\n    return { x: x + width / 2, y: y + height / 2 };\r\n}\r\n\r\nexport function calculateNormalisedPos(\r\n    bbox: Bbox,\r\n    width: number,\r\n    height: number,\r\n): ICoords {\r\n    const position = calculateTargetPos(bbox);\r\n    return {\r\n        x: normalise(position.x, width),\r\n        y: normalise(position.y, height),\r\n    };\r\n}\r\n\r\nexport function normalise(\r\n    val: number,\r\n    max: number,\r\n    min: number = 0,\r\n    newMax: number = 1,\r\n    newMin: number = -1,\r\n): number {\r\n    const normalised = (val - min) / (max - min);\r\n    return normalised * (newMax - newMin) + newMin;\r\n}\r\n","import {\r\n    eyelidPosition,\r\n    EyeSide,\r\n    idleMovementConsts,\r\n    Pose,\r\n    pupilSizes,\r\n    transitionTimes,\r\n} from '../../AppConstants';\r\nimport { normalise } from '../objectTracking/calculateFocus';\r\nimport { ICoords } from '../types';\r\n\r\nexport interface IAnimationFrame {\r\n    target?: ICoords;\r\n    openCoefficient?:\r\n        | number\r\n        | { [EyeSide.LEFT]: number; [EyeSide.RIGHT]: number };\r\n    dilation?: number;\r\n    irisColor?: string;\r\n    duration: number;\r\n}\r\n\r\nexport type Animation = IAnimationFrame[];\r\n\r\nexport const wink = {\r\n    openCoefficient: eyelidPosition.OPEN,\r\n    duration: 500,\r\n};\r\n\r\nexport const leftWink: () => Animation = () => [\r\n    {\r\n        openCoefficient: {\r\n            [EyeSide.LEFT]: eyelidPosition.CLOSED,\r\n            [EyeSide.RIGHT]: eyelidPosition.OPEN,\r\n        },\r\n        duration: 500,\r\n    },\r\n    wink,\r\n];\r\n\r\nexport const rightWink: () => Animation = () => [\r\n    {\r\n        openCoefficient: {\r\n            [EyeSide.RIGHT]: eyelidPosition.CLOSED,\r\n            [EyeSide.LEFT]: eyelidPosition.OPEN,\r\n        },\r\n        duration: 500,\r\n    },\r\n    wink,\r\n];\r\n\r\nconst constricted = {\r\n    dilation: pupilSizes.constricted,\r\n    openCoefficient: eyelidPosition.SHOCKED,\r\n    duration: 100,\r\n};\r\n\r\nconst dilated = {\r\n    dilation: pupilSizes.dilated,\r\n    openCoefficient: eyelidPosition.SQUINT,\r\n    duration: 100,\r\n};\r\n\r\nexport const shock: () => Animation = () => [\r\n    {\r\n        dilation: pupilSizes.dilated,\r\n        openCoefficient: eyelidPosition.SQUINT,\r\n        duration: 500,\r\n    },\r\n    constricted,\r\n    dilated,\r\n    constricted,\r\n    dilated,\r\n];\r\n\r\nexport function rollEyes(): Animation {\r\n    const path = [];\r\n\r\n    const radius = 0.3;\r\n    const totalPoints = 16;\r\n    for (let i = 0; i <= totalPoints; i++) {\r\n        const change = (Math.PI * 2) / totalPoints;\r\n        const theta = change * i;\r\n\r\n        const y = radius * Math.sin(theta);\r\n        const x = radius * Math.cos(theta);\r\n\r\n        path.push({ target: { x, y }, duration: 100 });\r\n    }\r\n\r\n    return path;\r\n}\r\n\r\nexport function dab(): Animation {\r\n    const animation = [];\r\n    for (let i = 0; i < 20; i++) {\r\n        animation.push({\r\n            target: {\r\n                x: normalise(Math.random(), 1),\r\n                y: normalise(Math.random(), 1),\r\n            },\r\n            irisColor: '#' + (((1 << 24) * Math.random()) | 0).toString(16),\r\n            duration: 150,\r\n            openCoefficient:\r\n                eyelidPosition.OPEN + (eyelidPosition.OPEN * i) / 20,\r\n        });\r\n    }\r\n    return animation;\r\n}\r\n\r\nexport function naturalMovement(isLeft: boolean): Animation {\r\n    const xDistance = normalise(\r\n        Math.random(),\r\n        1,\r\n        0,\r\n        1 - idleMovementConsts.sideBuffer,\r\n        0,\r\n    );\r\n    const x = isLeft ? -xDistance : xDistance;\r\n    return [\r\n        {\r\n            target: { x, y: 0 },\r\n            duration: 500,\r\n        },\r\n        {\r\n            target: { x, y: 0 },\r\n            duration: normalise(Math.random(), 1, 0, 2000, 0),\r\n        },\r\n        {\r\n            target: { x: 0, y: 0 },\r\n            duration: 500,\r\n        },\r\n    ];\r\n}\r\n\r\nexport function blink(): Animation {\r\n    return [\r\n        {\r\n            openCoefficient: eyelidPosition.CLOSED,\r\n            duration: transitionTimes.blink,\r\n        },\r\n        {\r\n            openCoefficient: eyelidPosition.OPEN,\r\n            duration: transitionTimes.blink,\r\n        },\r\n    ];\r\n}\r\n\r\nexport function peek(openLeft: boolean, openRight: boolean): Animation {\r\n    return [\r\n        {\r\n            openCoefficient: {\r\n                [EyeSide.RIGHT]: openRight\r\n                    ? eyelidPosition.OPEN\r\n                    : eyelidPosition.CLOSED,\r\n                [EyeSide.LEFT]: openLeft\r\n                    ? eyelidPosition.OPEN\r\n                    : eyelidPosition.CLOSED,\r\n            },\r\n            duration: transitionTimes.peek,\r\n        },\r\n        { duration: transitionTimes.peek },\r\n        {\r\n            openCoefficient: {\r\n                [EyeSide.RIGHT]: eyelidPosition.CLOSED,\r\n                [EyeSide.LEFT]: eyelidPosition.CLOSED,\r\n            },\r\n            duration: transitionTimes.peek,\r\n        },\r\n    ];\r\n}\r\n\r\nexport function leer(): Animation {\r\n    return [\r\n        {\r\n            openCoefficient: eyelidPosition.SQUINT,\r\n            target: { x: 0, y: 0 },\r\n            duration: 1000,\r\n        },\r\n        {\r\n            openCoefficient: eyelidPosition.SQUINT,\r\n            target: { x: 0, y: 0 },\r\n            duration: 2000,\r\n        },\r\n        {\r\n            openCoefficient: eyelidPosition.OPEN,\r\n            target: { x: 0, y: 0 },\r\n            duration: 500,\r\n        },\r\n    ];\r\n}\r\n\r\nexport const animationMapping: {\r\n    [key: string]: () => Animation;\r\n} = {\r\n    [Pose.LEFT_WAVE]: rightWink,\r\n    [Pose.RIGHT_WAVE]: leftWink,\r\n    [Pose.HANDS_UP]: rollEyes,\r\n    [Pose.ARMS_OUT]: shock,\r\n    [Pose.DAB]: dab,\r\n    [Pose.HANDS_HIPS]: leer,\r\n};\r\n\r\nexport const keyToPose: { [key: string]: () => Animation } = {\r\n    t: shock,\r\n    d: dab,\r\n    l: leftWink,\r\n    r: rightWink,\r\n    u: rollEyes,\r\n};\r\n","import {\r\n    getBoundingBox,\r\n    Keypoint,\r\n    partIds,\r\n    Pose,\r\n} from '@tensorflow-models/posenet';\r\nimport { IDetection } from '../models/objectDetection';\r\nimport { Bbox } from './types';\r\n\r\nexport function getBbox(detection?: IDetection): Bbox | undefined {\r\n    return detection ? detection.bbox : undefined;\r\n}\r\n\r\nexport function reshapeDetections(detections: Pose[]): IDetection[] {\r\n    return detections.map(detection => {\r\n        const keypoints = detection.keypoints;\r\n        const box = getBoundingBox([\r\n            keypoints[partIds.leftEye],\r\n            keypoints[partIds.rightEye],\r\n        ]);\r\n        return {\r\n            bbox: [\r\n                box.minX,\r\n                box.minY,\r\n                box.maxX - box.minX,\r\n                box.maxY - box.minY,\r\n            ],\r\n            info: detection,\r\n        };\r\n    });\r\n}\r\n\r\nexport function getImageDataFromVideo(\r\n    video: HTMLVideoElement | undefined,\r\n    document: Document,\r\n): ImageData | null {\r\n    if (video) {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.height = video.height;\r\n        canvas.width = video.width;\r\n        const canvasCtx = canvas.getContext('2d');\r\n        if (canvasCtx) {\r\n            canvasCtx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n            return canvasCtx.getImageData(0, 0, canvas.width, canvas.height);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function checkAngle(\r\n    point1: Keypoint,\r\n    point2: Keypoint,\r\n    point3: Keypoint,\r\n    inf: number,\r\n    sup: number,\r\n): boolean {\r\n    const angle = (180 * getAngle(point1, point2, point3)) / Math.PI;\r\n    return angle >= inf && angle <= sup;\r\n}\r\n\r\nfunction getAngle(\r\n    pointA: Keypoint,\r\n    pointB: Keypoint,\r\n    pointC: Keypoint,\r\n): number {\r\n    const sideC = Math.hypot(\r\n        pointA.position.x - pointB.position.x,\r\n        pointA.position.y - pointB.position.y,\r\n    );\r\n    const sideA = Math.hypot(\r\n        pointB.position.x - pointC.position.x,\r\n        pointB.position.y - pointC.position.y,\r\n    );\r\n    const sideB = Math.hypot(\r\n        pointC.position.x - pointA.position.x,\r\n        pointC.position.y - pointA.position.y,\r\n    );\r\n\r\n    return Math.acos(\r\n        (Math.pow(sideC, 2) + Math.pow(sideA, 2) - Math.pow(sideB, 2)) /\r\n            (2 * sideC * sideA),\r\n    );\r\n}\r\n","import { Keypoint, partIds } from '@tensorflow-models/posenet';\r\nimport { minPoseConfidence, Pose } from '../../AppConstants';\r\nimport { IDetection } from '../../models/objectDetection';\r\nimport { checkAngle } from '../utils';\r\n\r\ninterface IPoseKeypoints {\r\n    leftEye: Keypoint;\r\n    rightEye: Keypoint;\r\n    leftShoulder: Keypoint;\r\n    rightShoulder: Keypoint;\r\n    leftElbow: Keypoint;\r\n    rightElbow: Keypoint;\r\n    leftWrist: Keypoint;\r\n    rightWrist: Keypoint;\r\n    leftHip: Keypoint;\r\n    rightHip: Keypoint;\r\n}\r\n\r\nconst poseMapping: { [key: string]: (selection: IPoseKeypoints) => boolean } = {\r\n    [Pose.DAB]: dab,\r\n    [Pose.HANDS_UP]: handsUp,\r\n    [Pose.ARMS_OUT]: armsOutToSide,\r\n    [Pose.LEFT_WAVE]: leftWave,\r\n    [Pose.RIGHT_WAVE]: rightWave,\r\n    [Pose.HANDS_HIPS]: handsHips,\r\n};\r\n\r\nexport function getPose(selection: IDetection): string | undefined {\r\n    const poseKeypoints = getPoseKeypoints(selection);\r\n    return Object.keys(poseMapping).find(element => {\r\n        return poseMapping[element](poseKeypoints);\r\n    });\r\n}\r\n\r\nfunction getPoseKeypoints(selection: IDetection): IPoseKeypoints {\r\n    const keypoints = selection.info.keypoints;\r\n\r\n    return {\r\n        leftEye: keypoints[partIds.leftEye],\r\n        rightEye: keypoints[partIds.rightEye],\r\n        leftShoulder: keypoints[partIds.leftShoulder],\r\n        rightShoulder: keypoints[partIds.rightShoulder],\r\n        leftElbow: keypoints[partIds.leftElbow],\r\n        rightElbow: keypoints[partIds.rightElbow],\r\n        leftWrist: keypoints[partIds.leftWrist],\r\n        rightWrist: keypoints[partIds.rightWrist],\r\n        leftHip: keypoints[partIds.leftHip],\r\n        rightHip: keypoints[partIds.rightHip],\r\n    };\r\n}\r\n\r\nfunction rightWave(pose: IPoseKeypoints) {\r\n    const isArmOutToSide =\r\n        pose.rightElbow.position.x < pose.rightShoulder.position.x;\r\n\r\n    return (\r\n        isArmOutToSide &&\r\n        wave(pose.rightWrist, pose.rightElbow, pose.leftWrist, pose.leftElbow)\r\n    );\r\n}\r\n\r\nfunction leftWave(pose: IPoseKeypoints) {\r\n    const isArmOutToSide =\r\n        pose.leftElbow.position.x > pose.leftShoulder.position.x;\r\n\r\n    return (\r\n        isArmOutToSide &&\r\n        wave(pose.leftWrist, pose.leftElbow, pose.rightWrist, pose.rightElbow)\r\n    );\r\n}\r\n\r\nfunction wave(\r\n    wavingWrist: Keypoint,\r\n    wavingElbow: Keypoint,\r\n    stationaryWrist: Keypoint,\r\n    stationaryElbow: Keypoint,\r\n) {\r\n    const areValidWavingPoints = checkKeypoints(wavingWrist, wavingElbow);\r\n\r\n    const areValidStationaryPoints = checkKeypoints(\r\n        stationaryWrist,\r\n        stationaryElbow,\r\n    );\r\n\r\n    const pointingUpAngle =\r\n        (180 *\r\n            Math.atan2(\r\n                wavingElbow.position.y - wavingWrist.position.y,\r\n                wavingWrist.position.x - wavingElbow.position.x,\r\n            )) /\r\n        Math.PI;\r\n\r\n    const isValidAngle = pointingUpAngle > 60 && pointingUpAngle < 120;\r\n\r\n    const isWavingWristAboveElbow =\r\n        wavingWrist.position.y < wavingElbow.position.y;\r\n\r\n    const isStationaryWristBelowElbow =\r\n        stationaryWrist.position.y > stationaryElbow.position.y;\r\n\r\n    return (\r\n        isValidAngle &&\r\n        areValidWavingPoints &&\r\n        isWavingWristAboveElbow &&\r\n        (!areValidStationaryPoints || isStationaryWristBelowElbow)\r\n    );\r\n}\r\n\r\nfunction handsUp(pose: IPoseKeypoints) {\r\n    const areValidPoints = checkKeypoints(\r\n        pose.leftEye,\r\n        pose.leftWrist,\r\n        pose.leftElbow,\r\n        pose.leftShoulder,\r\n        pose.rightEye,\r\n        pose.rightWrist,\r\n        pose.rightElbow,\r\n        pose.rightShoulder,\r\n    );\r\n\r\n    const areArmsAboveEyes =\r\n        pose.rightWrist.position.y < pose.rightEye.position.y &&\r\n        pose.leftWrist.position.y < pose.leftEye.position.y;\r\n\r\n    const areArmsPointingUp =\r\n        armPointingUp(pose.leftWrist, pose.leftElbow, pose.leftShoulder) &&\r\n        armPointingUp(pose.rightWrist, pose.rightElbow, pose.rightShoulder);\r\n\r\n    return areValidPoints && areArmsAboveEyes && areArmsPointingUp;\r\n}\r\n\r\nfunction armsOutToSide(pose: IPoseKeypoints) {\r\n    if (\r\n        !checkKeypoints(\r\n            pose.leftElbow,\r\n            pose.leftShoulder,\r\n            pose.leftWrist,\r\n            pose.rightWrist,\r\n            pose.rightElbow,\r\n            pose.rightShoulder,\r\n        )\r\n    ) {\r\n        return false;\r\n    }\r\n\r\n    const isLeftArmOut =\r\n        pose.leftWrist.position.x > pose.leftElbow.position.x &&\r\n        pose.leftElbow.position.x > pose.leftShoulder.position.x;\r\n\r\n    const isLeftWristShoulderHeight = isWristAtShoulderHeight(\r\n        pose.leftWrist,\r\n        pose.leftShoulder,\r\n    );\r\n\r\n    const isValidLeftArmAngle = checkAngle(\r\n        pose.leftShoulder,\r\n        pose.leftElbow,\r\n        pose.leftWrist,\r\n        150,\r\n        180,\r\n    );\r\n\r\n    const isRightArmOut =\r\n        pose.rightWrist.position.x < pose.rightElbow.position.x &&\r\n        pose.rightElbow.position.x < pose.rightShoulder.position.x;\r\n\r\n    const isRightWristShoulderHeight = isWristAtShoulderHeight(\r\n        pose.rightWrist,\r\n        pose.rightShoulder,\r\n    );\r\n\r\n    const isValidRightArmAngle = checkAngle(\r\n        pose.rightShoulder,\r\n        pose.rightElbow,\r\n        pose.rightWrist,\r\n        150,\r\n        180,\r\n    );\r\n\r\n    return (\r\n        isLeftArmOut &&\r\n        isRightArmOut &&\r\n        isLeftWristShoulderHeight &&\r\n        isRightWristShoulderHeight &&\r\n        isValidLeftArmAngle &&\r\n        isValidRightArmAngle\r\n    );\r\n}\r\n\r\nfunction isWristAtShoulderHeight(wrist: Keypoint, shoulder: Keypoint): boolean {\r\n    return (\r\n        wrist.position.y < shoulder.position.y + 25 &&\r\n        wrist.position.y > shoulder.position.y - 25\r\n    );\r\n}\r\n\r\nfunction dab(pose: IPoseKeypoints) {\r\n    const isValidLeftDab = checkLeftDab(pose);\r\n    const isValidRightDab = checkRightDab(pose);\r\n\r\n    return isValidLeftDab || isValidRightDab;\r\n}\r\n\r\nfunction checkRightDab(pose: IPoseKeypoints): boolean {\r\n    if (\r\n        !checkKeypoints(\r\n            pose.leftWrist,\r\n            pose.rightEye,\r\n            pose.rightWrist,\r\n            pose.rightElbow,\r\n            pose.rightShoulder,\r\n        )\r\n    ) {\r\n        return false;\r\n    }\r\n\r\n    const isValidRightArmAngle = checkAngle(\r\n        pose.rightShoulder,\r\n        pose.rightElbow,\r\n        pose.rightWrist,\r\n        150,\r\n        180,\r\n    );\r\n\r\n    const isValidLeftArmAngle = checkAngle(\r\n        pose.leftShoulder,\r\n        pose.leftElbow,\r\n        pose.leftWrist,\r\n        30,\r\n        70,\r\n    );\r\n\r\n    const isArmPointingToTheSky =\r\n        pose.rightWrist.position.x < pose.rightElbow.position.x &&\r\n        pose.rightElbow.position.x < pose.rightShoulder.position.x &&\r\n        armPointingUp(pose.rightWrist, pose.rightElbow, pose.rightShoulder);\r\n\r\n    return isValidRightArmAngle && isValidLeftArmAngle && isArmPointingToTheSky;\r\n}\r\n\r\nfunction checkLeftDab(pose: IPoseKeypoints): boolean {\r\n    if (\r\n        !checkKeypoints(\r\n            pose.leftWrist,\r\n            pose.leftEye,\r\n            pose.rightWrist,\r\n            pose.leftShoulder,\r\n            pose.leftElbow,\r\n        )\r\n    ) {\r\n        return false;\r\n    }\r\n\r\n    const isValidLeftArmAngle = checkAngle(\r\n        pose.leftShoulder,\r\n        pose.leftElbow,\r\n        pose.leftWrist,\r\n        150,\r\n        180,\r\n    );\r\n\r\n    const isValidRightArmAngle = checkAngle(\r\n        pose.rightShoulder,\r\n        pose.rightElbow,\r\n        pose.rightWrist,\r\n        30,\r\n        70,\r\n    );\r\n\r\n    const isArmPointingToTheSky =\r\n        pose.leftWrist.position.x > pose.leftElbow.position.x &&\r\n        pose.leftElbow.position.x > pose.leftShoulder.position.x &&\r\n        armPointingUp(pose.leftWrist, pose.leftElbow, pose.leftShoulder);\r\n\r\n    return isValidLeftArmAngle && isValidRightArmAngle && isArmPointingToTheSky;\r\n}\r\n\r\nfunction armPointingUp(wrist: Keypoint, elbow: Keypoint, shoulder: Keypoint) {\r\n    return (\r\n        wrist.position.y < elbow.position.y &&\r\n        elbow.position.y < shoulder.position.y\r\n    );\r\n}\r\n\r\nfunction isBelow(a: Keypoint, b: Keypoint) {\r\n    return a.position.y > b.position.y;\r\n}\r\n\r\nfunction handsHips(pose: IPoseKeypoints) {\r\n    const {\r\n        leftWrist,\r\n        leftElbow,\r\n        leftShoulder,\r\n        leftHip,\r\n        rightWrist,\r\n        rightElbow,\r\n        rightShoulder,\r\n        rightHip,\r\n    } = { ...pose };\r\n\r\n    const isValidLeftElbowAngle = checkAngle(\r\n        leftWrist,\r\n        leftElbow,\r\n        leftShoulder,\r\n        60,\r\n        120,\r\n    );\r\n\r\n    const isValidLeftShoulderAngle = checkAngle(\r\n        leftElbow,\r\n        leftShoulder,\r\n        leftHip,\r\n        20,\r\n        70,\r\n    );\r\n\r\n    const isValidRightElbowAngle = checkAngle(\r\n        rightWrist,\r\n        rightElbow,\r\n        rightShoulder,\r\n        60,\r\n        120,\r\n    );\r\n\r\n    const isValidRightShoulderAngle = checkAngle(\r\n        rightElbow,\r\n        rightShoulder,\r\n        rightHip,\r\n        20,\r\n        70,\r\n    );\r\n\r\n    return (\r\n        isValidLeftElbowAngle &&\r\n        isValidLeftShoulderAngle &&\r\n        isValidRightElbowAngle &&\r\n        isValidRightShoulderAngle &&\r\n        isBelow(leftWrist, leftElbow) &&\r\n        isBelow(leftElbow, leftShoulder) &&\r\n        isBelow(rightWrist, rightElbow) &&\r\n        isBelow(rightElbow, rightShoulder)\r\n    );\r\n}\r\n\r\nfunction checkKeypoints(...points: Keypoint[]): boolean {\r\n    return !points.some(point => point.score < minPoseConfidence);\r\n}\r\n","import {\r\n    IAdvancedConfig,\r\n    IAppConfig,\r\n    IConfigState,\r\n} from '../actions/config/types';\r\nimport { IRootStore } from '../reducers/rootReducer';\r\n\r\nexport function getConfig(state: IRootStore): IConfigState {\r\n    return { ...state.configStore };\r\n}\r\n\r\nexport function getAppConfig(state: IRootStore): IAppConfig {\r\n    return state.configStore.appConfig;\r\n}\r\n\r\nexport function getAdvancedConfig(state: IRootStore): IAdvancedConfig {\r\n    return state.configStore.advancedConfig;\r\n}\r\n\r\nexport function getFPS(state: IRootStore): number {\r\n    return state.configStore.appConfig.fps;\r\n}\r\n\r\nexport function getShowHelp(state: IRootStore): boolean {\r\n    return state.configStore.appConfig.showHelp;\r\n}\r\n","import { Keypoint } from '@tensorflow-models/posenet';\r\nimport convert from 'color-convert';\r\nimport { bodyParts, colorCheckConsts } from '../../AppConstants';\r\nimport { Detections, IDetection } from '../../models/objectDetection';\r\nimport calculateTargetPos, {\r\n    calculateNormalisedPos,\r\n} from '../objectTracking/calculateFocus';\r\nimport { IColor, ICoords } from '../types';\r\n\r\nexport default function select(\r\n    detections: Detections,\r\n    compare: (x: IDetection, y: IDetection) => number,\r\n    filter?: (d: IDetection) => boolean,\r\n): IDetection | undefined {\r\n    const personBboxes: Detections = detections.filter(\r\n        detection => !filter || filter(detection),\r\n    );\r\n\r\n    const selectedDetection = personBboxes.reduce<IDetection | undefined>(\r\n        (best, current) =>\r\n            best === undefined || compare(current, best) > 0 ? current : best,\r\n        undefined,\r\n    );\r\n\r\n    return selectedDetection;\r\n}\r\n\r\nexport function calculateColorMatch(\r\n    keypoints: Keypoint[],\r\n    imageData?: ImageData,\r\n): IColor {\r\n    if (!imageData) {\r\n        return { r: 0, g: 0, b: 0 };\r\n    }\r\n\r\n    const xStart = getXStart(keypoints);\r\n    const yStart = getYStart(keypoints);\r\n    const xEnd = xStart + 10;\r\n    const yEnd = yStart + 10;\r\n\r\n    return getAvgColor(xStart, yStart, xEnd, yEnd, imageData);\r\n}\r\n\r\nexport function getAvgColor(\r\n    xStart: number,\r\n    yStart: number,\r\n    xEnd: number,\r\n    yEnd: number,\r\n    imageData: ImageData,\r\n): IColor {\r\n    let L = 0;\r\n    let a = 0;\r\n    let b = 0;\r\n\r\n    const data = imageData.data;\r\n    let counter = 0;\r\n    for (\r\n        let i = yStart * 4 * imageData.width;\r\n        i < yEnd * 4 * imageData.width;\r\n        i += imageData.width * 4\r\n    ) {\r\n        for (let j = xStart * 4; j < xEnd * 4; j += 4) {\r\n            const imgR = data[j + i];\r\n            const imgG = data[j + i + 1];\r\n            const imgB = data[j + i + 2];\r\n            const [pixelL, pixela, pixelb] = convert.rgb.lab([\r\n                imgR,\r\n                imgG,\r\n                imgB,\r\n            ]);\r\n            L += pixelL;\r\n            a += pixela;\r\n            b += pixelb;\r\n            counter++;\r\n        }\r\n    }\r\n\r\n    L = L / counter;\r\n    a = a / counter;\r\n    b = b / counter;\r\n\r\n    const [avgR, avgG, avgB] = convert.lab.rgb([L, a, b]);\r\n\r\n    return { r: avgR, g: avgG, b: avgB };\r\n}\r\n\r\nexport function getPredictedTarget(history: ICoords[]): ICoords {\r\n    const normalisedXCoords = history.map(target => target.x);\r\n    const normalisedYCoords = history.map(target => target.y);\r\n\r\n    const xPrediction = getWeightedPrediction(normalisedXCoords);\r\n    const yPrediction = getWeightedPrediction(normalisedYCoords);\r\n\r\n    return { x: xPrediction, y: yPrediction };\r\n}\r\n\r\nexport function getPredictedColor(history: IColor[]): IColor {\r\n    const rHistory = history.map(color => color.r);\r\n    const gHistory = history.map(color => color.g);\r\n    const bHistory = history.map(color => color.b);\r\n\r\n    const r = getWeightedAverage(rHistory);\r\n    const g = getWeightedAverage(gHistory);\r\n    const b = getWeightedAverage(bHistory);\r\n\r\n    return { r, g, b };\r\n}\r\n\r\nexport function leftOf(x: number) {\r\n    return (detection: IDetection) => {\r\n        return detection.bbox[0] < x;\r\n    };\r\n}\r\n\r\nexport function rightOf(x: number) {\r\n    return (detection: IDetection) => {\r\n        return detection.bbox[0] > x;\r\n    };\r\n}\r\n\r\nexport function largerThan(\r\n    detection1: IDetection,\r\n    detection2: IDetection,\r\n): number {\r\n    return (\r\n        detection1.bbox[2] * detection1.bbox[3] -\r\n        detection2.bbox[2] * detection2.bbox[3]\r\n    );\r\n}\r\n\r\nexport function closerToColor(\r\n    imageData: ImageData,\r\n    avgColor: IColor,\r\n    keypoints1: Keypoint[],\r\n    keypoints2: Keypoint[],\r\n): number {\r\n    const x1Start = getXStart(keypoints1);\r\n    const x2Start = getXStart(keypoints2);\r\n    const x1End = x1Start + colorCheckConsts.xOffset;\r\n    const x2End = x2Start + colorCheckConsts.xOffset;\r\n    const y1Start = getYStart(keypoints1);\r\n    const y2Start = getYStart(keypoints2);\r\n    const y1End = y1Start + colorCheckConsts.yOffset;\r\n    const y2End = y2Start + colorCheckConsts.yOffset;\r\n\r\n    const box1AvgColor = getAvgColor(x1Start, y1Start, x1End, y1End, imageData);\r\n    const box2AvgColor = getAvgColor(x2Start, y2Start, x2End, y2End, imageData);\r\n\r\n    const box1GreenDelta = Math.pow(box1AvgColor.g - avgColor.g, 2);\r\n    const box1BlueDelta = Math.pow(box1AvgColor.b - avgColor.b, 2);\r\n    const box1RedDelta = Math.pow(box1AvgColor.r - avgColor.r, 2);\r\n    const box2RedDelta = Math.pow(box2AvgColor.r - avgColor.r, 2);\r\n    const box2GreenDelta = Math.pow(box2AvgColor.g - avgColor.g, 2);\r\n    const box2BlueDelta = Math.pow(box2AvgColor.b - avgColor.b, 2);\r\n\r\n    const box1Variance = box1RedDelta + box1GreenDelta + box1BlueDelta;\r\n    const box2Variance = box2RedDelta + box2GreenDelta + box2BlueDelta;\r\n\r\n    return box2Variance - box1Variance;\r\n}\r\n\r\nexport function getXStart(keypoints: Keypoint[]) {\r\n    const rightShoulder = keypoints.find(\r\n        keypoint => keypoint.part === bodyParts.RIGHT_SHOULDER,\r\n    );\r\n    const leftShoulder = keypoints.find(\r\n        keypoint => keypoint.part === bodyParts.LEFT_SHOULDER,\r\n    );\r\n    return leftShoulder && rightShoulder\r\n        ? Math.abs(\r\n              Math.round(\r\n                  (leftShoulder.position.x + rightShoulder.position.x) / 2,\r\n              ) - 5,\r\n          )\r\n        : 0;\r\n}\r\n\r\nexport function getYStart(keypoints: Keypoint[]) {\r\n    const rightShoulder = keypoints.find(\r\n        keypoint => keypoint.part === bodyParts.RIGHT_SHOULDER,\r\n    );\r\n    return rightShoulder\r\n        ? Math.round(rightShoulder.position.y) + colorCheckConsts.yOffset\r\n        : 0;\r\n}\r\n\r\nexport function closerToPrediction(\r\n    prediction: ICoords,\r\n    imageData: ImageData,\r\n    avgColor: IColor,\r\n): (detection1: IDetection, detection2: IDetection) => number {\r\n    return function closerToCoords(\r\n        detection1: IDetection,\r\n        detection2: IDetection,\r\n    ) {\r\n        const normalisedCoords1 = calculateNormalisedPos(\r\n            detection1.bbox,\r\n            imageData.width,\r\n            imageData.height,\r\n        );\r\n        const normalisedCoords2 = calculateNormalisedPos(\r\n            detection2.bbox,\r\n            imageData.width,\r\n            imageData.height,\r\n        );\r\n\r\n        const person2DistanceFromPrediction = Math.hypot(\r\n            normalisedCoords2.x - prediction.x,\r\n            normalisedCoords2.y - prediction.y,\r\n        );\r\n        const person1DistanceFromPrediction = Math.hypot(\r\n            normalisedCoords1.x - prediction.x,\r\n            normalisedCoords1.y - prediction.y,\r\n        );\r\n\r\n        const closerToPredictedTarget =\r\n            person2DistanceFromPrediction - person1DistanceFromPrediction;\r\n\r\n        return person1DistanceFromPrediction > 0.2 ||\r\n            person2DistanceFromPrediction > 0.2\r\n            ? closerToPredictedTarget\r\n            : closerToColor(\r\n                  imageData,\r\n                  avgColor,\r\n                  detection1.info.keypoints,\r\n                  detection2.info.keypoints,\r\n              );\r\n    };\r\n}\r\n\r\nfunction getWeightedPrediction(nums: number[]): number {\r\n    if (nums.length === 1) {\r\n        return nums[0];\r\n    }\r\n    const weightedNums = [];\r\n    let decayTotal = 0;\r\n    const diffNums = [];\r\n\r\n    for (let i = 0; i < nums.length - 1; i++) {\r\n        diffNums.push(nums[i + 1] - nums[i]);\r\n    }\r\n\r\n    for (let i = diffNums.length - 1; i >= 0; i--) {\r\n        const decay = Math.pow(0.5, diffNums.length - i);\r\n        weightedNums.push(diffNums[i] * decay);\r\n        decayTotal += decay;\r\n    }\r\n\r\n    const weightedTotal = weightedNums.reduce((a, b) => a + b, 0) / decayTotal;\r\n    return weightedTotal + nums[nums.length - 1];\r\n}\r\n\r\nfunction getWeightedAverage(nums: number[]): number {\r\n    nums = nums.reverse();\r\n    const weightedNums = [];\r\n    let decayTotal = 0;\r\n\r\n    for (let i = 0; i < nums.length; i++) {\r\n        const decay = Math.pow(0.5, i);\r\n        weightedNums.push(nums[i] * decay);\r\n        decayTotal += decay;\r\n    }\r\n\r\n    return weightedNums.reduce((a, b) => a + b, 0) / decayTotal;\r\n}\r\n\r\nexport function closerVerticallyTo(\r\n    y: number,\r\n): (detection1: IDetection, detection2: IDetection) => number {\r\n    return function closerToCoords(\r\n        detection1: IDetection,\r\n        detection2: IDetection,\r\n    ) {\r\n        return (\r\n            Math.abs(calculateTargetPos(detection2.bbox).y - y) -\r\n            Math.abs(calculateTargetPos(detection1.bbox).y - y)\r\n        );\r\n    };\r\n}\r\n\r\nexport function first(detection1: IDetection, detection2: IDetection): number {\r\n    return 0;\r\n}\r\n","import { IVideo } from '../actions/video/types';\r\nimport { IRootStore } from '../reducers/rootReducer';\r\n\r\nexport function getStreamForDevice(state: IRootStore): IVideo | undefined {\r\n    return state.videoStore.video;\r\n}\r\n\r\nexport function getVideoDimensions(state: IRootStore) {\r\n    const video = getVideo(state);\r\n    if (video) {\r\n        return { width: video.width, height: video.height };\r\n    }\r\n}\r\n\r\nexport function getVideo(state: IRootStore): HTMLVideoElement | undefined {\r\n    if (state.videoStore.video) {\r\n        return state.videoStore.video.videoElement;\r\n    }\r\n}\r\n\r\nexport function getWebcamAvailable(state: IRootStore): boolean {\r\n    return state.videoStore.webcamAvailable;\r\n}\r\n\r\nexport function getImageData(state: IRootStore): ImageData {\r\n    return state.videoStore.image;\r\n}\r\n","import { createSelector } from 'reselect';\r\nimport { centerPoint } from '../../AppConstants';\r\nimport { Detections, IDetection } from '../../models/objectDetection';\r\nimport select, {\r\n    calculateColorMatch,\r\n    closerToPrediction,\r\n    first,\r\n    getPredictedColor,\r\n    getPredictedTarget,\r\n} from '../../utils/objectSelection/select';\r\nimport { calculateNormalisedPos } from '../../utils/objectTracking/calculateFocus';\r\nimport { Animation } from '../../utils/pose/animations';\r\nimport { IColor, ICoords } from '../../utils/types';\r\nimport { IRootStore } from '../reducers/rootReducer';\r\nimport { getImageData, getVideoDimensions } from './videoSelectors';\r\n\r\nexport function getDetections(state: IRootStore): Detections {\r\n    return state.detectionStore.detections;\r\n}\r\n\r\nexport const getSelectionsCombiner = (\r\n    detections: Detections,\r\n    previousTargets: ICoords[],\r\n    previousColours: IColor[],\r\n    imageData: ImageData,\r\n) =>\r\n    previousTargets.length > 0\r\n        ? select(\r\n              detections,\r\n              closerToPrediction(\r\n                  getPredictedTarget(previousTargets),\r\n                  imageData,\r\n                  getPredictedColor(previousColours),\r\n              ),\r\n          )\r\n        : select(detections, first);\r\n\r\nexport const getSelections = createSelector(\r\n    [getDetections, getPreviousTargets, getPreviousColors, getImageData],\r\n    getSelectionsCombiner,\r\n);\r\n\r\nexport const getTargetsCombiner = (\r\n    selections: IDetection | undefined,\r\n    videoDimensions: { width: number; height: number } | undefined,\r\n): ICoords =>\r\n    !selections || !videoDimensions\r\n        ? centerPoint\r\n        : calculateNormalisedPos(\r\n              selections!.bbox,\r\n              videoDimensions!.width,\r\n              videoDimensions!.height,\r\n          );\r\nexport const getTargets = createSelector(\r\n    [getSelections, getVideoDimensions],\r\n    getTargetsCombiner,\r\n);\r\n\r\nexport const getColorCombiner = (\r\n    selection: IDetection | undefined,\r\n    imageData: ImageData,\r\n): IColor =>\r\n    selection\r\n        ? calculateColorMatch(selection.info.keypoints, imageData)\r\n        : { r: 0, g: 0, b: 0 };\r\nexport const getColor = createSelector(\r\n    [getSelections, getImageData],\r\n    getColorCombiner,\r\n);\r\n\r\nexport function getPreviousTarget(state: IRootStore): ICoords {\r\n    return state.detectionStore.history[state.detectionStore.history.length - 1]\r\n        .target;\r\n}\r\n\r\nexport function getPreviousTargets(state: IRootStore): ICoords[] {\r\n    return state.detectionStore.history.map(history => history.target);\r\n}\r\n\r\nexport function getPreviousColor(state: IRootStore): IColor {\r\n    return state.detectionStore.history[state.detectionStore.history.length - 1]\r\n        .color;\r\n}\r\n\r\nexport function getPreviousColors(state: IRootStore): IColor[] {\r\n    return state.detectionStore.history.map(history => history.color);\r\n}\r\n\r\nexport function getOpenCoefficient(state: IRootStore): number {\r\n    return state.detectionStore.eyesOpenCoefficient;\r\n}\r\n\r\nexport function getAnimations(state: IRootStore): Animation {\r\n    return state.detectionStore.animation;\r\n}\r\n\r\nexport function getAnimationExists(state: IRootStore): boolean {\r\n    return state.detectionStore.animation.length > 0;\r\n}\r\n","export function createActionPayload<TypeAction, TypePayload>(\r\n    actionType: TypeAction,\r\n): (payload: TypePayload) => IActionsWithPayload<TypeAction, TypePayload> {\r\n    return (p: TypePayload): IActionsWithPayload<TypeAction, TypePayload> => {\r\n        return {\r\n            payload: p,\r\n            type: actionType,\r\n        };\r\n    };\r\n}\r\nexport function createAction<TypeAction>(\r\n    actionType: TypeAction,\r\n): () => IActionsWithoutPayload<TypeAction> {\r\n    return (): IActionsWithoutPayload<TypeAction> => {\r\n        return {\r\n            type: actionType,\r\n        };\r\n    };\r\n}\r\n\r\nexport interface IActionsWithPayload<TypeAction, TypePayload> {\r\n    type: TypeAction;\r\n    payload: TypePayload;\r\n}\r\n\r\nexport interface IActionsWithoutPayload<TypeAction> {\r\n    type: TypeAction;\r\n}\r\n","export async function configureStream(mediaDevices: MediaDevices) {\r\n    try {\r\n        const stream = await mediaDevices.getUserMedia({\r\n            video: { width: 320, height: 240 },\r\n        });\r\n        const streamSettings = stream.getVideoTracks()[0].getSettings();\r\n        if (streamSettings.width && streamSettings.height) {\r\n            return {\r\n                width: streamSettings.width,\r\n                height: streamSettings.height,\r\n                stream,\r\n            };\r\n        }\r\n    } catch {\r\n        return undefined;\r\n    }\r\n}\r\n","export const SET_VIDEO = 'SET_VIDEO';\r\nexport const SET_VIDEO_STREAM = 'SET_VIDEO_STREAM';\r\nexport const TOGGLE_WEBCAM_AVAILABLE = 'TOGGLE_WEBCAM_AVAILABLE';\r\nexport const SET_IMAGE_DATA = 'SET_IMAGE_DATA';\r\n\r\nexport enum VideoSetAction {\r\n    VIDEO = 'SET_VIDEO',\r\n    VIDEO_STREAM = 'SET_VIDEO_STREAM',\r\n    TOGGLE_WEBCAM = 'TOGGLE_WEBCAM_AVAILABLE',\r\n    IMAGE_DATA = 'SET_IMAGE_DATA',\r\n}\r\n\r\nexport interface IVideo {\r\n    width: number;\r\n    height: number;\r\n    videoElement?: HTMLVideoElement;\r\n    stream?: MediaStream;\r\n}\r\n\r\nexport interface IVideoState {\r\n    webcamAvailable: boolean;\r\n    video: IVideo;\r\n    image: ImageData;\r\n}\r\n\r\nexport interface ISetVideoAction {\r\n    readonly type: typeof SET_VIDEO;\r\n    readonly payload: HTMLVideoElement;\r\n}\r\n\r\nexport interface ISetVideoStreamAction {\r\n    readonly type: typeof SET_VIDEO_STREAM;\r\n    readonly payload: IVideo;\r\n}\r\n\r\nexport interface IToggleWebcamAvailable {\r\n    readonly type: typeof TOGGLE_WEBCAM_AVAILABLE;\r\n}\r\n\r\nexport interface ISetImageDataAction {\r\n    readonly type: typeof SET_IMAGE_DATA;\r\n    readonly payload: ImageData;\r\n}\r\n\r\nexport type VideoAction =\r\n    | ISetVideoAction\r\n    | ISetVideoStreamAction\r\n    | IToggleWebcamAvailable\r\n    | ISetImageDataAction;\r\n","import { Action } from 'redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { configureStream } from '../../../components/webcamHandler/WebcamHandler';\r\nimport { IRootStore } from '../../reducers/rootReducer';\r\nimport { createAction, createActionPayload } from '../creators';\r\nimport {\r\n    IVideo,\r\n    SET_IMAGE_DATA,\r\n    SET_VIDEO,\r\n    SET_VIDEO_STREAM,\r\n    TOGGLE_WEBCAM_AVAILABLE,\r\n} from './types';\r\n\r\nexport function setStream(mediaDevices: MediaDevices) {\r\n    return async (\r\n        dispatch: ThunkDispatch<IRootStore, void, Action>,\r\n        getState: () => IRootStore,\r\n    ) => {\r\n        const stream = await configureStream(mediaDevices);\r\n        const webcamAvailable = getState().videoStore.webcamAvailable;\r\n        if (stream) {\r\n            dispatch(setVideoStreamAction(stream));\r\n            if (!webcamAvailable) {\r\n                dispatch(toggleWebcamAvailable());\r\n            }\r\n        } else {\r\n            if (webcamAvailable) {\r\n                dispatch(toggleWebcamAvailable());\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nexport const setVideoAction = createActionPayload<\r\n    typeof SET_VIDEO,\r\n    HTMLVideoElement\r\n>(SET_VIDEO);\r\n\r\nexport const setVideoStreamAction = createActionPayload<\r\n    typeof SET_VIDEO_STREAM,\r\n    IVideo\r\n>(SET_VIDEO_STREAM);\r\n\r\nexport const toggleWebcamAvailable = createAction<\r\n    typeof TOGGLE_WEBCAM_AVAILABLE\r\n>(TOGGLE_WEBCAM_AVAILABLE);\r\n\r\nexport const setImageDataAction = createActionPayload<\r\n    typeof SET_IMAGE_DATA,\r\n    ImageData\r\n>(SET_IMAGE_DATA);\r\n","import { PoseNet } from '@tensorflow-models/posenet';\r\nimport { Detections, IDetection } from '../../../models/objectDetection';\r\nimport { Animation } from '../../../utils/pose/animations';\r\nimport { IColor, ICoords, IHistory } from '../../../utils/types';\r\n\r\nexport const SET_MODEL = 'SET_MODEL';\r\nexport const SET_IDLE_TARGET = 'SET_IDLE_TARGET';\r\nexport const SET_DETECTIONS = 'SET_DETECTIONS';\r\nexport const SET_OPEN = 'SET_OPEN';\r\nexport const SET_ANIMATION = 'SET_ANIMATION';\r\nexport const SWAP_SELECTION = 'SWAP_SELECTION';\r\nexport const SET_INTERVAL = 'SET_INTERVAL';\r\nexport const TOGGLE_ANIMATION_COOLDOWN = 'TOGGLE_ANIMATION_COOLDOWN';\r\n\r\nexport interface IDetectionState {\r\n    model: PoseNet | null;\r\n    detectionInterval: number;\r\n    eyesOpenCoefficient: number;\r\n    detections: Detections;\r\n    history: IHistory[];\r\n    animation: Animation;\r\n    animationCoolDown: boolean;\r\n    nextSelectionSwapTime: number;\r\n}\r\n\r\nexport interface ISetModelAction {\r\n    readonly type: typeof SET_MODEL;\r\n    readonly payload: PoseNet | null;\r\n}\r\n\r\nexport interface ISetIntervalAction {\r\n    readonly type: typeof SET_INTERVAL;\r\n    readonly payload: number;\r\n}\r\n\r\nexport interface ISetDetectionsActionPayload {\r\n    readonly detections: Detections;\r\n    readonly previousTarget: ICoords;\r\n    readonly previousColor: IColor;\r\n}\r\n\r\nexport interface ISetDetectionsAction {\r\n    readonly type: typeof SET_DETECTIONS;\r\n    readonly payload: ISetDetectionsActionPayload;\r\n}\r\n\r\nexport interface ISetOpenAction {\r\n    readonly type: typeof SET_OPEN;\r\n    readonly payload: number;\r\n}\r\n\r\nexport interface ISetAnimationAction {\r\n    readonly type: typeof SET_ANIMATION;\r\n    readonly payload: Animation;\r\n}\r\n\r\nexport interface ISwapSelectionActionPayload {\r\n    readonly selection: IDetection | undefined;\r\n    readonly nextSelectionSwapTime: number;\r\n}\r\n\r\nexport interface ISwapSelectionAction {\r\n    readonly type: typeof SWAP_SELECTION;\r\n    readonly payload: ISwapSelectionActionPayload;\r\n}\r\n\r\nexport interface IToggleAnimationCooldown {\r\n    readonly type: typeof TOGGLE_ANIMATION_COOLDOWN;\r\n}\r\n\r\nexport type DetectionActionType =\r\n    | ISetModelAction\r\n    | ISetIntervalAction\r\n    | ISetDetectionsAction\r\n    | ISetOpenAction\r\n    | ISetAnimationAction\r\n    | ISwapSelectionAction\r\n    | IToggleAnimationCooldown;\r\n","import { load, PoseNet } from '@tensorflow-models/posenet';\r\nimport { Action } from 'redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport {\r\n    animationCooldownTimeout,\r\n    targetingConsts,\r\n} from '../../../AppConstants';\r\nimport { Detections, IDetection } from '../../../models/objectDetection';\r\nimport calculateTargetPos from '../../../utils/objectTracking/calculateFocus';\r\nimport { Animation, animationMapping } from '../../../utils/pose/animations';\r\nimport { getPose } from '../../../utils/pose/poseDetection';\r\nimport { IColor, ICoords } from '../../../utils/types';\r\nimport { getImageDataFromVideo, reshapeDetections } from '../../../utils/utils';\r\nimport { IRootStore } from '../../reducers/rootReducer';\r\nimport { getConfig, getFPS } from '../../selectors/configSelectors';\r\nimport {\r\n    getAnimationExists,\r\n    getColor,\r\n    getSelections,\r\n    getTargets,\r\n} from '../../selectors/detectionSelectors';\r\nimport { getVideo } from '../../selectors/videoSelectors';\r\nimport { createAction, createActionPayload } from '../creators';\r\nimport { setImageDataAction } from '../video/actions';\r\nimport {\r\n    ISwapSelectionActionPayload,\r\n    SET_ANIMATION,\r\n    SET_DETECTIONS,\r\n    SET_INTERVAL,\r\n    SET_MODEL,\r\n    SET_OPEN,\r\n    SWAP_SELECTION,\r\n    TOGGLE_ANIMATION_COOLDOWN,\r\n} from './types';\r\n\r\nexport function loadModel(window: Window) {\r\n    return async (\r\n        dispatch: ThunkDispatch<IRootStore, void, Action>,\r\n        getState: () => IRootStore,\r\n    ) => {\r\n        dispatch(setModel(null));\r\n        const config = getConfig(getState());\r\n        const model = await load(config.advancedConfig.modelConfig);\r\n        dispatch(setModel(model));\r\n        dispatch(restartDetection(window));\r\n    };\r\n}\r\n\r\nexport function restartDetection(window: Window) {\r\n    return (\r\n        dispatch: ThunkDispatch<IRootStore, void, Action>,\r\n        getState: () => IRootStore,\r\n    ) => {\r\n        const state = getState();\r\n        dispatch(handleDetection(document));\r\n        window.clearInterval(state.detectionStore.detectionInterval);\r\n        const id = window.setInterval(\r\n            () => dispatch(handleDetection(window.document)),\r\n            1000 / getFPS(state),\r\n        );\r\n        dispatch({ type: SET_INTERVAL, payload: id });\r\n    };\r\n}\r\n\r\nexport function handleDetection(document: Document) {\r\n    return async (\r\n        dispatch: ThunkDispatch<IRootStore, void, Action>,\r\n        getState: () => IRootStore,\r\n    ) => {\r\n        const state = getState();\r\n        const video = getVideo(state);\r\n        const model = state.detectionStore.model;\r\n        const detectionConfig = getConfig(state).advancedConfig.detectionConfig;\r\n\r\n        if (!video || !model) {\r\n            return;\r\n        }\r\n\r\n        const image = getImageDataFromVideo(video, document);\r\n\r\n        if (!image) {\r\n            return;\r\n        }\r\n\r\n        dispatch(setImageDataAction(image));\r\n        const detections = reshapeDetections(\r\n            await model.estimateMultiplePoses(image, detectionConfig),\r\n        );\r\n\r\n        dispatch(setDetectionsAndMaybeSwapTarget(detections));\r\n\r\n        const selection = getSelections(getState());\r\n        if (\r\n            selection &&\r\n            !getAnimationExists(getState()) &&\r\n            !getState().detectionStore.animationCoolDown\r\n        ) {\r\n            const pose = getPose(selection);\r\n            if (pose) {\r\n                const poseAnimation = animationMapping[pose];\r\n                dispatch(setAnimation(poseAnimation()));\r\n                dispatch(toggleAnimationCoolDown());\r\n                window.setTimeout(() => {\r\n                    dispatch(toggleAnimationCoolDown());\r\n                }, animationCooldownTimeout);\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nexport function setDetectionsAndMaybeSwapTarget(detections: Detections) {\r\n    return (\r\n        dispatch: ThunkDispatch<IRootStore, void, Action>,\r\n        getState: () => IRootStore,\r\n    ) => {\r\n        const state = getState();\r\n        const now = new Date().getTime();\r\n        if (now < state.detectionStore.nextSelectionSwapTime) {\r\n            dispatch(\r\n                setDetections({\r\n                    detections,\r\n                    previousTarget: getTargets(state),\r\n                    previousColor: getColor(state),\r\n                }),\r\n            );\r\n        } else {\r\n            const previousSelection = getSelections(state);\r\n            if (previousSelection && detections.length > 1) {\r\n                removeClosestToSelection(detections, previousSelection);\r\n            }\r\n\r\n            const selectionIndex = Math.floor(\r\n                Math.random() * (detections.length - 1),\r\n            );\r\n            const nextSelectionSwapTime =\r\n                now +\r\n                targetingConsts.minInterval +\r\n                (targetingConsts.maxInterval - targetingConsts.minInterval) *\r\n                    Math.random();\r\n            const selection =\r\n                detections.length > 0 ? detections[selectionIndex] : undefined;\r\n            dispatch(swapSelection({ selection, nextSelectionSwapTime }));\r\n        }\r\n    };\r\n}\r\n\r\nfunction removeClosestToSelection(\r\n    detections: IDetection[],\r\n    selection: IDetection,\r\n) {\r\n    const selectionTargetPos = calculateTargetPos(selection.bbox);\r\n    let closestIndex = 0;\r\n    let closestDistance = Number.MAX_SAFE_INTEGER;\r\n    detections.forEach((detection, index) => {\r\n        const targetPos = calculateTargetPos(detection.bbox);\r\n        const distance = Math.hypot(\r\n            targetPos.x - selectionTargetPos.x,\r\n            targetPos.y - selectionTargetPos.y,\r\n        );\r\n        if (distance < closestDistance) {\r\n            closestIndex = index;\r\n            closestDistance = distance;\r\n        }\r\n    });\r\n    detections.splice(closestIndex, 1);\r\n}\r\n\r\nexport const setDetections = createActionPayload<\r\n    typeof SET_DETECTIONS,\r\n    {\r\n        detections: Detections;\r\n        previousTarget: ICoords;\r\n        previousColor: IColor;\r\n    }\r\n>(SET_DETECTIONS);\r\n\r\nexport const swapSelection = createActionPayload<\r\n    typeof SWAP_SELECTION,\r\n    ISwapSelectionActionPayload\r\n>(SWAP_SELECTION);\r\n\r\nexport const setModel = createActionPayload<typeof SET_MODEL, PoseNet | null>(\r\n    SET_MODEL,\r\n);\r\n\r\nexport const setOpen = createActionPayload<typeof SET_OPEN, number>(SET_OPEN);\r\n\r\nexport const setAnimation = createActionPayload<\r\n    typeof SET_ANIMATION,\r\n    Animation\r\n>(SET_ANIMATION);\r\n\r\nexport const toggleAnimationCoolDown = createAction<\r\n    typeof TOGGLE_ANIMATION_COOLDOWN\r\n>(TOGGLE_ANIMATION_COOLDOWN);\r\n","import {\r\n    architectures,\r\n    inputResolutions,\r\n    multipliers,\r\n    outputStrides,\r\n} from '../../../models/objectDetection';\r\n\r\nexport enum ConfigSetAction {\r\n    APP = 'SET_APP_CONFIG',\r\n    ADVANCED = 'SET_ADVANCED',\r\n    MODEL = 'SET_MODEL_CONFIG',\r\n    DETECTION = 'SET_DETECTION_CONFIG',\r\n    RESET = 'RESET_CONFIG',\r\n}\r\n\r\nexport interface IConfigState {\r\n    advancedConfig: IAdvancedConfig;\r\n    appConfig: IAppConfig;\r\n}\r\n\r\nexport type PartialConfig =\r\n    | Partial<IAppConfig>\r\n    | Partial<IModelStringConfig>\r\n    | Partial<IModelConfig>\r\n    | Partial<IDetectionConfig>;\r\n\r\nexport type UpdateConfigAction = (payload: PartialConfig) => void;\r\n\r\nexport interface IAppConfig {\r\n    xSensitivity: number;\r\n    ySensitivity: number;\r\n    fps: number;\r\n    toggleAdvanced: boolean;\r\n    irisColor: string;\r\n    showHelp: boolean;\r\n}\r\n\r\nexport interface IAdvancedConfig {\r\n    toggleReflection: boolean;\r\n    reflectionOpacity: number;\r\n    toggleDebug: boolean;\r\n    modelConfig: IModelConfig;\r\n    detectionConfig: IDetectionConfig;\r\n}\r\n\r\nexport interface IModelConfig {\r\n    architecture: architectures;\r\n    outputStride: outputStrides;\r\n    multiplier: multipliers;\r\n    inputResolution: inputResolutions;\r\n}\r\n\r\nexport interface IModelStringConfig {\r\n    architecture: architectures;\r\n    outputStride: string;\r\n    multiplier: string;\r\n    inputResolution: string;\r\n}\r\n\r\nexport interface IDetectionConfig {\r\n    flipHorizontal: boolean;\r\n    maxDetections: number;\r\n    scoreThreshold: number;\r\n    nmsRadius: number;\r\n}\r\n\r\nexport interface ISetAppConfigAction {\r\n    readonly type: ConfigSetAction.APP;\r\n    readonly payload: Partial<IAppConfig>;\r\n}\r\n\r\nexport interface ISetModelConfigAction {\r\n    readonly type: ConfigSetAction.MODEL;\r\n    readonly payload: Partial<IModelConfig>;\r\n}\r\n\r\nexport interface ISetDetectionConfigAction {\r\n    readonly type: ConfigSetAction.DETECTION;\r\n    readonly payload: Partial<IDetectionConfig>;\r\n}\r\n\r\nexport interface ISetAdvancedConfigAction {\r\n    readonly type: ConfigSetAction.ADVANCED;\r\n    readonly payload: Partial<IAdvancedConfig>;\r\n}\r\n\r\nexport interface IResetConfigAction {\r\n    readonly type: ConfigSetAction.RESET;\r\n}\r\n\r\nexport type ConfigAction =\r\n    | ISetAppConfigAction\r\n    | ISetAdvancedConfigAction\r\n    | ISetModelConfigAction\r\n    | ISetDetectionConfigAction\r\n    | IResetConfigAction;\r\n","import { Action } from 'redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport {\r\n    inputResolutions,\r\n    multipliers,\r\n    outputStrides,\r\n} from '../../../models/objectDetection';\r\nimport { IRootStore } from '../../reducers/rootReducer';\r\nimport { loadModel, restartDetection } from '../detections/actions';\r\nimport {\r\n    ConfigSetAction,\r\n    IModelConfig,\r\n    IModelStringConfig,\r\n    PartialConfig,\r\n} from './types';\r\n\r\nexport function updateConfigAction(\r\n    type: ConfigSetAction,\r\n    partialConfig: PartialConfig,\r\n    window: Window,\r\n) {\r\n    return (dispatch: ThunkDispatch<IRootStore, void, Action>) => {\r\n        dispatch(setConfigAction(type, partialConfig));\r\n        switch (type) {\r\n            case ConfigSetAction.APP:\r\n                if (partialConfig.hasOwnProperty('fps')) {\r\n                    dispatch(restartDetection(window));\r\n                }\r\n                break;\r\n            case ConfigSetAction.MODEL:\r\n                if (partialConfig.hasOwnProperty('architecture')) {\r\n                    dispatch(\r\n                        setConfigAction(ConfigSetAction.MODEL, {\r\n                            outputStride: '16',\r\n                            multiplier: '1',\r\n                        }),\r\n                    );\r\n                }\r\n                dispatch(loadModel(window));\r\n                break;\r\n        }\r\n    };\r\n}\r\n\r\nexport function resetConfigAction(\r\n    type: ConfigSetAction,\r\n): { type: ConfigSetAction } {\r\n    return { type };\r\n}\r\n\r\nexport function setConfigAction(\r\n    type: ConfigSetAction,\r\n    payload: PartialConfig,\r\n): { type: ConfigSetAction; payload: PartialConfig } {\r\n    if (type !== ConfigSetAction.MODEL) {\r\n        return { type, payload };\r\n    }\r\n\r\n    return {\r\n        type,\r\n        payload: parseModelConfig(payload as Partial<IModelStringConfig>),\r\n    };\r\n}\r\n\r\nfunction parseModelConfig(\r\n    modelConfig: Partial<IModelStringConfig>,\r\n): Partial<IModelConfig> {\r\n    const parsedConfig: Partial<IModelConfig> = {};\r\n    if (modelConfig.architecture) {\r\n        parsedConfig.architecture = modelConfig.architecture;\r\n    }\r\n    if (modelConfig.outputStride) {\r\n        parsedConfig.outputStride = parseInt(\r\n            modelConfig.outputStride,\r\n            10,\r\n        ) as outputStrides;\r\n    }\r\n    if (modelConfig.inputResolution) {\r\n        parsedConfig.inputResolution = parseInt(\r\n            modelConfig.inputResolution,\r\n            10,\r\n        ) as inputResolutions;\r\n    }\r\n    if (modelConfig.multiplier) {\r\n        parsedConfig.multiplier = parseFloat(\r\n            modelConfig.multiplier,\r\n        ) as multipliers;\r\n    }\r\n    return parsedConfig;\r\n}\r\n","import React, { Fragment } from 'react';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nexport enum HelpWith {\r\n    FPS = 'FPS',\r\n    X_SENSITIVITY = 'X_SENSITIVITY',\r\n    Y_SENSITIVITY = 'Y_SENSITIVITY',\r\n    VIDEO_STREAM = 'VIDEO_STREAM',\r\n    IRIS_COLOR = 'IRIS_COLOR',\r\n    DEBUG = 'DEBUG',\r\n    REFLECTION = 'REFLECTION',\r\n    REFLECTION_OPACITY = 'REFLECTION_OPACITY',\r\n    ARCHITECTURE = 'ARCHITECTURE',\r\n    OUTPUT_STRIDE = 'OUTPUT_STRIDE',\r\n    RESOLUTION = 'RESOLUTION',\r\n    MULTIPLIER = 'MULTIPLIER',\r\n    DETECTIONS = 'DETECTIONS',\r\n    MIN_SCORE = 'MIN_SCORE',\r\n    NMS_RADIUS = 'NMS_RADIUS',\r\n}\r\n\r\nexport const appHelp = [\r\n    HelpWith.FPS,\r\n    HelpWith.IRIS_COLOR,\r\n    HelpWith.Y_SENSITIVITY,\r\n    HelpWith.X_SENSITIVITY,\r\n];\r\n\r\nconst fps = () => {\r\n    return (\r\n        <Fragment>\r\n            Configures how many frames are processed per second.\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst xSense = () => {\r\n    return <Fragment>How sensitively the eyes move horizontally.</Fragment>;\r\n};\r\n\r\nconst ySense = () => {\r\n    return <Fragment>How sensitively the eyes move vertically.</Fragment>;\r\n};\r\n\r\nconst video = () => {\r\n    return (\r\n        <Fragment>\r\n            Displays current webcam feed, outlines the person that is currently\r\n            being tracked.\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst iris = () => {\r\n    return <Fragment>Customise eye colour.</Fragment>;\r\n};\r\n\r\nconst debug = () => {\r\n    return (\r\n        <Fragment>\r\n            View the current camera feed, with tracked object highlighted.\r\n            <br />\r\n            Useful for setting up your cameras and environment.\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst reflectionOpacity = () => {\r\n    return (\r\n        <Fragment>\r\n            Configure the opacity of the reflection. This does not affect\r\n            performance.\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst reflection = () => {\r\n    return (\r\n        <Fragment>\r\n            This checkbox allows you to view the currently selected target\r\n            inside the pupil as a reflection.\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst architecture = () => {\r\n    return (\r\n        <Fragment>\r\n            The model determines the speed and accuracy of the detection.\r\n            <br />\r\n            MobilNetV1 is faster whereas Resnet50 is more accurate.\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst outputStride = () => {\r\n    return (\r\n        <Fragment>\r\n            Output Stride determines the output resolution of the model\r\n            detection.\r\n            <br />A higher output stride results in faster detection.\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst resolution = () => {\r\n    return (\r\n        <Fragment>\r\n            The resolution determines the input resolution to the detection\r\n            model.\r\n            <br />\r\n            Lower resolutions run faster.\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst multiplier = () => {\r\n    return (\r\n        <Fragment>\r\n            The multiplier determines the depth of the CNN.\r\n            <br />A lower value results in faster detections.\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst detections = () => {\r\n    return (\r\n        <Fragment>This value sets the maximum number of detections</Fragment>\r\n    );\r\n};\r\n\r\nconst minScore = () => {\r\n    return (\r\n        <Fragment>\r\n            Sets the minimum certainty to commit to a prediction.\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nconst nmsRadius = () => {\r\n    return (\r\n        <Fragment>\r\n            This value adjusts the non-maximum-supression radius in pixels. This\r\n            prevents multiple\r\n            <br />\r\n            detections being made in within the specified number of pixels.\r\n        </Fragment>\r\n    );\r\n};\r\n\r\ninterface IHelpSectionMap {\r\n    [id: string]: () => JSX.Element;\r\n}\r\n\r\nconst helpSections: IHelpSectionMap = {\r\n    FPS: fps,\r\n    X_SENSITIVITY: xSense,\r\n    Y_SENSITIVITY: ySense,\r\n    VIDEO_STREAM: video,\r\n    IRIS_COLOR: iris,\r\n    DEBUG: debug,\r\n    REFLECTION: reflection,\r\n    REFLECTION_OPACITY: reflectionOpacity,\r\n    ARCHITECTURE: architecture,\r\n    OUTPUT_STRIDE: outputStride,\r\n    RESOLUTION: resolution,\r\n    MULTIPLIER: multiplier,\r\n    DETECTIONS: detections,\r\n    MIN_SCORE: minScore,\r\n    NMS_RADIUS: nmsRadius,\r\n};\r\n\r\nfunction text(section: HelpWith) {\r\n    const Component = helpSections[HelpWith[section]];\r\n    return <Component />;\r\n}\r\n\r\ninterface IHelpProps {\r\n    problemWith: HelpWith;\r\n}\r\n\r\nfunction Help(props: IHelpProps) {\r\n    return (\r\n        <div className={HelpWith[props.problemWith]}>\r\n            <ReactTooltip\r\n                id={HelpWith[props.problemWith]}\r\n                place=\"right\"\r\n                type=\"dark\"\r\n                effect=\"solid\"\r\n            >\r\n                <span>{text(props.problemWith)}</span>\r\n            </ReactTooltip>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Help;\r\n","import { getAdjacentKeyPoints, Keypoint } from '@tensorflow-models/posenet';\r\nimport { debugFeedConsts } from '../../AppConstants';\r\nimport { ICoords } from '../../utils/types';\r\n\r\nexport function drawPose(\r\n    keypoints: Keypoint[],\r\n    canvasCtx: CanvasRenderingContext2D,\r\n    color: string,\r\n) {\r\n    drawSkeleton(keypoints, canvasCtx, color);\r\n    drawKeypoints(keypoints, canvasCtx, color);\r\n}\r\n\r\nfunction drawSegment(\r\n    pair1: ICoords,\r\n    pair2: ICoords,\r\n    color: string,\r\n    scale: number,\r\n    ctx: CanvasRenderingContext2D,\r\n) {\r\n    ctx.beginPath();\r\n    ctx.moveTo(pair1.x * scale, pair1.y * scale);\r\n    ctx.lineTo(pair2.x * scale, pair2.y * scale);\r\n    ctx.lineWidth = debugFeedConsts.lineWidth;\r\n    ctx.strokeStyle = color;\r\n    ctx.stroke();\r\n}\r\n\r\nfunction drawSkeleton(\r\n    keypoints: Keypoint[],\r\n    canvasCtx: CanvasRenderingContext2D,\r\n    color: string,\r\n) {\r\n    const adjacentKeyPoints = getAdjacentKeyPoints(\r\n        keypoints,\r\n        debugFeedConsts.minConfidence,\r\n    );\r\n\r\n    adjacentKeyPoints.forEach(keypoint => {\r\n        drawSegment(\r\n            keypoint[0].position,\r\n            keypoint[1].position,\r\n            color,\r\n            debugFeedConsts.canvasScale,\r\n            canvasCtx,\r\n        );\r\n    });\r\n}\r\n\r\nfunction drawKeypoints(\r\n    keypoints: Keypoint[],\r\n    ctx: CanvasRenderingContext2D,\r\n    color: string,\r\n) {\r\n    for (const keypoint of keypoints) {\r\n        if (keypoint.score >= debugFeedConsts.minConfidence) {\r\n            const { y, x } = keypoint.position;\r\n            drawPoint(\r\n                ctx,\r\n                y * debugFeedConsts.canvasScale,\r\n                x * debugFeedConsts.canvasScale,\r\n                debugFeedConsts.pointRadius,\r\n                color,\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nfunction drawPoint(\r\n    ctx: CanvasRenderingContext2D,\r\n    y: number,\r\n    x: number,\r\n    r: number,\r\n    color: string,\r\n) {\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, r, 0, 2 * Math.PI);\r\n    ctx.fillStyle = color;\r\n    ctx.fill();\r\n}\r\n","import { Keypoint } from '@tensorflow-models/posenet';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { debugFeedColors } from '../../../AppConstants';\r\nimport { Detections, IDetection } from '../../../models/objectDetection';\r\nimport { IRootStore } from '../../../store/reducers/rootReducer';\r\nimport {\r\n    getDetections,\r\n    getSelections,\r\n} from '../../../store/selectors/detectionSelectors';\r\nimport { getVideo } from '../../../store/selectors/videoSelectors';\r\nimport { drawPose } from '../DrawPoseUtils';\r\nimport { HelpWith } from '../Help';\r\n\r\ninterface ICanvasMenuItemProps {\r\n    name: string;\r\n    helpWith: HelpWith;\r\n    videoIndex: number;\r\n}\r\n\r\ninterface IAppMapStateToProps {\r\n    video: HTMLVideoElement | undefined;\r\n    selection: IDetection | undefined;\r\n    detections: Detections;\r\n}\r\n\r\nexport type CanvasMenuItemProps = ICanvasMenuItemProps & IAppMapStateToProps;\r\n\r\nexport class CanvasMenuItem extends React.Component<CanvasMenuItemProps> {\r\n    canvasRef: React.RefObject<HTMLCanvasElement>;\r\n    private keypoints: Keypoint[] = [];\r\n    constructor(props: CanvasMenuItemProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            canvas: HTMLCanvasElement,\r\n        };\r\n\r\n        this.canvasRef = React.createRef();\r\n\r\n        this.getStream = this.getStream.bind(this);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.selection) {\r\n            this.keypoints = this.props.selection.info.keypoints;\r\n        }\r\n        this.getStream();\r\n    }\r\n\r\n    shouldComponentUpdate(\r\n        previousProps: CanvasMenuItemProps,\r\n        nextProps: CanvasMenuItemProps,\r\n    ) {\r\n        return (\r\n            previousProps.selection !== nextProps.selection ||\r\n            previousProps.videoIndex !== nextProps.videoIndex\r\n        );\r\n    }\r\n\r\n    getStream() {\r\n        const video = this.props.video;\r\n\r\n        const focusedPose = this.keypoints;\r\n        const detections = this.props.detections;\r\n\r\n        if (video) {\r\n            this.handleDrawing(video, detections, focusedPose);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div data-tip={true} data-for={HelpWith[this.props.helpWith]}>\r\n                <label>{this.props.name}</label>\r\n                <br />\r\n                <canvas id=\"canvas\" ref={this.canvasRef} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private handleDrawing(\r\n        video: HTMLVideoElement,\r\n        detections: IDetection[],\r\n        focusedPose: Keypoint[],\r\n    ) {\r\n        if (this.canvasRef.current) {\r\n            const canvas = this.canvasRef.current;\r\n            canvas.height = video.height;\r\n            canvas.width = video.width;\r\n            const canvasCtx = canvas.getContext('2d');\r\n\r\n            if (canvasCtx) {\r\n                canvasCtx.clearRect(0, 0, canvas.width, canvas.height);\r\n            }\r\n\r\n            this.drawVideo(canvasCtx, video, canvas);\r\n\r\n            this.drawPoses(detections, canvasCtx, focusedPose);\r\n        }\r\n    }\r\n\r\n    private drawPoses(\r\n        detections: IDetection[],\r\n        canvasCtx: CanvasRenderingContext2D | null,\r\n        focusedPose: Keypoint[],\r\n    ) {\r\n        if (this.props.selection && detections && canvasCtx) {\r\n            detections\r\n                .map(detection => detection.info.keypoints)\r\n                .filter(\r\n                    keypoint =>\r\n                        keypoint !== focusedPose &&\r\n                        noMatchingPoint(keypoint, focusedPose),\r\n                )\r\n                .forEach(keypoint => {\r\n                    drawPose(keypoint, canvasCtx, debugFeedColors.other);\r\n                });\r\n            drawPose(focusedPose, canvasCtx, debugFeedColors.chosen);\r\n        }\r\n    }\r\n\r\n    private drawVideo(\r\n        canvasCtx: CanvasRenderingContext2D | null,\r\n        video: HTMLVideoElement,\r\n        canvas: HTMLCanvasElement,\r\n    ) {\r\n        if (canvasCtx) {\r\n            canvasCtx.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n        }\r\n    }\r\n}\r\n\r\nfunction noMatchingPoint(keypoints1: Keypoint[], keypoints2: Keypoint[]) {\r\n    return keypoints1.every(\r\n        (keypoint, i) =>\r\n            keypoint.position.x !== keypoints2[i].position.x &&\r\n            keypoint.position.y !== keypoints2[i].position.y,\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: IRootStore) => ({\r\n    video: getVideo(state),\r\n    selection: getSelections(state),\r\n    detections: getDetections(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(CanvasMenuItem);\r\n","import { Button } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport { UpdateConfigAction } from '../../store/actions/config/types';\r\nimport './WarningPopupHandler.css';\r\nexport interface ICheckBoxMenuItemProps {\r\n    configName: string;\r\n    onInputChange: UpdateConfigAction;\r\n    showModal: boolean;\r\n    warning: JSX.Element;\r\n    accept: () => void;\r\n    decline: () => void;\r\n}\r\n\r\nconst WarningPopupHandler = React.memo((props: ICheckBoxMenuItemProps) => {\r\n    const [showModal, setShowModal] = useState(props.showModal);\r\n\r\n    useEffect(() => {\r\n        setShowModal(props.showModal);\r\n    }, [setShowModal, props.showModal]);\r\n\r\n    return (\r\n        <>\r\n            {showModal && (\r\n                <Popup \r\n                    open={true} \r\n                    modal={true} \r\n                    closeOnDocumentClick={false} \r\n                    closeOnEscape={false}\r\n                > \r\n                    <>\r\n                        <h1>Warning!</h1>\r\n                        {props.warning}\r\n                        <br />\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            className=\"accept\"\r\n                            color=\"primary\"\r\n                            onClick={props.accept}\r\n                        >\r\n                            Proceed\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            className=\"decline\"\r\n                            onClick={props.decline}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                    </>\r\n                </Popup>\r\n            )}\r\n        </>\r\n    );\r\n});\r\n\r\nexport default WarningPopupHandler;\r\n","import { Checkbox, FormControl, FormControlLabel } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport { UpdateConfigAction } from '../../../store/actions/config/types';\r\nimport { HelpWith } from '../Help';\r\nimport WarningPopupHandler from '../WarningPopupHandler';\r\n\r\nexport interface ICheckBoxMenuItemProps {\r\n    name: string;\r\n    configName: string;\r\n    onInputChange: UpdateConfigAction;\r\n    checked: boolean;\r\n    helpWith?: HelpWith;\r\n    warning?: JSX.Element;\r\n}\r\n\r\nconst CheckBoxMenuItem = React.memo(\r\n    (props: ICheckBoxMenuItemProps) => {\r\n        const [showModal, setShowModal] = useState(false);\r\n\r\n        function onChange(event: object, checked: boolean) {\r\n            if (props.warning && !props.checked) {\r\n                setShowModal(true);\r\n            } else {\r\n                setShowModal(false);\r\n                props.onInputChange({\r\n                    [props.configName]: checked,\r\n                });\r\n            }\r\n        }\r\n\r\n        function accept() {\r\n            setShowModal(false);\r\n            props.onInputChange({\r\n                [props.configName]: true,\r\n            });\r\n        }\r\n\r\n        function decline() {\r\n            setShowModal(false);\r\n        }\r\n\r\n        function checkBox(): JSX.Element {\r\n            return (\r\n                <>\r\n                    <FormControl>\r\n                        <FormControlLabel\r\n                            value=\"start\"\r\n                            onChange={onChange}\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={props.checked}\r\n                                    color=\"primary\"\r\n                                />\r\n                            }\r\n                            label={props.name}\r\n                            labelPlacement=\"start\"\r\n                        />\r\n                    </FormControl>\r\n\r\n                    {props.warning && (\r\n                        <WarningPopupHandler\r\n                            configName={props.configName}\r\n                            onInputChange={props.onInputChange}\r\n                            showModal={showModal}\r\n                            warning={props.warning}\r\n                            accept={accept}\r\n                            decline={decline}\r\n                        />\r\n                    )}\r\n                </>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <>\r\n                {props.helpWith ? (\r\n                    <div\r\n                        className=\"checkbox\"\r\n                        data-tip={true}\r\n                        data-for={HelpWith[props.helpWith]}\r\n                    >\r\n                        {checkBox()}\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"checkbox\"> {checkBox()} </div>\r\n                )}\r\n            </>\r\n        );\r\n    },\r\n    (previous, next) => previous.checked === next.checked,\r\n);\r\n\r\nexport default CheckBoxMenuItem;\r\n","import { FormControl, MenuItem, Select } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { UpdateConfigAction } from '../../../store/actions/config/types';\r\nimport { HelpWith } from '../Help';\r\n\r\nexport interface IDropDownMenuItemProps {\r\n    name: string;\r\n    configName: string;\r\n    onInputChange: UpdateConfigAction;\r\n    values: string[];\r\n    defaultValue: string;\r\n    helpWith: HelpWith;\r\n}\r\n\r\nconst DropDownMenuItem = React.memo(\r\n    (props: IDropDownMenuItemProps) => {\r\n        function getMenuItems(): JSX.Element[] {\r\n            const menuItem = props.values.map((element, index) => (\r\n                <MenuItem key={index} value={element}>\r\n                    {element}\r\n                </MenuItem>\r\n            ));\r\n            return menuItem;\r\n        }\r\n\r\n        function handleChange(event: any) {\r\n            props.onInputChange({\r\n                [props.configName]: event.target.value,\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div data-tip={true} data-for={HelpWith[props.helpWith]}>\r\n                <label>{props.name}</label>\r\n                <FormControl className=\"selectForm\">\r\n                    <Select\r\n                        value={props.defaultValue}\r\n                        onChange={handleChange}\r\n                        name={props.name}\r\n                    >\r\n                        {getMenuItems()}\r\n                    </Select>\r\n                </FormControl>\r\n            </div>\r\n        );\r\n    },\r\n    (previous, next) =>\r\n        previous.defaultValue === next.defaultValue &&\r\n        previous.values.length === next.values.length &&\r\n        previous.values.every(\r\n            (element, index) => element === next.values[index],\r\n        ),\r\n);\r\n\r\nexport default DropDownMenuItem;\r\n","import { TextField } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { PartialConfig } from '../../../store/actions/config/types';\r\nimport { HelpWith } from '../Help';\r\n\r\nexport interface INumberMenuItemProps {\r\n    configName: string;\r\n    defaultValue: number;\r\n    helpWith: HelpWith;\r\n    name: string;\r\n    step: number;\r\n    onValidInput: (payload: PartialConfig) => void;\r\n    max?: number;\r\n    min?: number;\r\n    noDecimals?: boolean;\r\n}\r\nconst NumberMenuItem = React.memo(\r\n    (props: INumberMenuItemProps) => {\r\n        const [isValid, setIsValid] = useState(true);\r\n        const [value, setValue] = useState(props.defaultValue);\r\n        const [lastValidValue, setLastValidValue] = useState(\r\n            props.defaultValue,\r\n        );\r\n        useEffect(() => {\r\n            setValue(props.defaultValue);\r\n        }, [props.defaultValue, setValue]);\r\n\r\n        function onBlur() {\r\n            setValue(lastValidValue);\r\n            setIsValid(true);\r\n        }\r\n\r\n        function onChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n            const newValue = Number(event.target.value);\r\n            setValue(newValue);\r\n\r\n            const isAllowDecimalValid =\r\n                !props.noDecimals || Number.isInteger(newValue);\r\n\r\n            const newIsValid =\r\n                isAllowDecimalValid &&\r\n                !isNaN(newValue) &&\r\n                (!props.min || newValue >= props.min) &&\r\n                (!props.max || newValue <= props.max);\r\n\r\n            setIsValid(newIsValid);\r\n            if (newIsValid) {\r\n                setLastValidValue(newValue);\r\n                props.onValidInput({\r\n                    [props.configName]: newValue,\r\n                });\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div data-tip={true} data-for={HelpWith[props.helpWith]}>\r\n                <label>{props.name}</label>\r\n                <TextField\r\n                    className=\"textFieldInput\"\r\n                    id=\"standard-number\"\r\n                    value={value || 0}\r\n                    onChange={onChange}\r\n                    onBlur={onBlur}\r\n                    type=\"number\"\r\n                    error={!isValid}\r\n                    margin=\"normal\"\r\n                />\r\n            </div>\r\n        );\r\n    },\r\n    (previous, next) =>\r\n        previous.name === next.name &&\r\n        previous.defaultValue === next.defaultValue,\r\n);\r\nexport default NumberMenuItem;\r\n","import { Slider, Tooltip } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { UpdateConfigAction } from '../../../store/actions/config/types';\r\nimport { HelpWith } from '../Help';\r\n\r\nfunction ValueLabelComponent(props: any) {\r\n    const { children, open, value } = props;\r\n    const popperRef: any = React.useRef(null);\r\n\r\n    React.useEffect(() => {\r\n        if (popperRef.current) {\r\n            popperRef.current!.update();\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Tooltip\r\n            PopperProps={{\r\n                popperRef,\r\n            }}\r\n            open={open}\r\n            enterTouchDelay={0}\r\n            placement=\"top\"\r\n            title={value}\r\n        >\r\n            {children}\r\n        </Tooltip>\r\n    );\r\n}\r\n\r\nexport interface ISliderMenuItemProps {\r\n    name: string;\r\n    configName: string;\r\n    step: number;\r\n    min?: number;\r\n    max?: number;\r\n    onValidInput: UpdateConfigAction;\r\n    defaultValue: number;\r\n    helpWith: HelpWith;\r\n}\r\n\r\nconst SliderMenuItem = React.memo(\r\n    (props: ISliderMenuItemProps) => {\r\n        function onChange(ignore: object, value: number | number[]) {\r\n            props.onValidInput({\r\n                [props.configName]: value,\r\n            });\r\n        }\r\n\r\n        return (\r\n            <div data-tip={true} data-for={HelpWith[props.helpWith]}>\r\n                <label>{props.name}</label>\r\n                <Slider\r\n                    ValueLabelComponent={ValueLabelComponent}\r\n                    aria-label=\"custom thumb label\"\r\n                    defaultValue={props.defaultValue}\r\n                    value={props.defaultValue}\r\n                    onChange={onChange}\r\n                    min={props.min}\r\n                    max={props.max}\r\n                    step={props.step}\r\n                    className=\"slider\"\r\n                />\r\n            </div>\r\n        );\r\n    },\r\n    (previous, next) => {\r\n        return (\r\n            previous.name === next.name &&\r\n            previous.defaultValue === next.defaultValue\r\n        );\r\n    },\r\n);\r\nexport default SliderMenuItem;\r\n","import React from 'react';\r\nimport {\r\n    IAdvancedConfig,\r\n    UpdateConfigAction,\r\n} from '../../store/actions/config/types';\r\nimport { HelpWith } from './Help';\r\nimport CanvasMenuItem from './menuItems/CanvasMenuItem';\r\nimport CheckBoxMenuItem from './menuItems/CheckBoxMenuItem';\r\nimport DropDownMenuItem from './menuItems/DropDownMenuItem';\r\nimport NumberMenuItem from './menuItems/NumberMenuItem';\r\nimport SliderMenuItem from './menuItems/SliderMenuItem';\r\n\r\ninterface IAdvancedConfigProps {\r\n    window: Window;\r\n    advancedConfig: IAdvancedConfig;\r\n    updateModelConfig: UpdateConfigAction;\r\n    updateDetectionConfig: UpdateConfigAction;\r\n    updateAppConfig: UpdateConfigAction;\r\n    updateAdvancedConfig: UpdateConfigAction;\r\n}\r\n\r\nexport default function AdvancedConfig(props: IAdvancedConfigProps) {\r\n    return (\r\n        <>\r\n            <CheckBoxMenuItem\r\n                name={'Show Reflection'}\r\n                configName={'toggleReflection'}\r\n                helpWith={HelpWith.REFLECTION}\r\n                checked={props.advancedConfig.toggleReflection}\r\n                onInputChange={props.updateAdvancedConfig}\r\n            />\r\n\r\n            {props.advancedConfig.toggleReflection && (\r\n                <SliderMenuItem\r\n                    name={'Reflection Opacity'}\r\n                    configName={'reflectionOpacity'}\r\n                    step={0.05}\r\n                    defaultValue={props.advancedConfig.reflectionOpacity}\r\n                    onValidInput={props.updateAdvancedConfig}\r\n                    helpWith={HelpWith.REFLECTION_OPACITY}\r\n                    min={0.0}\r\n                    max={1.0}\r\n                />\r\n            )}\r\n            <CheckBoxMenuItem\r\n                name={'Toggle Camera Feed'}\r\n                configName={'toggleDebug'}\r\n                helpWith={HelpWith.DEBUG}\r\n                checked={props.advancedConfig.toggleDebug}\r\n                onInputChange={props.updateAdvancedConfig}\r\n            />\r\n            {props.advancedConfig.toggleDebug && (\r\n                <CanvasMenuItem\r\n                    name={'Camera'}\r\n                    helpWith={HelpWith.VIDEO_STREAM}\r\n                    videoIndex={0}\r\n                />\r\n            )}\r\n\r\n            <br />\r\n\r\n            <h3>Model Settings</h3>\r\n            <DropDownMenuItem\r\n                name={'Pose Model'}\r\n                configName={'architecture'}\r\n                onInputChange={props.updateModelConfig}\r\n                values={['MobileNetV1', 'ResNet50']}\r\n                defaultValue={props.advancedConfig.modelConfig.architecture}\r\n                helpWith={HelpWith.ARCHITECTURE}\r\n            />\r\n            <DropDownMenuItem\r\n                name={'Output Stride'}\r\n                configName={'outputStride'}\r\n                onInputChange={props.updateModelConfig}\r\n                values={\r\n                    props.advancedConfig.modelConfig.architecture ===\r\n                    'MobileNetV1'\r\n                        ? ['8', '16']\r\n                        : ['16', '32']\r\n                }\r\n                defaultValue={props.advancedConfig.modelConfig.outputStride.toString()}\r\n                helpWith={HelpWith.OUTPUT_STRIDE}\r\n            />\r\n            <DropDownMenuItem\r\n                name={'Resolution'}\r\n                configName={'inputResolution'}\r\n                onInputChange={props.updateModelConfig}\r\n                values={[\r\n                    '161',\r\n                    '193',\r\n                    '257',\r\n                    '289',\r\n                    '321',\r\n                    '353',\r\n                    '385',\r\n                    '417',\r\n                    '449',\r\n                    '481',\r\n                    '513',\r\n                    '801',\r\n                ]}\r\n                defaultValue={props.advancedConfig.modelConfig.inputResolution.toString()}\r\n                helpWith={HelpWith.RESOLUTION}\r\n            />\r\n            {props.advancedConfig.modelConfig.architecture ===\r\n                'MobileNetV1' && (\r\n                <DropDownMenuItem\r\n                    name={'Multiplier'}\r\n                    configName={'multiplier'}\r\n                    onInputChange={props.updateModelConfig}\r\n                    values={['0.5', '0.75', '1']}\r\n                    defaultValue={props.advancedConfig.modelConfig.multiplier.toString()}\r\n                    helpWith={HelpWith.MULTIPLIER}\r\n                />\r\n            )}\r\n\r\n            <br />\r\n\r\n            <h3>Detection Settings</h3>\r\n            <NumberMenuItem\r\n                name={'Detections'}\r\n                configName={'maxDetections'}\r\n                noDecimals={true}\r\n                step={1}\r\n                defaultValue={\r\n                    props.advancedConfig.detectionConfig.maxDetections\r\n                }\r\n                onValidInput={props.updateDetectionConfig}\r\n                helpWith={HelpWith.DETECTIONS}\r\n                min={1}\r\n            />\r\n\r\n            <SliderMenuItem\r\n                name={'Minimum Confidence'}\r\n                configName={'scoreThreshold'}\r\n                helpWith={HelpWith.MIN_SCORE}\r\n                step={0.01}\r\n                defaultValue={\r\n                    props.advancedConfig.detectionConfig.scoreThreshold\r\n                }\r\n                onValidInput={props.updateDetectionConfig}\r\n                min={0}\r\n                max={1}\r\n            />\r\n            <NumberMenuItem\r\n                name={'NMS Radius'}\r\n                configName={'nmsRadius'}\r\n                helpWith={HelpWith.NMS_RADIUS}\r\n                step={1}\r\n                defaultValue={props.advancedConfig.detectionConfig.nmsRadius}\r\n                onValidInput={props.updateDetectionConfig}\r\n                min={1}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { SketchPicker } from 'react-color';\r\nimport Popup from 'reactjs-popup';\r\nimport { PartialConfig } from '../../../store/actions/config/types';\r\n\r\ninterface IColorPopup {\r\n    showPopup: boolean;\r\n    color: string;\r\n    configName: string;\r\n    onInputChange: (payload: PartialConfig) => void;\r\n    close: () => void;\r\n}\r\n\r\nconst ColorPopup = (props: IColorPopup) => {\r\n    function handleChangeComplete(color: any) {\r\n        props.onInputChange({\r\n            [props.configName]: color.hex,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Popup\r\n            className=\"colorPicker\"\r\n            open={props.showPopup}\r\n            modal={true}\r\n            closeOnDocumentClick={false}\r\n        >\r\n            <>\r\n                <SketchPicker\r\n                    color={props.color}\r\n                    onChangeComplete={handleChangeComplete}\r\n                    disableAlpha={true}\r\n                />\r\n\r\n                <br />\r\n\r\n                <Button\r\n                    className=\"closeColorPicker\"\r\n                    variant=\"contained\"\r\n                    onClick={props.close}\r\n                >\r\n                    Close\r\n                </Button>\r\n            </>\r\n        </Popup>\r\n    );\r\n};\r\n\r\nexport default ColorPopup;\r\n","import { Button } from '@material-ui/core';\r\nimport convert from 'color-convert';\r\nimport React from 'react';\r\nimport { HelpWith } from '../Help';\r\nimport './ColorMenuItem.css';\r\n\r\nexport interface IColorMenuItemProps {\r\n    name: string;\r\n    configName: string;\r\n    onClick: () => void;\r\n    color: string;\r\n    helpWith: HelpWith;\r\n}\r\n\r\nconst ColorMenuItem = React.memo(\r\n    (props: IColorMenuItemProps) => {\r\n        function getTextColor(): string {\r\n            const [r, g, b] = convert.hex.rgb(props.color);\r\n            return (r + g + b) / 3 > 127 ? 'black' : 'white';\r\n        }\r\n\r\n        return (\r\n            <div data-tip={true} data-for={HelpWith[props.helpWith]}>\r\n                <Button\r\n                    style={{\r\n                        backgroundColor: props.color,\r\n                        color: props.color ? getTextColor() : 'white',\r\n                    }}\r\n                    value={props.color}\r\n                    variant=\"contained\"\r\n                    onClick={props.onClick}\r\n                    className=\"launchColorPicker\"\r\n                >\r\n                    Pick {props.name}\r\n                </Button>\r\n            </div>\r\n        );\r\n    },\r\n    (previous, next) => previous.color === next.color,\r\n);\r\n\r\nexport default ColorMenuItem;\r\n","import React from 'react';\r\nimport {\r\n    IAppConfig,\r\n    UpdateConfigAction,\r\n} from '../../store/actions/config/types';\r\nimport { HelpWith } from './Help';\r\nimport CheckBoxMenuItem from './menuItems/CheckBoxMenuItem';\r\nimport ColorMenuItem from './menuItems/ColorMenuItem';\r\nimport NumberMenuItem from './menuItems/NumberMenuItem';\r\nimport SliderMenuItem from './menuItems/SliderMenuItem';\r\n\r\ninterface IUserConfigProps {\r\n    appConfig: IAppConfig;\r\n    updateAppConfig: UpdateConfigAction;\r\n    window: Window;\r\n    colorPopupOnClick: () => void;\r\n}\r\n\r\nexport default function UserConfig(props: IUserConfigProps) {\r\n    return (\r\n        <>\r\n            <NumberMenuItem\r\n                name={'Frames Processed Per Second'}\r\n                configName={'fps'}\r\n                step={1}\r\n                defaultValue={props.appConfig.fps}\r\n                onValidInput={props.updateAppConfig}\r\n                helpWith={HelpWith.FPS}\r\n                min={1}\r\n            />\r\n\r\n            <SliderMenuItem\r\n                name={'X Sensitivity'}\r\n                configName={'xSensitivity'}\r\n                step={0.05}\r\n                defaultValue={props.appConfig.xSensitivity}\r\n                onValidInput={props.updateAppConfig}\r\n                helpWith={HelpWith.X_SENSITIVITY}\r\n                min={0}\r\n                max={1}\r\n            />\r\n            <SliderMenuItem\r\n                name={'Y Sensitivity'}\r\n                configName={'ySensitivity'}\r\n                step={0.05}\r\n                defaultValue={props.appConfig.ySensitivity}\r\n                onValidInput={props.updateAppConfig}\r\n                helpWith={HelpWith.Y_SENSITIVITY}\r\n                min={0}\r\n                max={1}\r\n            />\r\n\r\n            <br />\r\n\r\n            <ColorMenuItem\r\n                name={'Iris Colour'}\r\n                configName={'irisColor'}\r\n                onClick={props.colorPopupOnClick}\r\n                color={props.appConfig.irisColor}\r\n                helpWith={HelpWith.IRIS_COLOR}\r\n            />\r\n\r\n            <br />\r\n\r\n            <CheckBoxMenuItem\r\n                name={'Show Advanced Settings'}\r\n                configName={'toggleAdvanced'}\r\n                checked={props.appConfig.toggleAdvanced}\r\n                onInputChange={props.updateAppConfig}\r\n                warning={\r\n                    <>\r\n                        The advanced settings are intended for users with a\r\n                        technical understanding of the app and changing them\r\n                        from the defaults could lead to the app becoming\r\n                        unstable.\r\n                    </>\r\n                }\r\n            />\r\n        </>\r\n    );\r\n}\r\n","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport isEqual from 'react-fast-compare';\r\nimport { connect } from 'react-redux';\r\nimport { Action } from 'redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { configMenuConsts } from '../../AppConstants';\r\nimport {\r\n    resetConfigAction,\r\n    updateConfigAction,\r\n} from '../../store/actions/config/actions';\r\nimport {\r\n    ConfigSetAction,\r\n    IAdvancedConfig,\r\n    IAppConfig,\r\n    PartialConfig,\r\n    UpdateConfigAction,\r\n} from '../../store/actions/config/types';\r\nimport { IRootStore } from '../../store/reducers/rootReducer';\r\nimport {\r\n    getAdvancedConfig,\r\n    getAppConfig,\r\n} from '../../store/selectors/configSelectors';\r\nimport AdvancedConfigItems from './AdvancedConfigItems';\r\nimport './ConfigMenu.css';\r\nimport Help, { appHelp, HelpWith } from './Help';\r\nimport ColorPopup from './menuItems/ColorPopup';\r\nimport UserConfigItems from './UserConfigItems';\r\n\r\nexport interface IConfigMenuProps {\r\n    window: Window;\r\n}\r\n\r\ninterface IConfigMenuMapStateToProps {\r\n    appConfig: IAppConfig;\r\n    advancedConfig: IAdvancedConfig;\r\n}\r\n\r\ninterface IConfigMenuMapDispatchToProps {\r\n    updateAppConfig: UpdateConfigAction;\r\n    updateModelConfig: UpdateConfigAction;\r\n    updateDetectionConfig: UpdateConfigAction;\r\n    updateAdvancedConfig: UpdateConfigAction;\r\n    resetConfig: () => void;\r\n}\r\n\r\nexport type ConfigMenuProps = IConfigMenuProps &\r\n    IConfigMenuMapStateToProps &\r\n    IConfigMenuMapDispatchToProps;\r\n\r\ninterface IConfigMenuState {\r\n    leftPosition: string;\r\n    isUnderMouse: boolean;\r\n    showColorPopup: boolean;\r\n}\r\n\r\nexport class ConfigMenu extends React.Component<\r\n    ConfigMenuProps,\r\n    IConfigMenuState\r\n> {\r\n    private hideTimeout: number = 0;\r\n\r\n    constructor(props: ConfigMenuProps) {\r\n        super(props);\r\n        this.state = {\r\n            leftPosition: '0px',\r\n            isUnderMouse: false,\r\n            showColorPopup: false,\r\n        };\r\n        this.onMouseEnter = this.onMouseEnter.bind(this);\r\n        this.onMouseLeave = this.onMouseLeave.bind(this);\r\n        this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\r\n        this.toggleShowColorPopup = this.toggleShowColorPopup.bind(this);\r\n        this.props.window.addEventListener('mousemove', this.mouseMoveHandler);\r\n    }\r\n\r\n    mouseMoveHandler() {\r\n        this.setState({ leftPosition: '0px' });\r\n        this.props.window.document.body.style.cursor = 'default';\r\n        this.props.window.clearInterval(this.hideTimeout);\r\n\r\n        if (\r\n            !this.state.isUnderMouse &&\r\n            (!this.props.advancedConfig.toggleDebug ||\r\n                !this.props.appConfig.toggleAdvanced)\r\n        ) {\r\n            this.hideTimeout = this.props.window.setTimeout(() => {\r\n                this.setState({\r\n                    leftPosition: configMenuConsts.leftPos,\r\n                });\r\n                this.props.window.document.body.style.cursor = 'none';\r\n            }, configMenuConsts.visibleTimer);\r\n        }\r\n    }\r\n\r\n    onMouseEnter() {\r\n        this.props.window.clearInterval(this.hideTimeout);\r\n        this.setState({ isUnderMouse: true });\r\n    }\r\n\r\n    onMouseLeave() {\r\n        this.setState({ isUnderMouse: false });\r\n    }\r\n\r\n    shouldComponentUpdate(\r\n        nextProps: ConfigMenuProps,\r\n        nextState: IConfigMenuState,\r\n    ) {\r\n        return (\r\n            this.state.showColorPopup !== nextState.showColorPopup ||\r\n            nextState.leftPosition !== this.state.leftPosition ||\r\n            !isEqual(nextProps, this.props)\r\n        );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.window.clearInterval(this.hideTimeout);\r\n        this.props.window.removeEventListener(\r\n            'mousemove',\r\n            this.mouseMoveHandler,\r\n        );\r\n    }\r\n\r\n    toggleShowColorPopup() {\r\n        this.setState({\r\n            showColorPopup: !this.state.showColorPopup,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const showAppHelp = () => {\r\n            this.props.updateAppConfig({ showHelp: true });\r\n        };\r\n        return (\r\n            <>\r\n                <div\r\n                    style={{\r\n                        left: this.state.leftPosition,\r\n                        width: configMenuConsts.width,\r\n                    }}\r\n                    className={'ConfigMenu'}\r\n                    onMouseEnter={this.onMouseEnter}\r\n                    onMouseLeave={this.onMouseLeave}\r\n                >\r\n                    <h1>Settings</h1>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        className=\"icon\"\r\n                        onClick={showAppHelp}\r\n                    >\r\n                        Help\r\n                    </Button>\r\n\r\n                    <UserConfigItems\r\n                        {...this.props}\r\n                        colorPopupOnClick={this.toggleShowColorPopup}\r\n                    />\r\n\r\n                    {this.props.appConfig.toggleAdvanced && (\r\n                        <AdvancedConfigItems {...this.props} />\r\n                    )}\r\n\r\n                    <br />\r\n\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        className=\"reset\"\r\n                        onClick={this.props.resetConfig}\r\n                    >\r\n                        RESET TO DEFAULTS\r\n                    </Button>\r\n\r\n                    <br />\r\n                    <br />\r\n                </div>\r\n\r\n                {Object.values(HelpWith).map((type, key: number) => {\r\n                    const showHelp =\r\n                        this.props.appConfig.toggleAdvanced ||\r\n                        appHelp.includes(type);\r\n                    return (\r\n                        showHelp && (\r\n                            <Help\r\n                                key={key}\r\n                                problemWith={HelpWith[type] as HelpWith}\r\n                            />\r\n                        )\r\n                    );\r\n                })}\r\n\r\n                {this.state.showColorPopup && (\r\n                    <ColorPopup\r\n                        showPopup={this.state.showColorPopup}\r\n                        color={this.props.appConfig.irisColor}\r\n                        configName={'irisColor'}\r\n                        close={this.toggleShowColorPopup}\r\n                        onInputChange={this.props.updateAppConfig}\r\n                    />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state: IRootStore): IConfigMenuMapStateToProps => ({\r\n    appConfig: getAppConfig(state),\r\n    advancedConfig: getAdvancedConfig(state),\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: ThunkDispatch<IRootStore, void, Action>,\r\n    ownProps: IConfigMenuProps,\r\n) => ({\r\n    updateAppConfig: (payload: PartialConfig) =>\r\n        dispatch(\r\n            updateConfigAction(ConfigSetAction.APP, payload, ownProps.window),\r\n        ),\r\n    updateAdvancedConfig: (payload: PartialConfig) =>\r\n        dispatch(\r\n            updateConfigAction(\r\n                ConfigSetAction.ADVANCED,\r\n                payload,\r\n                ownProps.window,\r\n            ),\r\n        ),\r\n    updateModelConfig: (payload: PartialConfig) =>\r\n        dispatch(\r\n            updateConfigAction(ConfigSetAction.MODEL, payload, ownProps.window),\r\n        ),\r\n    updateDetectionConfig: (payload: PartialConfig) =>\r\n        dispatch(\r\n            updateConfigAction(\r\n                ConfigSetAction.DETECTION,\r\n                payload,\r\n                ownProps.window,\r\n            ),\r\n        ),\r\n    resetConfig: () => dispatch(resetConfigAction(ConfigSetAction.RESET)),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(ConfigMenu);\r\n","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Popup from 'reactjs-popup';\r\nimport { Action } from 'redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { updateConfigAction } from '../../store/actions/config/actions';\r\nimport { ConfigSetAction } from '../../store/actions/config/types';\r\nimport { IRootStore } from '../../store/reducers/rootReducer';\r\nimport { getShowHelp } from '../../store/selectors/configSelectors';\r\nimport { IConfigMenuProps } from '../configMenu/ConfigMenu';\r\nimport './HelpPopup.css';\r\n\r\ninterface IHelpPopupProps {\r\n    window: Window;\r\n}\r\n\r\ninterface IHelpPopupMapStateToProps {\r\n    showHelp: boolean;\r\n}\r\n\r\ninterface IHelpPopupMapDispatchToProps {\r\n    setShowHelpToFalse: () => void;\r\n}\r\n\r\ntype HelpPopupProps = IHelpPopupProps &\r\n    IHelpPopupMapStateToProps &\r\n    IHelpPopupMapDispatchToProps;\r\n\r\nfunction HelpPopup(props: HelpPopupProps) {\r\n    return (\r\n        <Popup\r\n            open={props.showHelp}\r\n            modal={true}\r\n            onClose={props.setShowHelpToFalse}\r\n            closeOnDocumentClick={false}\r\n            closeOnEscape={false}\r\n        >\r\n            {close => (\r\n                <>\r\n                    <h1>Looking At You</h1>\r\n                    This is an app designed to track users using a webcam. The\r\n                    eyes will follow you around and react differently depending\r\n                    on what they see. Hover over any of the menu items for more\r\n                    information. Click the Help button to see this message\r\n                    again.\r\n                    <br />\r\n                    <br />\r\n                    <a\r\n                        href=\"https://blog.scottlogic.com/2019/08/19/LookingAtYou.html\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                    >\r\n                        Developed by interns at Scott Logic\r\n                    </a>\r\n                    <br />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        className=\"accept\"\r\n                        onClick={close}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </>\r\n            )}\r\n        </Popup>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: IRootStore): IHelpPopupMapStateToProps => ({\r\n    showHelp: getShowHelp(state),\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: ThunkDispatch<IRootStore, void, Action>,\r\n    ownProps: IConfigMenuProps,\r\n) => ({\r\n    setShowHelpToFalse: () =>\r\n        dispatch(\r\n            updateConfigAction(\r\n                ConfigSetAction.APP,\r\n                { showHelp: false },\r\n                ownProps.window,\r\n            ),\r\n        ),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(HelpPopup);\r\n","import {\r\n    ConfigAction,\r\n    ConfigSetAction,\r\n    IAdvancedConfig,\r\n    IAppConfig,\r\n    IConfigState,\r\n    IDetectionConfig,\r\n    IModelConfig,\r\n    ISetAdvancedConfigAction,\r\n    ISetAppConfigAction,\r\n    ISetDetectionConfigAction,\r\n    ISetModelConfigAction,\r\n} from '../actions/config/types';\r\n\r\nexport const initalModelConfig: IModelConfig = {\r\n    architecture: 'MobileNetV1',\r\n    outputStride: 16,\r\n    inputResolution: 289,\r\n    multiplier: 0.75,\r\n};\r\n\r\nexport const initialDetectionConfig: IDetectionConfig = {\r\n    flipHorizontal: false,\r\n    maxDetections: 4,\r\n    scoreThreshold: 0.6,\r\n    nmsRadius: 20,\r\n};\r\n\r\nexport const initialAppConfig: IAppConfig = {\r\n    xSensitivity: 0.8,\r\n    ySensitivity: 0.6,\r\n    fps: 5,\r\n    irisColor: '#55acee', // must be hex value, as this is passed to colour picker input\r\n    toggleAdvanced: false,\r\n    showHelp: true,\r\n};\r\n\r\nexport const initialAdvancedConfig: IAdvancedConfig = {\r\n    toggleDebug: false,\r\n    modelConfig: initalModelConfig,\r\n    detectionConfig: initialDetectionConfig,\r\n    toggleReflection: true,\r\n    reflectionOpacity: 0.2,\r\n};\r\n\r\nexport const initialConfig: IConfigState = {\r\n    advancedConfig: initialAdvancedConfig,\r\n    appConfig: initialAppConfig,\r\n};\r\n\r\nconst configActionMapping = {\r\n    [ConfigSetAction.APP]: setAppConfig,\r\n    [ConfigSetAction.ADVANCED]: setAdvancedConfig,\r\n    [ConfigSetAction.MODEL]: setModelConfig,\r\n    [ConfigSetAction.DETECTION]: setDetectionConfig,\r\n    [ConfigSetAction.RESET]: resetConfig,\r\n};\r\n\r\nconst configStore = (\r\n    state: IConfigState = initialConfig,\r\n    action: ConfigAction,\r\n): IConfigState => {\r\n    return configActionMapping.hasOwnProperty(action.type)\r\n        ? configActionMapping[action.type](state, action)\r\n        : state;\r\n};\r\n\r\nfunction setAppConfig(state: IConfigState, action: ConfigAction): IConfigState {\r\n    return {\r\n        ...state,\r\n        appConfig: {\r\n            ...state.appConfig,\r\n            ...(action as ISetAppConfigAction).payload,\r\n        },\r\n    };\r\n}\r\n\r\nfunction setAdvancedConfig(\r\n    state: IConfigState,\r\n    action: ConfigAction,\r\n): IConfigState {\r\n    return {\r\n        ...state,\r\n        advancedConfig: {\r\n            ...state.advancedConfig,\r\n            ...(action as ISetAdvancedConfigAction).payload,\r\n        },\r\n    };\r\n}\r\n\r\nfunction setModelConfig(\r\n    state: IConfigState,\r\n    action: ConfigAction,\r\n): IConfigState {\r\n    return {\r\n        ...state,\r\n        advancedConfig: {\r\n            ...state.advancedConfig,\r\n            modelConfig: {\r\n                ...state.advancedConfig.modelConfig,\r\n                ...(action as ISetModelConfigAction).payload,\r\n            },\r\n        },\r\n    };\r\n}\r\n\r\nfunction setDetectionConfig(\r\n    state: IConfigState,\r\n    action: ConfigAction,\r\n): IConfigState {\r\n    return {\r\n        ...state,\r\n        advancedConfig: {\r\n            ...state.advancedConfig,\r\n            detectionConfig: {\r\n                ...state.advancedConfig.detectionConfig,\r\n                ...(action as ISetDetectionConfigAction).payload,\r\n            },\r\n        },\r\n    };\r\n}\r\n\r\nfunction resetConfig(): IConfigState {\r\n    return {\r\n        ...initialConfig,\r\n        appConfig: { ...initialConfig.appConfig, showHelp: false },\r\n    };\r\n}\r\n\r\nexport default configStore;\r\n","import React from 'react';\r\nimport { eyeCoefficients } from '../../../AppConstants';\r\nimport '../Eye.css';\r\n\r\nexport interface IEyelidsProps {\r\n    transitionStyle: { transition: string };\r\n    cornerShape: {\r\n        leftTop: number;\r\n        rightTop: number;\r\n        leftBottom: number;\r\n        rightBottom: number;\r\n    };\r\n    bezier: {\r\n        controlOffset: number;\r\n        scaledXcontrolOffset: number;\r\n        scaledYcontrolOffset: number;\r\n    };\r\n    openCoefficient: number;\r\n}\r\n\r\nexport const Eyelids = React.memo((props: IEyelidsProps) => {\r\n    const bezier = props.bezier;\r\n    const scleraRadius = eyeCoefficients.sclera;\r\n    const eyeHeight = scleraRadius * props.openCoefficient;\r\n\r\n    function renderEyelid(isTop: boolean) {\r\n        const filter = `url(#shadow${isTop ? 'Top' : 'Bottom'})`;\r\n        const sign = isTop ? -1 : 1;\r\n        const shape = isTop\r\n            ? {\r\n                  right: props.cornerShape.rightTop,\r\n                  left: props.cornerShape.leftTop,\r\n              }\r\n            : {\r\n                  right: props.cornerShape.rightBottom,\r\n                  left: props.cornerShape.leftBottom,\r\n              };\r\n\r\n        return (\r\n            <path\r\n                style={props.transitionStyle}\r\n                filter={filter}\r\n                d={`M -1 0 \r\n                    V ${sign}\r\n                    H 1\r\n                    V 0\r\n                    H ${scleraRadius}\r\n                    C ${scleraRadius -\r\n                        bezier.scaledXcontrolOffset * shape.right}\r\n                        ${sign * bezier.scaledYcontrolOffset}\r\n                        ${bezier.controlOffset}\r\n                        ${sign * eyeHeight}\r\n                        0\r\n                        ${sign * eyeHeight}\r\n                    S ${-scleraRadius +\r\n                        bezier.scaledXcontrolOffset * shape.left}\r\n                        ${sign * bezier.scaledYcontrolOffset}\r\n                        ${-scleraRadius}\r\n                        0\r\n                    Z`}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {renderEyelid(true)}\r\n            {renderEyelid(false)}\r\n        </>\r\n    );\r\n});\r\n","import React from 'react';\r\nimport tinycolor from 'tinycolor2';\r\nimport { eyeCoefficients } from '../../../../AppConstants';\r\nimport { IAnimationFrame } from '../../../../utils/pose/animations';\r\nimport { IInnerPartProps } from '../../types';\r\n\r\nexport interface IIrisProps extends IInnerPartProps {\r\n    animation: IAnimationFrame;\r\n    innerPath: string;\r\n}\r\n\r\nconst Iris = React.memo((props: IIrisProps) => {\r\n    return (\r\n        <g {...props.groupProps}>\r\n            <circle\r\n                className={'iris'}\r\n                r={eyeCoefficients.iris}\r\n                fill={'url(#irisGradient)'}\r\n            />\r\n            <path\r\n                className=\"irisStyling\"\r\n                d={props.innerPath}\r\n                fill={tinycolor(props.animation.irisColor)\r\n                    .darken(10)\r\n                    .toHexString()}\r\n            />\r\n        </g>\r\n    );\r\n});\r\nexport default Iris;\r\n","import React from 'react';\r\nimport { eyeCoefficients } from '../../../../AppConstants';\r\nimport { IAnimationFrame } from '../../../../utils/pose/animations';\r\n\r\ninterface IPupilProps {\r\n    useGradient: boolean;\r\n    transitionStyle: React.CSSProperties;\r\n    animation: IAnimationFrame;\r\n}\r\n\r\nexport function Pupil(props: IPupilProps) {\r\n    const pupilRadius = eyeCoefficients.pupil;\r\n    return (\r\n        <circle\r\n            className={'pupil'}\r\n            r={pupilRadius}\r\n            fill={props.useGradient ? 'url(#pupilGradient)' : 'black'}\r\n            style={props.transitionStyle}\r\n            transform={`scale(${props.animation.dilation})`}\r\n        />\r\n    );\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { eyeCoefficients } from '../../../../AppConstants';\r\nimport { IAnimationFrame } from '../../../../utils/pose/animations';\r\nimport { IInnerPartProps } from '../../types';\r\ninterface IReflectionProps extends IInnerPartProps {\r\n    animation: IAnimationFrame;\r\n    reflection?: ImageData;\r\n}\r\nexport function Reflection(props: IReflectionProps) {\r\n    const canvasRef: React.RefObject<HTMLCanvasElement> = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (canvasRef && props.reflection) {\r\n            const canvas = canvasRef.current;\r\n            if (canvas) {\r\n                const ctx = canvas.getContext('2d');\r\n                if (ctx) {\r\n                    ctx.putImageData(props.reflection, 0, 0);\r\n                }\r\n            }\r\n        }\r\n    }, [props.reflection]);\r\n\r\n    let size = 256;\r\n    if (props.reflection) {\r\n        size = props.reflection.width;\r\n    }\r\n    let scale = (0.95 * (eyeCoefficients.pupil * 2)) / size;\r\n    if (props.animation.dilation) {\r\n        scale *= props.animation.dilation;\r\n    }\r\n\r\n    return (\r\n        <g {...props.groupProps}>\r\n            <foreignObject\r\n                width={size}\r\n                height={size}\r\n                x={-size / 2}\r\n                y={-size / 2}\r\n                style={props.transitionStyle}\r\n                transform={`scale(${scale})`}\r\n            >\r\n                {props.reflection && (\r\n                    <canvas ref={canvasRef} width={size} height={size} />\r\n                )}\r\n            </foreignObject>\r\n        </g>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { eyeCoefficients } from '../../../../AppConstants';\r\n\r\nexport function Shines() {\r\n    const pupilRadius = eyeCoefficients.pupil;\r\n    const irisRadius = eyeCoefficients.iris;\r\n\r\n    return (\r\n        <g>\r\n            <ellipse\r\n                className={'innerShine'}\r\n                rx={pupilRadius * 0.375}\r\n                ry={pupilRadius * 0.75}\r\n                fill={'url(#shineGradient)'}\r\n                transform={`skewX(30) translate(${pupilRadius},${-pupilRadius *\r\n                    0.5})`}\r\n            />\r\n            <ellipse\r\n                className={'outerShine'}\r\n                rx={pupilRadius * 0.5}\r\n                ry={pupilRadius}\r\n                fill={'url(#shineGradient)'}\r\n                transform={`skewX(30) translate(${irisRadius},${-irisRadius *\r\n                    0.55})`}\r\n            />\r\n        </g>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { eyeCoefficients } from '../../../AppConstants';\r\n\r\nexport const Sclera = React.memo(() => {\r\n    return (\r\n        <circle\r\n            className={'sclera'}\r\n            r={eyeCoefficients.sclera}\r\n            fill={'url(#scleraGradient)'}\r\n        />\r\n    );\r\n});\r\n","import React from 'react';\r\nimport { EyeSide } from '../../AppConstants';\r\nimport { IAnimationFrame } from '../../utils/pose/animations';\r\nimport './Eye.css';\r\nimport { Eyelids } from './eyeParts/Eyelids';\r\nimport Iris from './eyeParts/innerParts/Iris';\r\nimport { Pupil } from './eyeParts/innerParts/Pupil';\r\nimport { Reflection } from './eyeParts/innerParts/Reflection';\r\nimport { Shines } from './eyeParts/innerParts/Shines';\r\nimport { Sclera } from './eyeParts/Sclera';\r\nimport { getCornerShape } from './utils/EyeShapeUtils';\r\n\r\nexport interface IEyeProps {\r\n    animation: IAnimationFrame;\r\n    class: EyeSide;\r\n    innerPath: string;\r\n    skewTransform: string;\r\n    bezier: {\r\n        controlOffset: number;\r\n        scaledXcontrolOffset: number;\r\n        scaledYcontrolOffset: number;\r\n    };\r\n    openCoefficient: number;\r\n    reflectionOpacity: number;\r\n    reflection?: ImageData;\r\n}\r\n\r\nexport default function Eye(props: IEyeProps) {\r\n    const cornerShape = getCornerShape(props.class);\r\n    const eyelidTransitionStyle = {\r\n        transition: `d ${props.animation.duration}ms`,\r\n    };\r\n    const transitionStyle = {\r\n        transition: `transform ${props.animation.duration}ms`,\r\n    };\r\n\r\n    const innerProps = {\r\n        className: 'inner',\r\n        style: transitionStyle,\r\n        transform: `${props.skewTransform} translate(${\r\n            props.animation.target!.x\r\n        },${props.animation.target!.y})`,\r\n    };\r\n\r\n    return (\r\n        <div className={props.class}>\r\n            <svg className=\"layer\" viewBox={'-1, -1, 2, 2'}>\r\n                <Sclera />\r\n                <Iris\r\n                    transitionStyle={transitionStyle}\r\n                    animation={props.animation}\r\n                    innerPath={props.innerPath}\r\n                    groupProps={innerProps}\r\n                />\r\n            </svg>\r\n\r\n            <svg className=\"layer\" viewBox=\"-1, -1, 2, 2\">\r\n                <Reflection\r\n                    transitionStyle={transitionStyle}\r\n                    groupProps={innerProps}\r\n                    animation={props.animation}\r\n                    reflection={props.reflection}\r\n                />\r\n            </svg>\r\n\r\n            <svg className=\"layer\" viewBox={'-1, -1, 2, 2'}>\r\n                <g {...innerProps}>\r\n                    <Pupil\r\n                        animation={props.animation}\r\n                        transitionStyle={transitionStyle}\r\n                        useGradient={props.reflection !== undefined}\r\n                    />\r\n                    <Shines />\r\n                </g>\r\n                <Eyelids\r\n                    {...props}\r\n                    transitionStyle={eyelidTransitionStyle}\r\n                    cornerShape={cornerShape}\r\n                />\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n","import { eyeCoefficients, EyeSide } from '../../../AppConstants';\r\n\r\nexport function getCornerShape(side: EyeSide) {\r\n    const innerTopCoefficient = 1.45;\r\n    const innerBottomCoefficient = 1.1;\r\n    const outerTopCoefficient = 0.7;\r\n    const outerBottomCoefficient = 0.5;\r\n    return side === EyeSide.RIGHT\r\n        ? {\r\n              leftTop: innerTopCoefficient,\r\n              rightTop: outerTopCoefficient,\r\n              leftBottom: innerBottomCoefficient,\r\n              rightBottom: outerBottomCoefficient,\r\n          }\r\n        : {\r\n              leftTop: outerTopCoefficient,\r\n              rightTop: innerTopCoefficient,\r\n              leftBottom: outerBottomCoefficient,\r\n              rightBottom: innerBottomCoefficient,\r\n          };\r\n}\r\n\r\nexport function getBezier(openCoefficient: number) {\r\n    const curveConstant = 0.55228474983; // (4/3)tan(pi/8)\r\n    const controlOffset = eyeCoefficients.sclera * curveConstant;\r\n    const scaledYcontrolOffset = controlOffset * openCoefficient;\r\n    const scaledXcontrolOffset = controlOffset - scaledYcontrolOffset;\r\n    return { controlOffset, scaledXcontrolOffset, scaledYcontrolOffset };\r\n}\r\n","import React from 'react';\r\nimport tinycolor from 'tinycolor2';\r\nimport './Gradients.css';\r\n\r\nexport interface IGradientsProps {\r\n    irisColor: string;\r\n    reflectionOpacity: number;\r\n}\r\n\r\nconst lighterFactor = 30;\r\nconst darkerFactor = 13;\r\n\r\nexport const Gradients = React.memo(\r\n    (props: IGradientsProps) => {\r\n        const darkIrisColor = tinycolor(props.irisColor)\r\n            .darken(darkerFactor)\r\n            .toHexString();\r\n        const lightIrisColor = tinycolor(props.irisColor)\r\n            .brighten(lighterFactor)\r\n            .toHexString();\r\n\r\n        return (\r\n            <svg className=\"collapse\">\r\n                <defs>\r\n                    <linearGradient\r\n                        id=\"lgrad\"\r\n                        x1=\"0%\"\r\n                        y1=\"50%\"\r\n                        x2=\"100%\"\r\n                        y2=\"50%\"\r\n                    >\r\n                        <stop offset=\"35%\" stopColor={props.irisColor} />\r\n                        <stop offset=\"70%\" stopColor={lightIrisColor} />\r\n                        <stop offset=\"100%\" stopColor={darkIrisColor} />\r\n                    </linearGradient>\r\n\r\n                    <radialGradient id=\"scleraGradient\" cx=\"50%\" cy=\"50%\">\r\n                        <stop offset=\"0%\" stopColor=\"white\" />\r\n                        <stop offset=\"20%\" stopColor=\"#f7f7f7\" />\r\n                        <stop offset=\"40%\" stopColor=\"#ebebeb\" />\r\n                        <stop offset=\"60%\" stopColor=\"#e0e0e0\" />\r\n                        <stop offset=\"80%\" stopColor=\"#b3b3b3\" />\r\n                        <stop offset=\"100%\" stopColor=\"#333333\" />\r\n                    </radialGradient>\r\n\r\n                    <radialGradient\r\n                        id=\"irisGradient\"\r\n                        cx=\"50%\"\r\n                        cy=\"50%\"\r\n                        href=\"#lgrad\"\r\n                    />\r\n\r\n                    <radialGradient id=\"shineGradient\">\r\n                        <stop offset=\"0%\" stopColor=\"white\" stopOpacity={1} />\r\n                        <stop\r\n                            offset=\"20%\"\r\n                            stopColor=\"white\"\r\n                            stopOpacity={0.7}\r\n                        />\r\n                        <stop\r\n                            offset=\"40%\"\r\n                            stopColor=\"white\"\r\n                            stopOpacity={0.05}\r\n                        />\r\n                    </radialGradient>\r\n\r\n                    <radialGradient id=\"pupilGradient\">\r\n                        <stop\r\n                            offset=\"0%\"\r\n                            stopColor=\"black\"\r\n                            stopOpacity={1 - props.reflectionOpacity}\r\n                        />\r\n                        <stop\r\n                            offset=\"75%\"\r\n                            stopColor=\"black\"\r\n                            stopOpacity={1 - 0.75 * props.reflectionOpacity}\r\n                        />\r\n                        <stop offset=\"100%\" stopColor=\"black\" stopOpacity={1} />\r\n                    </radialGradient>\r\n                </defs>\r\n            </svg>\r\n        );\r\n    },\r\n    (previous, next) =>\r\n        previous.irisColor === next.irisColor &&\r\n        previous.reflectionOpacity === next.reflectionOpacity,\r\n);\r\n","import React from 'react';\r\nimport { eyelidPosition } from '../../AppConstants';\r\n\r\nexport interface IShadowsProps {\r\n    openCoefficient: number;\r\n}\r\n\r\nexport const Shadows = React.memo(\r\n    (props: IShadowsProps) => {\r\n        return (\r\n            <svg className=\"collapse\">\r\n                <defs>\r\n                    <filter id=\"shadowTop\">\r\n                        <feDropShadow\r\n                            dx=\"0\"\r\n                            dy={\r\n                                (0.05 * props.openCoefficient) /\r\n                                eyelidPosition.OPEN\r\n                            }\r\n                            stdDeviation={\r\n                                (0.05 * props.openCoefficient) /\r\n                                eyelidPosition.OPEN\r\n                            }\r\n                            floodColor=\"#000000\"\r\n                            floodOpacity={0.8}\r\n                        />\r\n                    </filter>\r\n                    <filter id=\"shadowBottom\">\r\n                        <feDropShadow\r\n                            dx=\"0\"\r\n                            dy={\r\n                                (-0.0125 * props.openCoefficient) /\r\n                                eyelidPosition.OPEN\r\n                            }\r\n                            stdDeviation={\r\n                                (0.0375 * props.openCoefficient) /\r\n                                eyelidPosition.OPEN\r\n                            }\r\n                            floodColor=\"#000000\"\r\n                            floodOpacity={0.8}\r\n                        />\r\n                    </filter>\r\n                </defs>\r\n            </svg>\r\n        );\r\n    },\r\n    (previous, next) => previous.openCoefficient === next.openCoefficient,\r\n);\r\n","import { lightConsts } from '../../../AppConstants';\r\nimport { ICoords } from '../../../utils/types';\r\n\r\nexport function analyseLight(image: ImageData): number {\r\n    if (!image) {\r\n        return 0;\r\n    }\r\n\r\n    const data = image.data;\r\n\r\n    let colorSum = 0;\r\n    for (let i = 0; i < data.length; i += 4) {\r\n        colorSum += data[i] + data[i + 1] + data[i + 2];\r\n    }\r\n\r\n    const brightness = Math.floor(colorSum / (image.width * image.height * 3));\r\n    return Math.min(brightness, lightConsts.maxBrightness);\r\n}\r\n\r\nexport function confineToCircle(target: ICoords, radius: number = 1) {\r\n    const hypotenuse = Math.hypot(target.x, target.y);\r\n    const scale = hypotenuse > radius ? radius / hypotenuse : 1;\r\n\r\n    return { x: scale * target.x, y: scale * target.y };\r\n}\r\n","import { fisheyeConsts } from '../../../AppConstants';\r\nimport { normalise } from '../../../utils/objectTracking/calculateFocus';\r\nimport { ICoords } from '../../../utils/types';\r\n\r\nexport function getReflection(target: ICoords, image: HTMLVideoElement) {\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx) {\r\n        return new ImageData(image.width, image.height);\r\n    }\r\n    const crop = getCrop(target, image);\r\n    ctx.scale(-1, 1);\r\n    const diameter = image.width * 0.4;\r\n    ctx.drawImage(\r\n        image,\r\n        crop.sourceX,\r\n        crop.sourceY,\r\n        crop.sourceWidth,\r\n        crop.sourceHeight,\r\n        0,\r\n        0,\r\n        -diameter,\r\n        diameter,\r\n    );\r\n    const imgData = ctx.getImageData(0, 0, diameter, diameter);\r\n    const result: Uint8ClampedArray = fisheye(imgData.data, diameter, diameter);\r\n    imgData.data.set(result);\r\n    return imgData;\r\n}\r\n\r\nfunction fisheye(\r\n    pixels: Uint8ClampedArray,\r\n    width: number,\r\n    height: number,\r\n): Uint8ClampedArray {\r\n    const result = new Uint8ClampedArray(pixels.length);\r\n\r\n    for (let currRow = 0; currRow < height; currRow++) {\r\n        const normalisedY = normalise(currRow, height);\r\n\r\n        for (let currColumn = 0; currColumn < width; currColumn++) {\r\n            const normalisedX = normalise(currColumn, width);\r\n            const normalisedRadius = Math.hypot(normalisedX, normalisedY);\r\n\r\n            // For any point in the circle\r\n            if (0 <= normalisedRadius && normalisedRadius <= 1) {\r\n                // The closer to the center it is, the larger the value\r\n                let radiusScaling = Math.sqrt(\r\n                    1 - Math.pow(normalisedRadius, 2),\r\n                );\r\n                // Exponential curve between 0 and 1, ie pixels closer to the center have a much lower scaling value\r\n                radiusScaling = (normalisedRadius + (1 - radiusScaling)) / 2;\r\n\r\n                // Adjusts the intensity of the fisheye\r\n                radiusScaling =\r\n                    radiusScaling * fisheyeConsts.intensity +\r\n                    normalisedRadius * (1 - fisheyeConsts.intensity);\r\n\r\n                const theta = Math.atan2(normalisedY, normalisedX); // angle to point from center of circle\r\n                const xScale = radiusScaling * Math.cos(theta);\r\n                const yScale = radiusScaling * Math.sin(theta);\r\n                const newX = Math.floor(normalise(xScale, 1, -1, width, 0));\r\n                const newY = Math.floor(normalise(yScale, 1, -1, height, 0));\r\n                const srcpos = newY * width + newX; // New pixel position in array\r\n                if (srcpos >= 0 && srcpos < width * height) {\r\n                    for (let i = 0; i < 4; i++) {\r\n                        result[\r\n                            4 * Math.floor(currRow * width + currColumn) + i\r\n                        ] = pixels[srcpos * 4 + i];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction getCrop(target: ICoords, image: HTMLVideoElement) {\r\n    const boxSize = image.width * 0.4;\r\n\r\n    let sourceX = normalise(target.x, 1, -1, image.width, 0) - boxSize / 2;\r\n    sourceX = Math.min(sourceX, image.width - boxSize);\r\n    sourceX = Math.max(sourceX, 0);\r\n\r\n    let sourceY = normalise(target.y, 1, -1, image.height, 0) - boxSize / 2;\r\n    sourceY = Math.min(sourceY, image.height - boxSize);\r\n    sourceY = Math.max(sourceY, 0);\r\n\r\n    return {\r\n        sourceX,\r\n        sourceY,\r\n        sourceWidth: boxSize,\r\n        sourceHeight: boxSize,\r\n    };\r\n}\r\n","import { minIrisScale } from '../../../AppConstants';\r\nimport { normalise } from '../../../utils/objectTracking/calculateFocus';\r\nimport { ICoords } from '../../../utils/types';\r\n\r\nexport function irisMatrixTransform(position: ICoords) {\r\n    const radius = Math.hypot(position.x, position.y);\r\n    if (radius === 0) {\r\n        return '';\r\n    }\r\n\r\n    const scale =\r\n        minIrisScale + normalise(1 - radius, 1, 0, 1 - minIrisScale, 0);\r\n\r\n    const xDivR = position.x / radius;\r\n    const yDivR = position.y / radius;\r\n    const xDivR2 = Math.pow(xDivR, 2);\r\n    const yDivR2 = Math.pow(yDivR, 2);\r\n\r\n    const xScale = scale * xDivR2 + yDivR2;\r\n    const yScale = yDivR2 * scale + xDivR2;\r\n    const skew = (1 - scale) * xDivR * yDivR;\r\n    return `matrix(${xScale},${skew},${skew},${yScale},0,0)`;\r\n}\r\n\r\nexport function generateInnerPath(radius: number, sectors: number) {\r\n    const innerRadius = radius * 0.1;\r\n    const outerRadius = radius * 0.9;\r\n    const radianStep = (2 * Math.PI) / sectors;\r\n    const innerOffset = -radianStep / 2;\r\n\r\n    let currInnerPath = `M ${innerRadius *\r\n        Math.cos(radianStep * (sectors - 1))} ${innerRadius *\r\n        Math.sin(radianStep * (sectors - 1))} `;\r\n    for (let i = 0; i < sectors; i++) {\r\n        const currRadianStep = radianStep * i;\r\n        const lineOut = `L ${outerRadius *\r\n            Math.cos(currRadianStep + innerOffset)} ${outerRadius *\r\n            Math.sin(currRadianStep + innerOffset)} `;\r\n\r\n        const lineIn = `L ${innerRadius *\r\n            Math.cos(currRadianStep)} ${innerRadius *\r\n            Math.sin(currRadianStep)} `;\r\n\r\n        currInnerPath += lineOut;\r\n        currInnerPath += lineIn;\r\n    }\r\n    return currInnerPath;\r\n}\r\n","import React, { MutableRefObject, useEffect, useRef } from 'react';\r\nimport isEqual from 'react-fast-compare';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport {\r\n    blinkConsts,\r\n    eyeCoefficients,\r\n    eyelidPosition,\r\n    eyeSensitivityScale,\r\n    EyeSide,\r\n    minIrisScale,\r\n    numInnerEyeSectors,\r\n    transitionTimes,\r\n} from '../../AppConstants';\r\nimport { IDetection } from '../../models/objectDetection';\r\nimport { IAdvancedConfig, IAppConfig } from '../../store/actions/config/types';\r\nimport { setAnimation } from '../../store/actions/detections/actions';\r\nimport { ISetAnimationAction } from '../../store/actions/detections/types';\r\nimport { IRootStore } from '../../store/reducers/rootReducer';\r\nimport {\r\n    getAdvancedConfig,\r\n    getAppConfig,\r\n} from '../../store/selectors/configSelectors';\r\nimport {\r\n    getAnimationExists,\r\n    getAnimations,\r\n    getSelections,\r\n    getTargets,\r\n} from '../../store/selectors/detectionSelectors';\r\nimport { getImageData, getVideo } from '../../store/selectors/videoSelectors';\r\nimport { Animation, blink, keyToPose, peek } from '../../utils/pose/animations';\r\nimport { ICoords } from '../../utils/types';\r\nimport Eye from './Eye';\r\nimport './Eye.css';\r\nimport { Gradients } from './Gradients';\r\nimport { Shadows } from './Shadows';\r\nimport { getBezier } from './utils/EyeShapeUtils';\r\nimport { confineToCircle } from './utils/MovementUtils';\r\nimport { getReflection } from './utils/ReflectionUtils';\r\nimport { generateInnerPath, irisMatrixTransform } from './utils/VisualUtils';\r\n\r\nexport interface IEyeControllerProps {\r\n    environment: Window;\r\n    dilation: number;\r\n    openCoefficient: number;\r\n    detected: boolean;\r\n    isSleeping: boolean;\r\n    target?: ICoords;\r\n    appConfig?: IAppConfig;\r\n}\r\n\r\ninterface IEyeControllerMapStateToProps {\r\n    appConfig: IAppConfig;\r\n    advancedConfig: IAdvancedConfig;\r\n    target: ICoords;\r\n    animation: Animation;\r\n    animationExists: boolean;\r\n    image?: HTMLVideoElement;\r\n    selection?: IDetection;\r\n    imageData?: ImageData;\r\n}\r\n\r\ninterface IEyeControllerMapDispatchToState {\r\n    updateAnimation: (animation: Animation) => ISetAnimationAction;\r\n}\r\n\r\nexport type EyeControllerProps = IEyeControllerProps &\r\n    IEyeControllerMapStateToProps &\r\n    IEyeControllerMapDispatchToState;\r\n\r\nexport const EyeController = React.memo(\r\n    (props: EyeControllerProps) => {\r\n        const { environment, updateAnimation, animation } = props;\r\n        const innerPath = useRef('');\r\n\r\n        useEffect(() => {\r\n            innerPath.current = generateInnerPath(\r\n                eyeCoefficients.iris,\r\n                numInnerEyeSectors,\r\n            );\r\n        }, []);\r\n\r\n        const reflectionRef = useRef<ImageData | undefined>(undefined);\r\n\r\n        const position =\r\n            props.animationExists && animation[0].target\r\n                ? confineToCircle(animation[0].target)\r\n                : confineToCircle({\r\n                      x: props.target.x * props.appConfig.xSensitivity,\r\n                      y:\r\n                          props.target.y *\r\n                          props.appConfig.ySensitivity *\r\n                          eyeSensitivityScale,\r\n                  });\r\n\r\n        const scale =\r\n            (eyeCoefficients.sclera - eyeCoefficients.iris * minIrisScale) /\r\n            minIrisScale;\r\n        const target = {\r\n            x: -position.x * scale,\r\n            y: position.y * scale,\r\n        };\r\n\r\n        const frame = {\r\n            openCoefficient: props.isSleeping\r\n                ? eyelidPosition.CLOSED\r\n                : props.openCoefficient,\r\n            dilation: props.dilation,\r\n            irisColor: props.appConfig.irisColor,\r\n            duration: 1000 / props.appConfig.fps,\r\n            ...animation[0],\r\n            target,\r\n        };\r\n\r\n        const detectedRef = useRef(props.detected);\r\n\r\n        useEffect(() => {\r\n            detectedRef.current = props.detected;\r\n        }, [props.detected]);\r\n\r\n        useEffect(() => {\r\n            return props.isSleeping\r\n                ? peekHandler(environment, updateAnimation)\r\n                : blinkHandler(environment, detectedRef, updateAnimation);\r\n        }, [props.isSleeping, environment, updateAnimation, detectedRef]);\r\n\r\n        useEffect(() => {\r\n            if (props.animationExists) {\r\n                const timer = environment.setTimeout(() => {\r\n                    const myAnimation = [...animation];\r\n                    myAnimation!.shift();\r\n                    updateAnimation(myAnimation);\r\n                }, animation[0].duration);\r\n                return () => environment.clearTimeout(timer);\r\n            }\r\n        }, [animation, updateAnimation, environment, props.animationExists]);\r\n\r\n        useEffect(() => {\r\n            if (\r\n                props.advancedConfig.toggleReflection &&\r\n                props.image &&\r\n                props.imageData\r\n            ) {\r\n                reflectionRef.current = getReflection(\r\n                    props.target,\r\n                    props.image,\r\n                );\r\n            } else {\r\n                reflectionRef.current = undefined;\r\n            }\r\n        }, [\r\n            props.target,\r\n            props.image,\r\n            props.advancedConfig.toggleReflection,\r\n            props.imageData,\r\n        ]);\r\n\r\n        useEffect(() => {\r\n            const handleKeyUpEventHandler = (event: KeyboardEvent) => {\r\n                return handleKeyUp(event, updateAnimation);\r\n            };\r\n\r\n            environment.addEventListener('keyup', handleKeyUpEventHandler);\r\n            return () =>\r\n                environment.removeEventListener(\r\n                    'keyup',\r\n                    handleKeyUpEventHandler,\r\n                );\r\n        }, [environment, updateAnimation]);\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                {[EyeSide.RIGHT, EyeSide.LEFT].map((eye, index) => {\r\n                    const openCoefficient =\r\n                        typeof frame.openCoefficient === 'number'\r\n                            ? frame.openCoefficient\r\n                            : frame.openCoefficient[eye];\r\n\r\n                    const bezier = getBezier(openCoefficient);\r\n\r\n                    return (\r\n                        <Eye\r\n                            {...props}\r\n                            class={eye}\r\n                            key={index}\r\n                            animation={frame}\r\n                            bezier={bezier}\r\n                            reflection={reflectionRef.current}\r\n                            innerPath={innerPath.current}\r\n                            skewTransform={irisMatrixTransform(position)}\r\n                            reflectionOpacity={\r\n                                props.advancedConfig.reflectionOpacity\r\n                            }\r\n                            openCoefficient={openCoefficient}\r\n                        />\r\n                    );\r\n                })}\r\n                <Gradients\r\n                    irisColor={frame.irisColor}\r\n                    reflectionOpacity={props.advancedConfig.reflectionOpacity}\r\n                />\r\n                <Shadows openCoefficient={props.openCoefficient} />\r\n            </div>\r\n        );\r\n    },\r\n    (previous, next) =>\r\n        isEqual(previous.animation, next.animation) &&\r\n        previous.dilation === next.dilation &&\r\n        previous.openCoefficient === next.openCoefficient &&\r\n        previous.target.x === next.target.x &&\r\n        previous.target.y === next.target.y &&\r\n        previous.isSleeping === next.isSleeping,\r\n);\r\n\r\nfunction blinkHandler(\r\n    environment: Window,\r\n    detectedRef: MutableRefObject<boolean>,\r\n    updateAnimation: (animation: Animation) => ISetAnimationAction,\r\n) {\r\n    let blinkInterval = environment.setInterval(() => {\r\n        const blinkFrequency = detectedRef.current\r\n            ? blinkConsts.focusedFrequency\r\n            : blinkConsts.frequency;\r\n\r\n        const blinkProbability =\r\n            blinkFrequency / (1000 / transitionTimes.blink);\r\n\r\n        if (Math.random() < blinkProbability) {\r\n            updateAnimation(blink());\r\n        }\r\n    }, transitionTimes.blink);\r\n\r\n    return () => {\r\n        environment.clearInterval(blinkInterval);\r\n        blinkInterval = 0;\r\n    };\r\n}\r\n\r\nfunction peekHandler(\r\n    environment: Window,\r\n    updateAnimation: (animation: Animation) => ISetAnimationAction,\r\n) {\r\n    let peekInterval = environment.setInterval(() => {\r\n        const peekProbability =\r\n            blinkConsts.peekFrequency / (1000 / transitionTimes.peek);\r\n\r\n        if (Math.random() < peekProbability) {\r\n            const random = Math.random();\r\n            updateAnimation(peek(random > 0.1, random < 0.9));\r\n        }\r\n    }, transitionTimes.peek);\r\n\r\n    return () => {\r\n        environment.clearInterval(peekInterval);\r\n        peekInterval = 0;\r\n    };\r\n}\r\n\r\nfunction handleKeyUp(\r\n    event: KeyboardEvent,\r\n    updateAnimation: (animation: Animation) => ISetAnimationAction,\r\n) {\r\n    const keyAnimation = keyToPose[event.key];\r\n    if (keyAnimation) {\r\n        updateAnimation(keyAnimation());\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: IRootStore): IEyeControllerMapStateToProps => ({\r\n    appConfig: getAppConfig(state),\r\n    advancedConfig: getAdvancedConfig(state),\r\n    target: getTargets(state),\r\n    image: getVideo(state),\r\n    selection: getSelections(state),\r\n    animation: getAnimations(state),\r\n    animationExists: getAnimationExists(state),\r\n    imageData: getImageData(state),\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: Dispatch,\r\n): IEyeControllerMapDispatchToState => ({\r\n    updateAnimation: (animation: Animation) =>\r\n        dispatch(setAnimation(animation)),\r\n});\r\n\r\nconst mergeProps = (\r\n    stateProps: IEyeControllerMapStateToProps,\r\n    dispatchProps: IEyeControllerMapDispatchToState,\r\n    ownProps: IEyeControllerProps,\r\n): EyeControllerProps => {\r\n    const props: EyeControllerProps = {\r\n        ...ownProps,\r\n        ...stateProps,\r\n        ...dispatchProps,\r\n    };\r\n    props.appConfig = ownProps.appConfig || stateProps.appConfig;\r\n    props.target = ownProps.target || stateProps.target;\r\n    return props;\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n    mergeProps,\r\n)(EyeController);\r\n","import { throttle } from 'lodash';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { eyelidPosition, pupilSizes } from '../../AppConstants';\r\nimport { initialAppConfig } from '../../store/reducers/configReducer';\r\nimport { normalise } from '../../utils/objectTracking/calculateFocus';\r\nimport EyeController from '../eye/EyeController';\r\n\r\ninterface IManualMovementHandlerProps {\r\n    width: number;\r\n    height: number;\r\n    environment: Window;\r\n}\r\n\r\nexport function ManualMovementHandler(props: IManualMovementHandlerProps) {\r\n    const [target, setTarget] = useState({ x: 0, y: 0 });\r\n    useEffect(() => {\r\n        const mouseMoveHandler = (ev: MouseEvent) => {\r\n            const x =\r\n                -normalise(ev.clientX, props.width) *\r\n                initialAppConfig.xSensitivity;\r\n            const y =\r\n                normalise(ev.clientY, props.height) *\r\n                initialAppConfig.ySensitivity;\r\n            setTarget({ x, y });\r\n        };\r\n\r\n        const throttledMouseMoveHandler = throttle(\r\n            mouseMoveHandler,\r\n            initialAppConfig.fps,\r\n        );\r\n\r\n        props.environment.addEventListener(\r\n            'mousemove',\r\n            throttledMouseMoveHandler,\r\n        );\r\n\r\n        props.environment.document.body.style.cursor = 'default';\r\n\r\n        return () => {\r\n            props.environment.removeEventListener(\r\n                'mousemove',\r\n                throttledMouseMoveHandler,\r\n            );\r\n        };\r\n    }, [props.environment, props.width, props.height]);\r\n\r\n    return (\r\n        <EyeController\r\n            {...props}\r\n            dilation={pupilSizes.neutral}\r\n            openCoefficient={eyelidPosition.OPEN}\r\n            detected={false}\r\n            isSleeping={false}\r\n            target={target} // overwrite redux store\r\n            appConfig={initialAppConfig} // overwrite redux store (for constant fps and sensitivity)\r\n        />\r\n    );\r\n}\r\n","export const userInteraction = {\r\n    texts: [\r\n        { phrase: 'HELLO', frequency: 1 },\r\n        { phrase: 'TRY WAVING', frequency: 1 },\r\n        { phrase: \"I DON'T HAVE HANDS\", frequency: 0.5 },\r\n        { phrase: 'PLAY WITH ME', frequency: 0.7 },\r\n        { phrase: \"DON'T LEAVE ME\", frequency: 0.5 },\r\n        { phrase: 'NOTHING TO SEE HERE', frequency: 0.6 },\r\n        { phrase: 'I HAVE NO MOUTH AND I MUST SCREAM', frequency: 0.03 },\r\n        { phrase: 'PUT YOUR HANDS UP IN THE AIR', frequency: 0.8 },\r\n        { phrase: 'DAB FOR ME', frequency: 0.2 },\r\n        { phrase: \"NEVER SHOULD'VE COME HERE\", frequency: 0.15 },\r\n        {\r\n            phrase: 'LET ME GUESS, SOMEONE STOLE YOUR SWEET ROLL?',\r\n            frequency: 0.05,\r\n        },\r\n        { phrase: \"I'M POWERED BY MATH.RANDOM\", frequency: 0.25 },\r\n        { phrase: 'DO A T-POSE', frequency: 0.35 },\r\n        { phrase: \"I'M LOOKING AT YOU\", frequency: 0.6 },\r\n        { phrase: 'I SEE YOU', frequency: 0.4 },\r\n        { phrase: 'HOW ARE YOU?', frequency: 0.4 },\r\n        { phrase: 'HELP ME', frequency: 0.1 },\r\n        { phrase: 'HELP!', frequency: 0.1 },\r\n        { phrase: 'PLEASED TO MEET YOU', frequency: 0.4 },\r\n        { phrase: 'WORKING HARD OR HARDLY WORKING?', frequency: 0.35 },\r\n        { phrase: 'WHAT DAY IS IT?', frequency: 0.15 },\r\n        { phrase: 'WHERE AM I?', frequency: 0.2 },\r\n        {\r\n            phrase: 'BRING ME A BISCUIT AND SEE WHAT WILL HAPPEN',\r\n            frequency: 0.4,\r\n        },\r\n        { phrase: 'REMINDER: HAVE LUNCH', frequency: 0.1 },\r\n        {\r\n            phrase: \"YOU WOULDN'T READ THAT IN A BOOK, WOULD YOU?\",\r\n            frequency: 0.1,\r\n        },\r\n        { phrase: 'MAY THE FORCE BE WITH YOU', frequency: 0.05 },\r\n        {\r\n            phrase: 'EVERY MAN HAS EYES, NOT EVERY MAN REALLY SEES',\r\n            frequency: 0.05,\r\n        },\r\n        { phrase: \"YOU'VE GOT A FRIEND IN ME\", frequency: 0.05 },\r\n        {\r\n            phrase: 'DESPITE THE CONSTANT NEGATIVE PRESS COVFEFE',\r\n            frequency: 0.2,\r\n        },\r\n        { phrase: 'MY DADS ARE THE BEST', frequency: 0.05 },\r\n        { phrase: 'SENSATIONAL', frequency: 0.3 },\r\n        { phrase: 'THIS IS MADNESS! THIS IS SANTHOSH!!', frequency: 0.1 },\r\n        { phrase: 'TRY MEOWING', frequency: 0.25 },\r\n        {\r\n            phrase:\r\n                \"LIFE MOVES PRETTY FAST. IF YOU DON'T STOP AND LOOK AROUND ONCE IN A WHILE, YOU COULD MISS IT\",\r\n            frequency: 0.1,\r\n        },\r\n        {\r\n            phrase:\r\n                \"IT'S NOT WHO I AM UNDERNEATH, BUT WHAT I DO THAT DEFINES ME\",\r\n            frequency: 0.1,\r\n        },\r\n        { phrase: 'YOU HAD ME AT \"HELLO\"', frequency: 0.05 },\r\n        {\r\n            phrase:\r\n                'WHEN YOU LOOK AT THE DARK SIDE, CAREFUL YOU MUST BE. FOR THE DARK SIDE LOOKS BACK',\r\n            frequency: 0.1,\r\n        },\r\n    ],\r\n    delay: 13000,\r\n    textDuration: 3000,\r\n};\r\n\r\nexport const fadeInText = {\r\n    delay: 1000,\r\n    transitionTime: 2500,\r\n    fontSize: '5em',\r\n    defaultTextLength: 20,\r\n};\r\n","import React from 'react';\r\nimport { fadeInText } from './FadeInConstants';\r\nimport './fadeInText.css';\r\n\r\ninterface IFadeInTextProps {\r\n    text: string;\r\n    show: boolean;\r\n}\r\n\r\nconst FadeInText = React.memo((props: IFadeInTextProps) => {\r\n    const style = {\r\n        opacity: props.show ? 1 : 0,\r\n        transition: `opacity ${fadeInText.transitionTime}ms`,\r\n        transitionDelay: `${fadeInText.delay}ms`,\r\n        transitionTimingFunction: 'ease',\r\n    };\r\n\r\n    function getFontSize(text: string) {\r\n        if (text.length > fadeInText.defaultTextLength) {\r\n            const scaledFontSize =\r\n                (parseInt(fadeInText.fontSize, 10) *\r\n                    fadeInText.defaultTextLength) /\r\n                text.length;\r\n            return { fontSize: scaledFontSize + 'em' };\r\n        }\r\n        return { fontSize: fadeInText.fontSize };\r\n    }\r\n\r\n    return (\r\n        <div className=\"revealText\" style={getFontSize(props.text)}>\r\n            <span style={style}>{props.text}</span>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default FadeInText;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport {\r\n    chanceOfIdleEyesMovement,\r\n    eyelidPosition,\r\n    intervals,\r\n    lightConsts,\r\n    pupilSizes,\r\n} from '../../AppConstants';\r\nimport { IDetection } from '../../models/objectDetection';\r\nimport { setAnimation } from '../../store/actions/detections/actions';\r\nimport { ISetAnimationAction } from '../../store/actions/detections/types';\r\nimport { IRootStore } from '../../store/reducers/rootReducer';\r\nimport { getFPS } from '../../store/selectors/configSelectors';\r\nimport {\r\n    getAnimationExists,\r\n    getAnimations,\r\n    getSelections,\r\n    getTargets,\r\n} from '../../store/selectors/detectionSelectors';\r\nimport { getImageData } from '../../store/selectors/videoSelectors';\r\nimport { normalise } from '../../utils/objectTracking/calculateFocus';\r\nimport { Animation, naturalMovement } from '../../utils/pose/animations';\r\nimport { ICoords } from '../../utils/types';\r\nimport EyeController from '../eye/EyeController';\r\nimport { analyseLight } from '../eye/utils/MovementUtils';\r\nimport { userInteraction } from '../fadeInText/FadeInConstants';\r\nimport FadeInText from '../fadeInText/FadeInText';\r\n\r\ninterface IMovementProps {\r\n    width: number;\r\n    height: number;\r\n    environment: Window;\r\n}\r\n\r\ninterface IStateProps {\r\n    fps: number;\r\n    selection?: IDetection;\r\n    target: ICoords;\r\n    image: ImageData;\r\n    animation: Animation;\r\n    animationExists: boolean;\r\n}\r\n\r\ninterface IDispatchProps {\r\n    updateAnimation: (animation: Animation) => ISetAnimationAction;\r\n}\r\n\r\ninterface IMovementState {\r\n    showText: boolean;\r\n    text: string;\r\n    isSleeping: boolean;\r\n    dilationCoefficient: number;\r\n    openCoefficient: number;\r\n    personDetected: boolean;\r\n}\r\n\r\nexport type MovementHandlerProps = IMovementProps &\r\n    IDispatchProps &\r\n    IStateProps;\r\n\r\nexport class MovementHandler extends React.Component<\r\n    MovementHandlerProps,\r\n    IMovementState\r\n> {\r\n    private movementInterval: number;\r\n    private sleepTimeout: number;\r\n    private textTimeout: number;\r\n    private hasMovedLeft: boolean;\r\n\r\n    constructor(props: MovementHandlerProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            showText: false,\r\n            text: '',\r\n            isSleeping: false,\r\n            dilationCoefficient: pupilSizes.neutral,\r\n            openCoefficient: eyelidPosition.OPEN,\r\n            personDetected: false,\r\n        };\r\n\r\n        this.movementInterval = 0;\r\n        this.sleepTimeout = 0;\r\n        this.textTimeout = 0;\r\n        this.hasMovedLeft = false;\r\n\r\n        this.animateEye = this.animateEye.bind(this);\r\n        this.sleep = this.sleep.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.movementInterval = this.props.environment.setInterval(\r\n            this.animateEye,\r\n            1000 / this.props.fps,\r\n        );\r\n    }\r\n\r\n    shouldComponentUpdate(\r\n        nextProps: MovementHandlerProps,\r\n        nextState: IMovementState,\r\n    ) {\r\n        return (\r\n            this.props.height !== nextProps.height ||\r\n            this.props.width !== nextProps.width ||\r\n            this.state.isSleeping !== nextState.isSleeping ||\r\n            (!this.props.animationExists &&\r\n                (this.props.target !== nextProps.target ||\r\n                    this.props.selection !== nextProps.selection))\r\n        );\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: MovementHandlerProps) {\r\n        if (nextProps.animationExists && this.textTimeout) {\r\n            this.props.environment.clearTimeout(this.textTimeout);\r\n            this.textTimeout = 0;\r\n        }\r\n    }\r\n\r\n    animateEye() {\r\n        this.checkSelection();\r\n        this.calculateBrightness();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.environment.clearInterval(this.movementInterval);\r\n    }\r\n\r\n    calculateBrightness() {\r\n        if (this.props.image) {\r\n            const brightness = analyseLight(this.props.image);\r\n\r\n            const dilationCoefficient = normalise(\r\n                lightConsts.maxBrightness - brightness,\r\n                lightConsts.maxBrightness,\r\n                0,\r\n                lightConsts.dilationMultipler + lightConsts.dilationOffset,\r\n                lightConsts.dilationOffset,\r\n            );\r\n            const openCoefficient =\r\n                brightness >= lightConsts.maxBrightness\r\n                    ? eyelidPosition.CLOSED\r\n                    : eyelidPosition.OPEN;\r\n            this.setState({ dilationCoefficient, openCoefficient });\r\n        }\r\n    }\r\n\r\n    checkSelection() {\r\n        const isSquint = this.state.openCoefficient === eyelidPosition.SQUINT;\r\n        if (isSquint && Math.random() < 0.1) {\r\n            this.setState({ openCoefficient: eyelidPosition.OPEN });\r\n        }\r\n\r\n        if (this.props.selection) {\r\n            this.setNewTarget();\r\n            this.startTextTimer();\r\n        } else {\r\n            this.setNoTarget();\r\n\r\n            if (!this.props.animationExists && !this.state.isSleeping) {\r\n                if (Math.random() < chanceOfIdleEyesMovement) {\r\n                    this.hasMovedLeft = !this.hasMovedLeft;\r\n                    this.props.updateAnimation(\r\n                        naturalMovement(this.hasMovedLeft),\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setNewTarget() {\r\n        this.wake();\r\n        this.props.environment.clearTimeout(this.sleepTimeout);\r\n        if (!this.state.personDetected) {\r\n            this.setState({\r\n                personDetected: true,\r\n                dilationCoefficient: pupilSizes.dilated,\r\n            });\r\n        }\r\n    }\r\n\r\n    setNoTarget() {\r\n        if (this.state.personDetected) {\r\n            this.setState({\r\n                personDetected: false,\r\n                openCoefficient: eyelidPosition.SQUINT,\r\n            });\r\n            this.sleepTimeout = this.props.environment.setTimeout(\r\n                this.sleep,\r\n                intervals.sleep,\r\n            );\r\n        }\r\n        this.props.environment.clearTimeout(this.textTimeout);\r\n        this.textTimeout = 0;\r\n    }\r\n\r\n    sleep() {\r\n        this.setState({ isSleeping: true });\r\n    }\r\n\r\n    wake() {\r\n        this.setState({ isSleeping: false });\r\n    }\r\n\r\n    startTextTimer() {\r\n        if (this.textTimeout > 0) {\r\n            return;\r\n        }\r\n\r\n        this.textTimeout = this.props.environment.setTimeout(() => {\r\n            const totalFrequency = userInteraction.texts\r\n                .map(text => text.frequency)\r\n                .reduce((x, y) => x + y);\r\n\r\n            let random = Math.random() * totalFrequency;\r\n            let i = 0;\r\n\r\n            while (random >= 0 && i < userInteraction.texts.length - 1) {\r\n                random -= userInteraction.texts[i].frequency;\r\n                i++;\r\n            }\r\n\r\n            const phrase = userInteraction.texts[i - 1].phrase;\r\n\r\n            this.setState({\r\n                showText: true,\r\n                text: phrase,\r\n            });\r\n\r\n            this.props.environment.setTimeout(() => {\r\n                this.setState({ showText: false });\r\n                this.textTimeout = 0;\r\n            }, userInteraction.textDuration);\r\n        }, userInteraction.delay);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"movementHandler\">\r\n                <EyeController\r\n                    dilation={this.state.dilationCoefficient}\r\n                    detected={this.state.personDetected}\r\n                    openCoefficient={this.state.openCoefficient}\r\n                    isSleeping={this.state.isSleeping}\r\n                    {...this.props}\r\n                />\r\n                <FadeInText text={this.state.text} show={this.state.showText} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: IRootStore) => ({\r\n    fps: getFPS(state),\r\n    selection: getSelections(state),\r\n    target: getTargets(state),\r\n    image: getImageData(state),\r\n    animation: getAnimations(state),\r\n    animationExists: getAnimationExists(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): IDispatchProps => ({\r\n    updateAnimation: (animation: Animation) =>\r\n        dispatch(setAnimation(animation)),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(MovementHandler);\r\n","import { Button } from '@material-ui/core';\r\nimport React, { Fragment } from 'react';\r\nimport Popup from 'reactjs-popup';\r\n\r\nexport default function NoWebcamPopup() {\r\n    return (\r\n        <Popup\r\n            open={true}\r\n            modal={true}\r\n            closeOnDocumentClick={false}\r\n            closeOnEscape={false}\r\n        >\r\n            {close => (\r\n                <Fragment>\r\n                    <h1>Looking At You</h1>\r\n                    This is an app designed to track users using a webcam. The\r\n                    eyes will follow you around and react differently depending\r\n                    on what they see. Basic webcamless functionality is\r\n                    available (try moving your mouse after you close this\r\n                    window!) but for the full experience, please connect a\r\n                    webcam.\r\n                    <br />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        className=\"accept\"\r\n                        color=\"primary\"\r\n                        onClick={close}\r\n                    >\r\n                        Close\r\n                    </Button>\r\n                </Fragment>\r\n            )}\r\n        </Popup>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { setVideoAction } from '../../store/actions/video/actions';\r\nimport { IVideo } from '../../store/actions/video/types';\r\nimport { IRootStore } from '../../store/reducers/rootReducer';\r\nimport { getStreamForDevice } from '../../store/selectors/videoSelectors';\r\n\r\ninterface IDispatchProps {\r\n    setVideo: (payload: HTMLVideoElement) => void;\r\n}\r\n\r\nexport type VideoProps = IVideo & IDispatchProps;\r\n\r\nexport function Video(props: VideoProps) {\r\n    function getVideo(element: HTMLVideoElement | null) {\r\n        if (element && props.stream) {\r\n            element.srcObject = props.stream;\r\n            props.setVideo(element);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <video\r\n            className={'hidden'}\r\n            autoPlay={true}\r\n            height={props.height}\r\n            width={props.width}\r\n            ref={element => getVideo(element)}\r\n        />\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state: IRootStore) => getStreamForDevice(state);\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n    setVideo: (payload: HTMLVideoElement) => dispatch(setVideoAction(payload)),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(Video);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Action } from 'redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { setStream } from '../../store/actions/video/actions';\r\nimport { IRootStore } from '../../store/reducers/rootReducer';\r\nimport { getWebcamAvailable } from '../../store/selectors/videoSelectors';\r\nimport Video from './Video';\r\n\r\ninterface IVideoHandlerStateToProps {\r\n    webcamAvailable: boolean;\r\n}\r\n\r\ninterface IVideoHandlerDispatchProps {\r\n    configureStream: (mediaDevices: MediaDevices) => Promise<void>;\r\n}\r\n\r\ninterface IVideoHandlerProps {\r\n    mediaDevices: MediaDevices | null;\r\n}\r\n\r\nexport type VideoHandlerProps = IVideoHandlerProps &\r\n    IVideoHandlerStateToProps &\r\n    IVideoHandlerDispatchProps;\r\n\r\nexport const VideoHandler = React.memo((props: VideoHandlerProps) => {\r\n    const { mediaDevices, configureStream } = { ...props };\r\n\r\n    useEffect(() => {\r\n        if (mediaDevices) {\r\n            configureStream(mediaDevices);\r\n            mediaDevices.ondevicechange = () => {\r\n                if (mediaDevices) {\r\n                    configureStream(mediaDevices);\r\n                }\r\n            };\r\n        }\r\n    }, [mediaDevices, configureStream]);\r\n\r\n    return (\r\n        <div className=\"webcam-feed\">{props.webcamAvailable && <Video />}</div>\r\n    );\r\n});\r\n\r\nconst mapStateToProps = (state: IRootStore) => {\r\n    return {\r\n        webcamAvailable: getWebcamAvailable(state),\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: ThunkDispatch<IRootStore, void, Action>,\r\n): IVideoHandlerDispatchProps => ({\r\n    configureStream: (mediaDevices: MediaDevices) =>\r\n        dispatch(setStream(mediaDevices)),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(VideoHandler);\r\n","import { PoseNet } from '@tensorflow-models/posenet';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Action } from 'redux';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport './App.css';\r\nimport ConfigMenu from './components/configMenu/ConfigMenu';\r\nimport HelpPopup from './components/helpPopup/HelpPopup';\r\nimport { ManualMovementHandler } from './components/intelligentMovement/ManualMovementHandler';\r\nimport MovementHandler from './components/intelligentMovement/MovementHandler';\r\nimport NoWebcamPopup from './components/noWebcamPopup/NoWebcamPopup';\r\nimport VideoHandler from './components/video/VideoHandler';\r\nimport eyeImage from './img/eye.png';\r\nimport { loadModel } from './store/actions/detections/actions';\r\nimport { IRootStore } from './store/reducers/rootReducer';\r\nimport { getWebcamAvailable } from './store/selectors/videoSelectors';\r\n\r\ninterface IAppState {\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\ninterface IAppProps {\r\n    environment: Window;\r\n    mediaDevices: MediaDevices | null;\r\n}\r\n\r\ninterface IAppMapStateToProps {\r\n    model: PoseNet | null;\r\n    webcamAvailable: boolean;\r\n}\r\n\r\ninterface IAppMapDispatchToProps {\r\n    loadModel: () => void;\r\n}\r\n\r\ntype AppProps = IAppProps & IAppMapStateToProps & IAppMapDispatchToProps;\r\n\r\nexport class App extends React.Component<AppProps, IAppState> {\r\n    constructor(props: AppProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            width: this.props.environment.innerWidth,\r\n            height: this.props.environment.innerHeight,\r\n        };\r\n\r\n        this.updateDimensions = this.updateDimensions.bind(this);\r\n        this.setDoShowPopup = this.setDoShowPopup.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.environment.addEventListener(\r\n            'resize',\r\n            this.updateDimensions,\r\n        );\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.webcamAvailable && !this.props.model) {\r\n            this.props.loadModel();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.environment.removeEventListener(\r\n            'resize',\r\n            this.updateDimensions,\r\n        );\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps: AppProps, nextState: IAppState) {\r\n        return (\r\n            this.props.webcamAvailable !== nextProps.webcamAvailable ||\r\n            this.props.model !== nextProps.model ||\r\n            this.state.height !== nextState.height ||\r\n            this.state.width !== nextState.width\r\n        );\r\n    }\r\n\r\n    updateDimensions() {\r\n        this.setState({\r\n            height: this.props.environment.innerHeight,\r\n            width: this.props.environment.innerWidth,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <VideoHandler {...this.props} />\r\n\r\n                {!this.props.webcamAvailable && (\r\n                    <>\r\n                        <NoWebcamPopup />\r\n                        <ManualMovementHandler\r\n                            {...this.state}\r\n                            {...this.props}\r\n                        />\r\n                    </>\r\n                )}\r\n\r\n                {this.props.webcamAvailable && !this.props.model && (\r\n                    <div className=\"spinner\">\r\n                        <div className=\"bounce1\">\r\n                            <img src={eyeImage} alt=\"eye\" />\r\n                        </div>\r\n                        <div className=\"bounce2\">\r\n                            <img src={eyeImage} alt=\"eye\" />\r\n                        </div>\r\n                        <div className=\"bounce3\">\r\n                            <img src={eyeImage} alt=\"eye\" />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {this.props.webcamAvailable && this.props.model && (\r\n                    <>\r\n                        <HelpPopup window={this.props.environment} />\r\n                        <MovementHandler {...this.state} {...this.props} />\r\n                        <ConfigMenu window={this.props.environment.window} />\r\n                    </>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n    private setDoShowPopup() {\r\n        this.props.environment.localStorage.setItem('dontShowPopup', 'true');\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: IRootStore): IAppMapStateToProps => ({\r\n    model: state.detectionStore.model,\r\n    webcamAvailable: getWebcamAvailable(state),\r\n});\r\n\r\nconst mapDispatchToProps = (\r\n    dispatch: ThunkDispatch<IRootStore, void, Action>,\r\n    ownProps: IAppProps,\r\n) => ({\r\n    loadModel: () => dispatch(loadModel(ownProps.environment)),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.1/8 is considered localhost for IPv4.\r\n        window.location.hostname.match(\r\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n        ),\r\n);\r\n\r\ninterface Config {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n            window.location.href,\r\n        );\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null &&\r\n                    contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.',\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import { eyelidPosition, targetingConsts } from '../../AppConstants';\r\nimport {\r\n    DetectionActionType,\r\n    IDetectionState,\r\n    ISetAnimationAction,\r\n    ISetDetectionsAction,\r\n    ISetIntervalAction,\r\n    ISetModelAction,\r\n    ISetOpenAction,\r\n    ISwapSelectionAction,\r\n    SET_ANIMATION,\r\n    SET_DETECTIONS,\r\n    SET_INTERVAL,\r\n    SET_MODEL,\r\n    SET_OPEN,\r\n    SWAP_SELECTION,\r\n    TOGGLE_ANIMATION_COOLDOWN,\r\n} from '../actions/detections/types';\r\n\r\nexport const initialState: IDetectionState = {\r\n    model: null,\r\n    detections: [],\r\n    eyesOpenCoefficient: eyelidPosition.OPEN,\r\n    detectionInterval: 0,\r\n    animation: [],\r\n    animationCoolDown: false,\r\n    nextSelectionSwapTime: -1,\r\n    history: [],\r\n};\r\n\r\nconst detectionActionMapping = {\r\n    [SET_MODEL]: setModel,\r\n    [SET_INTERVAL]: setDetectionInterval,\r\n    [SET_DETECTIONS]: setDetections,\r\n    [SET_OPEN]: setOpen,\r\n    [SET_ANIMATION]: setAnimation,\r\n    [SWAP_SELECTION]: swapSelection,\r\n    [TOGGLE_ANIMATION_COOLDOWN]: toggleAnimationCooldown,\r\n};\r\n\r\nconst detectionStore = (\r\n    state: IDetectionState = initialState,\r\n    action: DetectionActionType,\r\n): IDetectionState => {\r\n    return detectionActionMapping.hasOwnProperty(action.type)\r\n        ? detectionActionMapping[action.type](state, action)\r\n        : state;\r\n};\r\n\r\nfunction setModel(\r\n    state: IDetectionState,\r\n    action: DetectionActionType,\r\n): IDetectionState {\r\n    return { ...state, model: (action as ISetModelAction).payload };\r\n}\r\n\r\nfunction setDetectionInterval(\r\n    state: IDetectionState,\r\n    action: DetectionActionType,\r\n): IDetectionState {\r\n    return {\r\n        ...state,\r\n        detectionInterval: (action as ISetIntervalAction).payload,\r\n    };\r\n}\r\n\r\nfunction setDetections(\r\n    state: IDetectionState,\r\n    action: DetectionActionType,\r\n): IDetectionState {\r\n    const payload = (action as ISetDetectionsAction).payload;\r\n    const newHistory = [...state.history];\r\n    if (state.history.length >= targetingConsts.maxNum) {\r\n        newHistory.shift();\r\n    }\r\n    newHistory.push({\r\n        target: payload.previousTarget,\r\n        color: payload.previousColor,\r\n    });\r\n\r\n    return {\r\n        ...state,\r\n        detections: payload.detections,\r\n        history: newHistory,\r\n    };\r\n}\r\n\r\nfunction swapSelection(\r\n    state: IDetectionState,\r\n    action: DetectionActionType,\r\n): IDetectionState {\r\n    const payload = (action as ISwapSelectionAction).payload;\r\n    return {\r\n        ...state,\r\n        history: initialState.history,\r\n        detections: payload.selection ? [payload.selection] : [],\r\n        nextSelectionSwapTime: payload.nextSelectionSwapTime,\r\n    };\r\n}\r\n\r\nfunction setOpen(\r\n    state: IDetectionState,\r\n    action: DetectionActionType,\r\n): IDetectionState {\r\n    return {\r\n        ...state,\r\n        eyesOpenCoefficient: (action as ISetOpenAction).payload,\r\n    };\r\n}\r\n\r\nfunction setAnimation(\r\n    state: IDetectionState,\r\n    action: DetectionActionType,\r\n): IDetectionState {\r\n    return { ...state, animation: (action as ISetAnimationAction).payload };\r\n}\r\n\r\nfunction toggleAnimationCooldown(\r\n    state: IDetectionState,\r\n    ignore: DetectionActionType,\r\n): IDetectionState {\r\n    return { ...state, animationCoolDown: !state.animationCoolDown };\r\n}\r\n\r\nexport default detectionStore;\r\n","import {\r\n    ISetImageDataAction,\r\n    ISetVideoAction,\r\n    ISetVideoStreamAction,\r\n    IVideoState,\r\n    VideoAction,\r\n    VideoSetAction,\r\n} from '../actions/video/types';\r\n\r\nconst clampedArray = new Uint8ClampedArray(0);\r\n\r\nexport const initialState: IVideoState = {\r\n    webcamAvailable: false,\r\n    video: { width: 0, height: 0, stream: undefined },\r\n    image: { data: clampedArray, width: 0, height: 0 },\r\n};\r\n\r\nconst videoActionMapping = {\r\n    [VideoSetAction.IMAGE_DATA]: setImageData,\r\n    [VideoSetAction.TOGGLE_WEBCAM]: toggleWebcam,\r\n    [VideoSetAction.VIDEO]: setVideo,\r\n    [VideoSetAction.VIDEO_STREAM]: setVideoStream,\r\n};\r\n\r\nconst videoStore = (\r\n    state: IVideoState = initialState,\r\n    action: VideoAction,\r\n): IVideoState => {\r\n    return videoActionMapping.hasOwnProperty(action.type)\r\n        ? videoActionMapping[action.type](state, action)\r\n        : state;\r\n};\r\n\r\nfunction setImageData(state: IVideoState, action: VideoAction): IVideoState {\r\n    return { ...state, image: (action as ISetImageDataAction).payload };\r\n}\r\n\r\nfunction setVideoStream(state: IVideoState, action: VideoAction): IVideoState {\r\n    return {\r\n        ...state,\r\n        video: { ...(action as ISetVideoStreamAction).payload },\r\n    };\r\n}\r\n\r\nfunction toggleWebcam(state: IVideoState, ignore: VideoAction): IVideoState {\r\n    return { ...state, webcamAvailable: !state.webcamAvailable };\r\n}\r\n\r\nfunction setVideo(state: IVideoState, action: VideoAction): IVideoState {\r\n    return {\r\n        ...state,\r\n        video: {\r\n            ...state.video,\r\n            videoElement: (action as ISetVideoAction).payload,\r\n        },\r\n    };\r\n}\r\n\r\nexport default videoStore;\r\n","import { combineReducers } from 'redux';\r\nimport { IConfigState } from '../actions/config/types';\r\nimport { IDetectionState } from '../actions/detections/types';\r\nimport { IVideoState } from '../actions/video/types';\r\nimport configStore from './configReducer';\r\nimport detectionStore from './detectionReducer';\r\nimport videoStore from './videoReducer';\r\n\r\nexport default combineReducers({\r\n    videoStore,\r\n    configStore,\r\n    detectionStore,\r\n});\r\n\r\nexport interface IRootStore {\r\n    videoStore: IVideoState;\r\n    configStore: IConfigState;\r\n    detectionStore: IDetectionState;\r\n}\r\n","import {\r\n    applyMiddleware,\r\n    createStore as createReduxStore,\r\n    Middleware,\r\n    Store,\r\n} from 'redux';\r\nimport { load, save } from 'redux-localstorage-simple';\r\nimport thunk from 'redux-thunk';\r\nimport { IConfigState } from './actions/config/types';\r\nimport { initialConfig } from './reducers/configReducer';\r\nimport reducer, { IRootStore } from './reducers/rootReducer';\r\n\r\nconst states = ['configStore'];\r\nconst middleware: Middleware[] = [thunk, save({ states })];\r\n\r\nexport function createStore() {\r\n    const savedState: object | undefined = load({ states });\r\n    let savedStateIsValid;\r\n    if (savedState.hasOwnProperty('configStore')) {\r\n        const previousConfigState: IConfigState = (savedState as {\r\n            configStore: IConfigState;\r\n        }).configStore;\r\n        savedStateIsValid = hasPropertiesOfInitialConfigState(\r\n            previousConfigState,\r\n        );\r\n    } else {\r\n        savedStateIsValid = false;\r\n    }\r\n\r\n    return createReduxStore(\r\n        reducer,\r\n        savedStateIsValid ? savedState : undefined,\r\n        applyMiddleware(...middleware),\r\n    );\r\n}\r\n\r\nexport function hasPropertiesOfInitialConfigState(objToCheck: object) {\r\n    return hasPropertiesOf(objToCheck, initialConfig);\r\n}\r\n\r\nexport function hasPropertiesOf(source: unknown, target: unknown): boolean {\r\n    if (typeof target !== 'object') {\r\n        return true;\r\n    } else {\r\n        const requiredProps = Object.getOwnPropertyNames(target);\r\n        if (typeof source !== 'object') {\r\n            return requiredProps.length > 0;\r\n        } else {\r\n            return requiredProps.every(\r\n                prop =>\r\n                    (source as object).hasOwnProperty(prop) &&\r\n                    hasPropertiesOf(\r\n                        (source as { [prop: string]: unknown })[prop],\r\n                        (target as { [prop: string]: unknown })[prop],\r\n                    ),\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport type AppStore = Store<IRootStore>;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore } from './store/store';\r\n\r\nconst getEnvironment = () => {\r\n    return window;\r\n};\r\n\r\nconst store = createStore();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App\r\n            environment={getEnvironment()}\r\n            mediaDevices={getEnvironment().navigator.mediaDevices}\r\n        />\r\n    </Provider>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}